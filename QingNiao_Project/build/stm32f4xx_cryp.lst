ARM GAS  /tmp/ccmEvdOk.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_cryp.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "./Library/stm32f4xx_cryp.c"
  20              		.section	.text.CRYP_DeInit,"ax",%progbits
  21              		.align	1
  22              		.global	CRYP_DeInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	CRYP_DeInit:
  28              	.LFB123:
   1:./Library/stm32f4xx_cryp.c **** /**
   2:./Library/stm32f4xx_cryp.c ****   ******************************************************************************
   3:./Library/stm32f4xx_cryp.c ****   * @file    stm32f4xx_cryp.c
   4:./Library/stm32f4xx_cryp.c ****   * @author  MCD Application Team
   5:./Library/stm32f4xx_cryp.c ****   * @version V1.8.1
   6:./Library/stm32f4xx_cryp.c ****   * @date    27-January-2022
   7:./Library/stm32f4xx_cryp.c ****   * @brief   This file provides firmware functions to manage the following 
   8:./Library/stm32f4xx_cryp.c ****   *          functionalities of the  Cryptographic processor (CRYP) peripheral:
   9:./Library/stm32f4xx_cryp.c ****   *           + Initialization and Configuration functions
  10:./Library/stm32f4xx_cryp.c ****   *           + Data treatment functions 
  11:./Library/stm32f4xx_cryp.c ****   *           + Context swapping functions     
  12:./Library/stm32f4xx_cryp.c ****   *           + DMA interface function       
  13:./Library/stm32f4xx_cryp.c ****   *           + Interrupts and flags management       
  14:./Library/stm32f4xx_cryp.c ****   *
  15:./Library/stm32f4xx_cryp.c **** @verbatim
  16:./Library/stm32f4xx_cryp.c ****  ===================================================================      
  17:./Library/stm32f4xx_cryp.c ****                  ##### How to use this driver #####
  18:./Library/stm32f4xx_cryp.c ****  =================================================================== 
  19:./Library/stm32f4xx_cryp.c ****  [..]
  20:./Library/stm32f4xx_cryp.c ****    (#) Enable the CRYP controller clock using 
  21:./Library/stm32f4xx_cryp.c ****        RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_CRYP, ENABLE); function.
  22:./Library/stm32f4xx_cryp.c ****   
  23:./Library/stm32f4xx_cryp.c ****    (#) Initialize the CRYP using CRYP_Init(), CRYP_KeyInit() and if needed 
  24:./Library/stm32f4xx_cryp.c ****        CRYP_IVInit(). 
  25:./Library/stm32f4xx_cryp.c ****   
  26:./Library/stm32f4xx_cryp.c ****    (#) Flush the IN and OUT FIFOs by using CRYP_FIFOFlush() function.
  27:./Library/stm32f4xx_cryp.c ****   
  28:./Library/stm32f4xx_cryp.c ****    (#) Enable the CRYP controller using the CRYP_Cmd() function. 
  29:./Library/stm32f4xx_cryp.c ****   
  30:./Library/stm32f4xx_cryp.c ****    (#) If using DMA for Data input and output transfer, activate the needed DMA 
ARM GAS  /tmp/ccmEvdOk.s 			page 2


  31:./Library/stm32f4xx_cryp.c ****        Requests using CRYP_DMACmd() function 
  32:./Library/stm32f4xx_cryp.c ****   
  33:./Library/stm32f4xx_cryp.c ****    (#) If DMA is not used for data transfer, use CRYP_DataIn() and  CRYP_DataOut() 
  34:./Library/stm32f4xx_cryp.c ****        functions to enter data to IN FIFO and get result from OUT FIFO.
  35:./Library/stm32f4xx_cryp.c ****   
  36:./Library/stm32f4xx_cryp.c ****    (#) To control CRYP events you can use one of the following two methods:
  37:./Library/stm32f4xx_cryp.c ****        (++) Check on CRYP flags using the CRYP_GetFlagStatus() function.  
  38:./Library/stm32f4xx_cryp.c ****        (++) Use CRYP interrupts through the function CRYP_ITConfig() at 
  39:./Library/stm32f4xx_cryp.c ****             initialization phase and CRYP_GetITStatus() function into interrupt 
  40:./Library/stm32f4xx_cryp.c ****             routines in processing phase.
  41:./Library/stm32f4xx_cryp.c ****          
  42:./Library/stm32f4xx_cryp.c ****    (#) Save and restore Cryptographic processor context using CRYP_SaveContext() 
  43:./Library/stm32f4xx_cryp.c ****        and CRYP_RestoreContext() functions.     
  44:./Library/stm32f4xx_cryp.c ****   
  45:./Library/stm32f4xx_cryp.c ****   
  46:./Library/stm32f4xx_cryp.c ****  *** Procedure to perform an encryption or a decryption ***
  47:./Library/stm32f4xx_cryp.c ****  ========================================================== 
  48:./Library/stm32f4xx_cryp.c ****   
  49:./Library/stm32f4xx_cryp.c ****  *** Initialization ***
  50:./Library/stm32f4xx_cryp.c ****  ====================== 
  51:./Library/stm32f4xx_cryp.c ****  [..] 
  52:./Library/stm32f4xx_cryp.c ****    (#) Initialize the peripheral using CRYP_Init(), CRYP_KeyInit() and CRYP_IVInit 
  53:./Library/stm32f4xx_cryp.c ****        functions:
  54:./Library/stm32f4xx_cryp.c ****        (++) Configure the key size (128-, 192- or 256-bit, in the AES only) 
  55:./Library/stm32f4xx_cryp.c ****        (++) Enter the symmetric key 
  56:./Library/stm32f4xx_cryp.c ****        (++) Configure the data type
  57:./Library/stm32f4xx_cryp.c ****        (++) In case of decryption in AES-ECB or AES-CBC, you must prepare 
  58:./Library/stm32f4xx_cryp.c ****             the key: configure the key preparation mode. Then Enable the CRYP 
  59:./Library/stm32f4xx_cryp.c ****             peripheral using CRYP_Cmd() function: the BUSY flag is set. 
  60:./Library/stm32f4xx_cryp.c ****             Wait until BUSY flag is reset : the key is prepared for decryption
  61:./Library/stm32f4xx_cryp.c ****        (++) Configure the algorithm and chaining (the DES/TDES in ECB/CBC, the 
  62:./Library/stm32f4xx_cryp.c ****             AES in ECB/CBC/CTR) 
  63:./Library/stm32f4xx_cryp.c ****        (++) Configure the direction (encryption/decryption).
  64:./Library/stm32f4xx_cryp.c ****        (++) Write the initialization vectors (in CBC or CTR modes only)
  65:./Library/stm32f4xx_cryp.c ****   
  66:./Library/stm32f4xx_cryp.c ****    (#) Flush the IN and OUT FIFOs using the CRYP_FIFOFlush() function
  67:./Library/stm32f4xx_cryp.c ****   
  68:./Library/stm32f4xx_cryp.c ****   
  69:./Library/stm32f4xx_cryp.c ****   *** Basic Processing mode (polling mode) *** 
  70:./Library/stm32f4xx_cryp.c ****   ============================================  
  71:./Library/stm32f4xx_cryp.c ****   [..]
  72:./Library/stm32f4xx_cryp.c ****     (#) Enable the cryptographic processor using CRYP_Cmd() function.
  73:./Library/stm32f4xx_cryp.c ****   
  74:./Library/stm32f4xx_cryp.c ****     (#) Write the first blocks in the input FIFO (2 to 8 words) using 
  75:./Library/stm32f4xx_cryp.c ****         CRYP_DataIn() function.
  76:./Library/stm32f4xx_cryp.c ****   
  77:./Library/stm32f4xx_cryp.c ****     (#) Repeat the following sequence until the complete message has been 
  78:./Library/stm32f4xx_cryp.c ****         processed:
  79:./Library/stm32f4xx_cryp.c ****   
  80:./Library/stm32f4xx_cryp.c ****         (++) Wait for flag CRYP_FLAG_OFNE occurs (using CRYP_GetFlagStatus() 
  81:./Library/stm32f4xx_cryp.c ****             function), then read the OUT-FIFO using CRYP_DataOut() function
  82:./Library/stm32f4xx_cryp.c ****             (1 block or until the FIFO is empty)
  83:./Library/stm32f4xx_cryp.c ****   
  84:./Library/stm32f4xx_cryp.c ****          (++) Wait for flag CRYP_FLAG_IFNF occurs, (using CRYP_GetFlagStatus() 
  85:./Library/stm32f4xx_cryp.c ****             function then write the IN FIFO using CRYP_DataIn() function 
  86:./Library/stm32f4xx_cryp.c ****             (1 block or until the FIFO is full)
  87:./Library/stm32f4xx_cryp.c ****   
ARM GAS  /tmp/ccmEvdOk.s 			page 3


  88:./Library/stm32f4xx_cryp.c ****     (#) At the end of the processing, CRYP_FLAG_BUSY flag will be reset and 
  89:./Library/stm32f4xx_cryp.c ****           both FIFOs are empty (CRYP_FLAG_IFEM is set and CRYP_FLAG_OFNE is 
  90:./Library/stm32f4xx_cryp.c ****           reset). You can disable the peripheral using CRYP_Cmd() function.
  91:./Library/stm32f4xx_cryp.c ****   
  92:./Library/stm32f4xx_cryp.c ****  *** Interrupts Processing mode *** 
  93:./Library/stm32f4xx_cryp.c ****  ==================================
  94:./Library/stm32f4xx_cryp.c ****  [..] In this mode, Processing is done when the data are transferred by the 
  95:./Library/stm32f4xx_cryp.c ****       CPU during interrupts.
  96:./Library/stm32f4xx_cryp.c ****   
  97:./Library/stm32f4xx_cryp.c ****     (#) Enable the interrupts CRYP_IT_INI and CRYP_IT_OUTI using CRYP_ITConfig()
  98:./Library/stm32f4xx_cryp.c ****         function.
  99:./Library/stm32f4xx_cryp.c ****   
 100:./Library/stm32f4xx_cryp.c ****     (#) Enable the cryptographic processor using CRYP_Cmd() function.
 101:./Library/stm32f4xx_cryp.c ****   
 102:./Library/stm32f4xx_cryp.c ****     (#) In the CRYP_IT_INI interrupt handler : load the input message into the 
 103:./Library/stm32f4xx_cryp.c ****          IN FIFO using CRYP_DataIn() function . You can load 2 or 4 words at a 
 104:./Library/stm32f4xx_cryp.c ****          time, or load data until the IN FIFO is full. When the last word of
 105:./Library/stm32f4xx_cryp.c ****          the message has been entered into the IN FIFO, disable the CRYP_IT_INI 
 106:./Library/stm32f4xx_cryp.c ****          interrupt (using CRYP_ITConfig() function).
 107:./Library/stm32f4xx_cryp.c ****   
 108:./Library/stm32f4xx_cryp.c ****     (#) In the CRYP_IT_OUTI interrupt handler : read the output message from 
 109:./Library/stm32f4xx_cryp.c ****          the OUT FIFO using CRYP_DataOut() function. You can read 1 block (2 or 
 110:./Library/stm32f4xx_cryp.c ****          4 words) at a time or read data until the FIFO is empty.
 111:./Library/stm32f4xx_cryp.c ****          When the last word has been read, INIM=0, BUSY=0 and both FIFOs are 
 112:./Library/stm32f4xx_cryp.c ****          empty (CRYP_FLAG_IFEM is set and CRYP_FLAG_OFNE is reset). 
 113:./Library/stm32f4xx_cryp.c ****          You can disable the CRYP_IT_OUTI interrupt (using CRYP_ITConfig() 
 114:./Library/stm32f4xx_cryp.c ****          function) and you can disable the peripheral using CRYP_Cmd() function.
 115:./Library/stm32f4xx_cryp.c ****   
 116:./Library/stm32f4xx_cryp.c ****  *** DMA Processing mode *** 
 117:./Library/stm32f4xx_cryp.c ****  ===========================
 118:./Library/stm32f4xx_cryp.c ****  [..] In this mode, Processing is done when the DMA is used to transfer the 
 119:./Library/stm32f4xx_cryp.c ****       data from/to the memory.
 120:./Library/stm32f4xx_cryp.c ****   
 121:./Library/stm32f4xx_cryp.c ****     (#) Configure the DMA controller to transfer the input data from the 
 122:./Library/stm32f4xx_cryp.c ****          memory using DMA_Init() function. 
 123:./Library/stm32f4xx_cryp.c ****          The transfer length is the length of the message. 
 124:./Library/stm32f4xx_cryp.c ****          As message padding is not managed by the peripheral, the message 
 125:./Library/stm32f4xx_cryp.c ****          length must be an entire number of blocks. The data are transferred 
 126:./Library/stm32f4xx_cryp.c ****          in burst mode. The burst length is 4 words in the AES and 2 or 4 
 127:./Library/stm32f4xx_cryp.c ****          words in the DES/TDES. The DMA should be configured to set an 
 128:./Library/stm32f4xx_cryp.c ****          interrupt on transfer completion of the output data to indicate that 
 129:./Library/stm32f4xx_cryp.c ****          the processing is finished. 
 130:./Library/stm32f4xx_cryp.c ****          Refer to DMA peripheral driver for more details.  
 131:./Library/stm32f4xx_cryp.c ****   
 132:./Library/stm32f4xx_cryp.c ****      (#) Enable the cryptographic processor using CRYP_Cmd() function. 
 133:./Library/stm32f4xx_cryp.c ****          Enable the DMA requests CRYP_DMAReq_DataIN and CRYP_DMAReq_DataOUT 
 134:./Library/stm32f4xx_cryp.c ****          using CRYP_DMACmd() function.
 135:./Library/stm32f4xx_cryp.c ****   
 136:./Library/stm32f4xx_cryp.c ****      (#) All the transfers and processing are managed by the DMA and the 
 137:./Library/stm32f4xx_cryp.c ****          cryptographic processor. The DMA transfer complete interrupt indicates 
 138:./Library/stm32f4xx_cryp.c ****          that the processing is complete. Both FIFOs are normally empty and 
 139:./Library/stm32f4xx_cryp.c ****          CRYP_FLAG_BUSY flag is reset.
 140:./Library/stm32f4xx_cryp.c ****   
 141:./Library/stm32f4xx_cryp.c ****     @endverbatim
 142:./Library/stm32f4xx_cryp.c ****   *
 143:./Library/stm32f4xx_cryp.c ****   ******************************************************************************
 144:./Library/stm32f4xx_cryp.c ****   * @attention
ARM GAS  /tmp/ccmEvdOk.s 			page 4


 145:./Library/stm32f4xx_cryp.c ****   *
 146:./Library/stm32f4xx_cryp.c ****   * Copyright (c) 2016 STMicroelectronics.
 147:./Library/stm32f4xx_cryp.c ****   * All rights reserved.
 148:./Library/stm32f4xx_cryp.c ****   *
 149:./Library/stm32f4xx_cryp.c ****   * This software is licensed under terms that can be found in the LICENSE file
 150:./Library/stm32f4xx_cryp.c ****   * in the root directory of this software component.
 151:./Library/stm32f4xx_cryp.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
 152:./Library/stm32f4xx_cryp.c ****   *
 153:./Library/stm32f4xx_cryp.c ****   ******************************************************************************
 154:./Library/stm32f4xx_cryp.c ****   */
 155:./Library/stm32f4xx_cryp.c **** 
 156:./Library/stm32f4xx_cryp.c **** /* Includes ------------------------------------------------------------------*/
 157:./Library/stm32f4xx_cryp.c **** #include "stm32f4xx_cryp.h"
 158:./Library/stm32f4xx_cryp.c **** #include "stm32f4xx_rcc.h"
 159:./Library/stm32f4xx_cryp.c **** 
 160:./Library/stm32f4xx_cryp.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 161:./Library/stm32f4xx_cryp.c ****   * @{
 162:./Library/stm32f4xx_cryp.c ****   */
 163:./Library/stm32f4xx_cryp.c **** 
 164:./Library/stm32f4xx_cryp.c **** /** @defgroup CRYP 
 165:./Library/stm32f4xx_cryp.c ****   * @brief CRYP driver modules
 166:./Library/stm32f4xx_cryp.c ****   * @{
 167:./Library/stm32f4xx_cryp.c ****   */ 
 168:./Library/stm32f4xx_cryp.c **** 
 169:./Library/stm32f4xx_cryp.c **** /* Private typedef -----------------------------------------------------------*/
 170:./Library/stm32f4xx_cryp.c **** /* Private define ------------------------------------------------------------*/
 171:./Library/stm32f4xx_cryp.c **** #define FLAG_MASK     ((uint8_t)0x20)
 172:./Library/stm32f4xx_cryp.c **** #define MAX_TIMEOUT   ((uint16_t)0xFFFF)
 173:./Library/stm32f4xx_cryp.c **** 
 174:./Library/stm32f4xx_cryp.c **** /* Private macro -------------------------------------------------------------*/
 175:./Library/stm32f4xx_cryp.c **** /* Private variables ---------------------------------------------------------*/
 176:./Library/stm32f4xx_cryp.c **** /* Private function prototypes -----------------------------------------------*/
 177:./Library/stm32f4xx_cryp.c **** /* Private functions ---------------------------------------------------------*/
 178:./Library/stm32f4xx_cryp.c **** 
 179:./Library/stm32f4xx_cryp.c **** /** @defgroup CRYP_Private_Functions
 180:./Library/stm32f4xx_cryp.c ****   * @{
 181:./Library/stm32f4xx_cryp.c ****   */ 
 182:./Library/stm32f4xx_cryp.c **** 
 183:./Library/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group1 Initialization and Configuration functions
 184:./Library/stm32f4xx_cryp.c ****  *  @brief    Initialization and Configuration functions 
 185:./Library/stm32f4xx_cryp.c ****  *
 186:./Library/stm32f4xx_cryp.c **** @verbatim    
 187:./Library/stm32f4xx_cryp.c ****  ===============================================================================
 188:./Library/stm32f4xx_cryp.c ****              ##### Initialization and Configuration functions #####
 189:./Library/stm32f4xx_cryp.c ****  ===============================================================================  
 190:./Library/stm32f4xx_cryp.c ****  [..] This section provides functions allowing to 
 191:./Library/stm32f4xx_cryp.c ****    (+) Initialize the cryptographic Processor using CRYP_Init() function 
 192:./Library/stm32f4xx_cryp.c ****        (++)  Encrypt or Decrypt 
 193:./Library/stm32f4xx_cryp.c ****        (++)  mode : TDES-ECB, TDES-CBC, 
 194:./Library/stm32f4xx_cryp.c ****                     DES-ECB, DES-CBC, 
 195:./Library/stm32f4xx_cryp.c ****                     AES-ECB, AES-CBC, AES-CTR, AES-Key, AES-GCM, AES-CCM 
 196:./Library/stm32f4xx_cryp.c ****        (++) DataType :  32-bit data, 16-bit data, bit data or bit-string
 197:./Library/stm32f4xx_cryp.c ****        (++) Key Size (only in AES modes)
 198:./Library/stm32f4xx_cryp.c ****    (+) Configure the Encrypt or Decrypt Key using CRYP_KeyInit() function 
 199:./Library/stm32f4xx_cryp.c ****    (+) Configure the Initialization Vectors(IV) for CBC and CTR modes using 
 200:./Library/stm32f4xx_cryp.c ****        CRYP_IVInit() function.  
 201:./Library/stm32f4xx_cryp.c ****    (+) Flushes the IN and OUT FIFOs : using CRYP_FIFOFlush() function.                         
ARM GAS  /tmp/ccmEvdOk.s 			page 5


 202:./Library/stm32f4xx_cryp.c ****    (+) Enable or disable the CRYP Processor using CRYP_Cmd() function 
 203:./Library/stm32f4xx_cryp.c ****        
 204:./Library/stm32f4xx_cryp.c **** @endverbatim
 205:./Library/stm32f4xx_cryp.c ****   * @{
 206:./Library/stm32f4xx_cryp.c ****   */
 207:./Library/stm32f4xx_cryp.c **** /**
 208:./Library/stm32f4xx_cryp.c ****   * @brief  Deinitializes the CRYP peripheral registers to their default reset values
 209:./Library/stm32f4xx_cryp.c ****   * @param  None
 210:./Library/stm32f4xx_cryp.c ****   * @retval None
 211:./Library/stm32f4xx_cryp.c ****   */
 212:./Library/stm32f4xx_cryp.c **** void CRYP_DeInit(void)
 213:./Library/stm32f4xx_cryp.c **** {
  29              		.loc 1 213 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
 214:./Library/stm32f4xx_cryp.c ****   /* Enable CRYP reset state */
 215:./Library/stm32f4xx_cryp.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_CRYP, ENABLE);
  38              		.loc 1 215 3 view .LVU1
  39 0002 0121     		movs	r1, #1
  40 0004 1020     		movs	r0, #16
  41 0006 FFF7FEFF 		bl	RCC_AHB2PeriphResetCmd
  42              	.LVL0:
 216:./Library/stm32f4xx_cryp.c **** 
 217:./Library/stm32f4xx_cryp.c ****   /* Release CRYP from reset state */
 218:./Library/stm32f4xx_cryp.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_CRYP, DISABLE);
  43              		.loc 1 218 3 view .LVU2
  44 000a 0021     		movs	r1, #0
  45 000c 1020     		movs	r0, #16
  46 000e FFF7FEFF 		bl	RCC_AHB2PeriphResetCmd
  47              	.LVL1:
 219:./Library/stm32f4xx_cryp.c **** }
  48              		.loc 1 219 1 is_stmt 0 view .LVU3
  49 0012 08BD     		pop	{r3, pc}
  50              		.cfi_endproc
  51              	.LFE123:
  53              		.section	.text.CRYP_Init,"ax",%progbits
  54              		.align	1
  55              		.global	CRYP_Init
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  60              	CRYP_Init:
  61              	.LVL2:
  62              	.LFB124:
 220:./Library/stm32f4xx_cryp.c **** 
 221:./Library/stm32f4xx_cryp.c **** /**
 222:./Library/stm32f4xx_cryp.c ****   * @brief  Initializes the CRYP peripheral according to the specified parameters
 223:./Library/stm32f4xx_cryp.c ****   *         in the CRYP_InitStruct.
 224:./Library/stm32f4xx_cryp.c ****   * @param  CRYP_InitStruct: pointer to a CRYP_InitTypeDef structure that contains
 225:./Library/stm32f4xx_cryp.c ****   *         the configuration information for the CRYP peripheral.
 226:./Library/stm32f4xx_cryp.c ****   * @retval None
ARM GAS  /tmp/ccmEvdOk.s 			page 6


 227:./Library/stm32f4xx_cryp.c ****   */
 228:./Library/stm32f4xx_cryp.c **** void CRYP_Init(CRYP_InitTypeDef* CRYP_InitStruct)
 229:./Library/stm32f4xx_cryp.c **** {
  63              		.loc 1 229 1 is_stmt 1 view -0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
  67              		@ link register save eliminated.
 230:./Library/stm32f4xx_cryp.c ****   /* Check the parameters */
 231:./Library/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_ALGOMODE(CRYP_InitStruct->CRYP_AlgoMode));
  68              		.loc 1 231 3 view .LVU5
 232:./Library/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_DATATYPE(CRYP_InitStruct->CRYP_DataType));
  69              		.loc 1 232 3 view .LVU6
 233:./Library/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_ALGODIR(CRYP_InitStruct->CRYP_AlgoDir));
  70              		.loc 1 233 3 view .LVU7
 234:./Library/stm32f4xx_cryp.c **** 
 235:./Library/stm32f4xx_cryp.c ****   /* Select Algorithm mode*/  
 236:./Library/stm32f4xx_cryp.c ****   CRYP->CR &= ~CRYP_CR_ALGOMODE;
  71              		.loc 1 236 3 view .LVU8
  72              		.loc 1 236 7 is_stmt 0 view .LVU9
  73 0000 174B     		ldr	r3, .L6
  74 0002 1A68     		ldr	r2, [r3]
  75              		.loc 1 236 12 view .LVU10
  76 0004 22F40022 		bic	r2, r2, #524288
  77 0008 22F03802 		bic	r2, r2, #56
  78 000c 1A60     		str	r2, [r3]
 237:./Library/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_InitStruct->CRYP_AlgoMode;
  79              		.loc 1 237 3 is_stmt 1 view .LVU11
  80              		.loc 1 237 7 is_stmt 0 view .LVU12
  81 000e 1A68     		ldr	r2, [r3]
  82              		.loc 1 237 30 view .LVU13
  83 0010 4168     		ldr	r1, [r0, #4]
  84              		.loc 1 237 12 view .LVU14
  85 0012 0A43     		orrs	r2, r2, r1
  86 0014 1A60     		str	r2, [r3]
 238:./Library/stm32f4xx_cryp.c **** 
 239:./Library/stm32f4xx_cryp.c ****   /* Select dataType */ 
 240:./Library/stm32f4xx_cryp.c ****   CRYP->CR &= ~CRYP_CR_DATATYPE;
  87              		.loc 1 240 3 is_stmt 1 view .LVU15
  88              		.loc 1 240 7 is_stmt 0 view .LVU16
  89 0016 1A68     		ldr	r2, [r3]
  90              		.loc 1 240 12 view .LVU17
  91 0018 22F0C002 		bic	r2, r2, #192
  92 001c 1A60     		str	r2, [r3]
 241:./Library/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_InitStruct->CRYP_DataType;
  93              		.loc 1 241 3 is_stmt 1 view .LVU18
  94              		.loc 1 241 7 is_stmt 0 view .LVU19
  95 001e 1A68     		ldr	r2, [r3]
  96              		.loc 1 241 30 view .LVU20
  97 0020 8168     		ldr	r1, [r0, #8]
  98              		.loc 1 241 12 view .LVU21
  99 0022 0A43     		orrs	r2, r2, r1
 100 0024 1A60     		str	r2, [r3]
 242:./Library/stm32f4xx_cryp.c **** 
 243:./Library/stm32f4xx_cryp.c ****   /* select Key size (used only with AES algorithm) */
 244:./Library/stm32f4xx_cryp.c ****   if ((CRYP_InitStruct->CRYP_AlgoMode != CRYP_AlgoMode_TDES_ECB) &&
 101              		.loc 1 244 3 is_stmt 1 view .LVU22
ARM GAS  /tmp/ccmEvdOk.s 			page 7


 102              		.loc 1 244 23 is_stmt 0 view .LVU23
 103 0026 4368     		ldr	r3, [r0, #4]
 104              		.loc 1 244 6 view .LVU24
 105 0028 83B1     		cbz	r3, .L4
 106 002a 182B     		cmp	r3, #24
 107 002c 05D8     		bhi	.L5
 108 002e 0D4A     		ldr	r2, .L6+4
 109 0030 22FA03F3 		lsr	r3, r2, r3
 110 0034 13F0010F 		tst	r3, #1
 111 0038 08D1     		bne	.L4
 112              	.L5:
 245:./Library/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode != CRYP_AlgoMode_TDES_CBC) &&
 246:./Library/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode != CRYP_AlgoMode_DES_ECB) &&
 247:./Library/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode != CRYP_AlgoMode_DES_CBC))
 248:./Library/stm32f4xx_cryp.c ****   {
 249:./Library/stm32f4xx_cryp.c ****     assert_param(IS_CRYP_KEYSIZE(CRYP_InitStruct->CRYP_KeySize));
 113              		.loc 1 249 5 is_stmt 1 view .LVU25
 250:./Library/stm32f4xx_cryp.c ****     CRYP->CR &= ~CRYP_CR_KEYSIZE;
 114              		.loc 1 250 5 view .LVU26
 115              		.loc 1 250 9 is_stmt 0 view .LVU27
 116 003a 094B     		ldr	r3, .L6
 117 003c 1A68     		ldr	r2, [r3]
 118              		.loc 1 250 14 view .LVU28
 119 003e 22F44072 		bic	r2, r2, #768
 120 0042 1A60     		str	r2, [r3]
 251:./Library/stm32f4xx_cryp.c ****     CRYP->CR |= CRYP_InitStruct->CRYP_KeySize; /* Key size and value must be 
 121              		.loc 1 251 5 is_stmt 1 view .LVU29
 122              		.loc 1 251 9 is_stmt 0 view .LVU30
 123 0044 1A68     		ldr	r2, [r3]
 124              		.loc 1 251 32 view .LVU31
 125 0046 C168     		ldr	r1, [r0, #12]
 126              		.loc 1 251 14 view .LVU32
 127 0048 0A43     		orrs	r2, r2, r1
 128 004a 1A60     		str	r2, [r3]
 129              	.L4:
 252:./Library/stm32f4xx_cryp.c ****                                                   configured once the key has 
 253:./Library/stm32f4xx_cryp.c ****                                                   been prepared */
 254:./Library/stm32f4xx_cryp.c ****   }
 255:./Library/stm32f4xx_cryp.c **** 
 256:./Library/stm32f4xx_cryp.c ****   /* Select data Direction */ 
 257:./Library/stm32f4xx_cryp.c ****   CRYP->CR &= ~CRYP_CR_ALGODIR;
 130              		.loc 1 257 3 is_stmt 1 view .LVU33
 131              		.loc 1 257 7 is_stmt 0 view .LVU34
 132 004c 044B     		ldr	r3, .L6
 133 004e 1A68     		ldr	r2, [r3]
 134              		.loc 1 257 12 view .LVU35
 135 0050 22F00402 		bic	r2, r2, #4
 136 0054 1A60     		str	r2, [r3]
 258:./Library/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_InitStruct->CRYP_AlgoDir;
 137              		.loc 1 258 3 is_stmt 1 view .LVU36
 138              		.loc 1 258 7 is_stmt 0 view .LVU37
 139 0056 1A68     		ldr	r2, [r3]
 140              		.loc 1 258 30 view .LVU38
 141 0058 0168     		ldr	r1, [r0]
 142              		.loc 1 258 12 view .LVU39
 143 005a 0A43     		orrs	r2, r2, r1
 144 005c 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccmEvdOk.s 			page 8


 259:./Library/stm32f4xx_cryp.c **** }
 145              		.loc 1 259 1 view .LVU40
 146 005e 7047     		bx	lr
 147              	.L7:
 148              		.align	2
 149              	.L6:
 150 0060 00000650 		.word	1342570496
 151 0064 00010101 		.word	16843008
 152              		.cfi_endproc
 153              	.LFE124:
 155              		.section	.text.CRYP_StructInit,"ax",%progbits
 156              		.align	1
 157              		.global	CRYP_StructInit
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 162              	CRYP_StructInit:
 163              	.LVL3:
 164              	.LFB125:
 260:./Library/stm32f4xx_cryp.c **** 
 261:./Library/stm32f4xx_cryp.c **** /**
 262:./Library/stm32f4xx_cryp.c ****   * @brief  Fills each CRYP_InitStruct member with its default value.
 263:./Library/stm32f4xx_cryp.c ****   * @param  CRYP_InitStruct: pointer to a CRYP_InitTypeDef structure which will
 264:./Library/stm32f4xx_cryp.c ****   *         be initialized.
 265:./Library/stm32f4xx_cryp.c ****   * @retval None
 266:./Library/stm32f4xx_cryp.c ****   */
 267:./Library/stm32f4xx_cryp.c **** void CRYP_StructInit(CRYP_InitTypeDef* CRYP_InitStruct)
 268:./Library/stm32f4xx_cryp.c **** {
 165              		.loc 1 268 1 is_stmt 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 269:./Library/stm32f4xx_cryp.c ****   /* Initialize the CRYP_AlgoDir member */
 270:./Library/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_AlgoDir = CRYP_AlgoDir_Encrypt;
 170              		.loc 1 270 3 view .LVU42
 171              		.loc 1 270 33 is_stmt 0 view .LVU43
 172 0000 0023     		movs	r3, #0
 173 0002 0360     		str	r3, [r0]
 271:./Library/stm32f4xx_cryp.c **** 
 272:./Library/stm32f4xx_cryp.c ****   /* initialize the CRYP_AlgoMode member */
 273:./Library/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_AlgoMode = CRYP_AlgoMode_TDES_ECB;
 174              		.loc 1 273 3 is_stmt 1 view .LVU44
 175              		.loc 1 273 34 is_stmt 0 view .LVU45
 176 0004 4360     		str	r3, [r0, #4]
 274:./Library/stm32f4xx_cryp.c **** 
 275:./Library/stm32f4xx_cryp.c ****   /* initialize the CRYP_DataType member */
 276:./Library/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_DataType = CRYP_DataType_32b;
 177              		.loc 1 276 3 is_stmt 1 view .LVU46
 178              		.loc 1 276 34 is_stmt 0 view .LVU47
 179 0006 8360     		str	r3, [r0, #8]
 277:./Library/stm32f4xx_cryp.c ****   
 278:./Library/stm32f4xx_cryp.c ****   /* Initialize the CRYP_KeySize member */
 279:./Library/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_KeySize = CRYP_KeySize_128b;
 180              		.loc 1 279 3 is_stmt 1 view .LVU48
 181              		.loc 1 279 33 is_stmt 0 view .LVU49
 182 0008 C360     		str	r3, [r0, #12]
ARM GAS  /tmp/ccmEvdOk.s 			page 9


 280:./Library/stm32f4xx_cryp.c **** }
 183              		.loc 1 280 1 view .LVU50
 184 000a 7047     		bx	lr
 185              		.cfi_endproc
 186              	.LFE125:
 188              		.section	.text.CRYP_KeyInit,"ax",%progbits
 189              		.align	1
 190              		.global	CRYP_KeyInit
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 195              	CRYP_KeyInit:
 196              	.LVL4:
 197              	.LFB126:
 281:./Library/stm32f4xx_cryp.c **** 
 282:./Library/stm32f4xx_cryp.c **** /**
 283:./Library/stm32f4xx_cryp.c ****   * @brief  Initializes the CRYP Keys according to the specified parameters in
 284:./Library/stm32f4xx_cryp.c ****   *         the CRYP_KeyInitStruct.
 285:./Library/stm32f4xx_cryp.c ****   * @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure that
 286:./Library/stm32f4xx_cryp.c ****   *         contains the configuration information for the CRYP Keys.
 287:./Library/stm32f4xx_cryp.c ****   * @retval None
 288:./Library/stm32f4xx_cryp.c ****   */
 289:./Library/stm32f4xx_cryp.c **** void CRYP_KeyInit(CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
 290:./Library/stm32f4xx_cryp.c **** {
 198              		.loc 1 290 1 is_stmt 1 view -0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 291:./Library/stm32f4xx_cryp.c ****   /* Key Initialisation */
 292:./Library/stm32f4xx_cryp.c ****   CRYP->K0LR = CRYP_KeyInitStruct->CRYP_Key0Left;
 203              		.loc 1 292 3 view .LVU52
 204              		.loc 1 292 34 is_stmt 0 view .LVU53
 205 0000 0268     		ldr	r2, [r0]
 206              		.loc 1 292 14 view .LVU54
 207 0002 084B     		ldr	r3, .L10
 208 0004 1A62     		str	r2, [r3, #32]
 293:./Library/stm32f4xx_cryp.c ****   CRYP->K0RR = CRYP_KeyInitStruct->CRYP_Key0Right;
 209              		.loc 1 293 3 is_stmt 1 view .LVU55
 210              		.loc 1 293 34 is_stmt 0 view .LVU56
 211 0006 4268     		ldr	r2, [r0, #4]
 212              		.loc 1 293 14 view .LVU57
 213 0008 5A62     		str	r2, [r3, #36]
 294:./Library/stm32f4xx_cryp.c ****   CRYP->K1LR = CRYP_KeyInitStruct->CRYP_Key1Left;
 214              		.loc 1 294 3 is_stmt 1 view .LVU58
 215              		.loc 1 294 34 is_stmt 0 view .LVU59
 216 000a 8268     		ldr	r2, [r0, #8]
 217              		.loc 1 294 14 view .LVU60
 218 000c 9A62     		str	r2, [r3, #40]
 295:./Library/stm32f4xx_cryp.c ****   CRYP->K1RR = CRYP_KeyInitStruct->CRYP_Key1Right;
 219              		.loc 1 295 3 is_stmt 1 view .LVU61
 220              		.loc 1 295 34 is_stmt 0 view .LVU62
 221 000e C268     		ldr	r2, [r0, #12]
 222              		.loc 1 295 14 view .LVU63
 223 0010 DA62     		str	r2, [r3, #44]
 296:./Library/stm32f4xx_cryp.c ****   CRYP->K2LR = CRYP_KeyInitStruct->CRYP_Key2Left;
 224              		.loc 1 296 3 is_stmt 1 view .LVU64
ARM GAS  /tmp/ccmEvdOk.s 			page 10


 225              		.loc 1 296 34 is_stmt 0 view .LVU65
 226 0012 0269     		ldr	r2, [r0, #16]
 227              		.loc 1 296 14 view .LVU66
 228 0014 1A63     		str	r2, [r3, #48]
 297:./Library/stm32f4xx_cryp.c ****   CRYP->K2RR = CRYP_KeyInitStruct->CRYP_Key2Right;
 229              		.loc 1 297 3 is_stmt 1 view .LVU67
 230              		.loc 1 297 34 is_stmt 0 view .LVU68
 231 0016 4269     		ldr	r2, [r0, #20]
 232              		.loc 1 297 14 view .LVU69
 233 0018 5A63     		str	r2, [r3, #52]
 298:./Library/stm32f4xx_cryp.c ****   CRYP->K3LR = CRYP_KeyInitStruct->CRYP_Key3Left;
 234              		.loc 1 298 3 is_stmt 1 view .LVU70
 235              		.loc 1 298 34 is_stmt 0 view .LVU71
 236 001a 8269     		ldr	r2, [r0, #24]
 237              		.loc 1 298 14 view .LVU72
 238 001c 9A63     		str	r2, [r3, #56]
 299:./Library/stm32f4xx_cryp.c ****   CRYP->K3RR = CRYP_KeyInitStruct->CRYP_Key3Right;
 239              		.loc 1 299 3 is_stmt 1 view .LVU73
 240              		.loc 1 299 34 is_stmt 0 view .LVU74
 241 001e C269     		ldr	r2, [r0, #28]
 242              		.loc 1 299 14 view .LVU75
 243 0020 DA63     		str	r2, [r3, #60]
 300:./Library/stm32f4xx_cryp.c **** }
 244              		.loc 1 300 1 view .LVU76
 245 0022 7047     		bx	lr
 246              	.L11:
 247              		.align	2
 248              	.L10:
 249 0024 00000650 		.word	1342570496
 250              		.cfi_endproc
 251              	.LFE126:
 253              		.section	.text.CRYP_KeyStructInit,"ax",%progbits
 254              		.align	1
 255              		.global	CRYP_KeyStructInit
 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 260              	CRYP_KeyStructInit:
 261              	.LVL5:
 262              	.LFB127:
 301:./Library/stm32f4xx_cryp.c **** 
 302:./Library/stm32f4xx_cryp.c **** /**
 303:./Library/stm32f4xx_cryp.c ****   * @brief  Fills each CRYP_KeyInitStruct member with its default value.
 304:./Library/stm32f4xx_cryp.c ****   * @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure 
 305:./Library/stm32f4xx_cryp.c ****   *         which will be initialized.
 306:./Library/stm32f4xx_cryp.c ****   * @retval None
 307:./Library/stm32f4xx_cryp.c ****   */
 308:./Library/stm32f4xx_cryp.c **** void CRYP_KeyStructInit(CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
 309:./Library/stm32f4xx_cryp.c **** {
 263              		.loc 1 309 1 is_stmt 1 view -0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 310:./Library/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key0Left  = 0;
 268              		.loc 1 310 3 view .LVU78
 269              		.loc 1 310 38 is_stmt 0 view .LVU79
ARM GAS  /tmp/ccmEvdOk.s 			page 11


 270 0000 0023     		movs	r3, #0
 271 0002 0360     		str	r3, [r0]
 311:./Library/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key0Right = 0;
 272              		.loc 1 311 3 is_stmt 1 view .LVU80
 273              		.loc 1 311 38 is_stmt 0 view .LVU81
 274 0004 4360     		str	r3, [r0, #4]
 312:./Library/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key1Left  = 0;
 275              		.loc 1 312 3 is_stmt 1 view .LVU82
 276              		.loc 1 312 38 is_stmt 0 view .LVU83
 277 0006 8360     		str	r3, [r0, #8]
 313:./Library/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key1Right = 0;
 278              		.loc 1 313 3 is_stmt 1 view .LVU84
 279              		.loc 1 313 38 is_stmt 0 view .LVU85
 280 0008 C360     		str	r3, [r0, #12]
 314:./Library/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key2Left  = 0;
 281              		.loc 1 314 3 is_stmt 1 view .LVU86
 282              		.loc 1 314 38 is_stmt 0 view .LVU87
 283 000a 0361     		str	r3, [r0, #16]
 315:./Library/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key2Right = 0;
 284              		.loc 1 315 3 is_stmt 1 view .LVU88
 285              		.loc 1 315 38 is_stmt 0 view .LVU89
 286 000c 4361     		str	r3, [r0, #20]
 316:./Library/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key3Left  = 0;
 287              		.loc 1 316 3 is_stmt 1 view .LVU90
 288              		.loc 1 316 38 is_stmt 0 view .LVU91
 289 000e 8361     		str	r3, [r0, #24]
 317:./Library/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key3Right = 0;
 290              		.loc 1 317 3 is_stmt 1 view .LVU92
 291              		.loc 1 317 38 is_stmt 0 view .LVU93
 292 0010 C361     		str	r3, [r0, #28]
 318:./Library/stm32f4xx_cryp.c **** }
 293              		.loc 1 318 1 view .LVU94
 294 0012 7047     		bx	lr
 295              		.cfi_endproc
 296              	.LFE127:
 298              		.section	.text.CRYP_IVInit,"ax",%progbits
 299              		.align	1
 300              		.global	CRYP_IVInit
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 305              	CRYP_IVInit:
 306              	.LVL6:
 307              	.LFB128:
 319:./Library/stm32f4xx_cryp.c **** /**
 320:./Library/stm32f4xx_cryp.c ****   * @brief  Initializes the CRYP Initialization Vectors(IV) according to the
 321:./Library/stm32f4xx_cryp.c ****   *         specified parameters in the CRYP_IVInitStruct.
 322:./Library/stm32f4xx_cryp.c ****   * @param  CRYP_IVInitStruct: pointer to a CRYP_IVInitTypeDef structure that contains
 323:./Library/stm32f4xx_cryp.c ****   *         the configuration information for the CRYP Initialization Vectors(IV).
 324:./Library/stm32f4xx_cryp.c ****   * @retval None
 325:./Library/stm32f4xx_cryp.c ****   */
 326:./Library/stm32f4xx_cryp.c **** void CRYP_IVInit(CRYP_IVInitTypeDef* CRYP_IVInitStruct)
 327:./Library/stm32f4xx_cryp.c **** {
 308              		.loc 1 327 1 is_stmt 1 view -0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccmEvdOk.s 			page 12


 312              		@ link register save eliminated.
 328:./Library/stm32f4xx_cryp.c ****   CRYP->IV0LR = CRYP_IVInitStruct->CRYP_IV0Left;
 313              		.loc 1 328 3 view .LVU96
 314              		.loc 1 328 34 is_stmt 0 view .LVU97
 315 0000 0268     		ldr	r2, [r0]
 316              		.loc 1 328 15 view .LVU98
 317 0002 044B     		ldr	r3, .L14
 318 0004 1A64     		str	r2, [r3, #64]
 329:./Library/stm32f4xx_cryp.c ****   CRYP->IV0RR = CRYP_IVInitStruct->CRYP_IV0Right;
 319              		.loc 1 329 3 is_stmt 1 view .LVU99
 320              		.loc 1 329 34 is_stmt 0 view .LVU100
 321 0006 4268     		ldr	r2, [r0, #4]
 322              		.loc 1 329 15 view .LVU101
 323 0008 5A64     		str	r2, [r3, #68]
 330:./Library/stm32f4xx_cryp.c ****   CRYP->IV1LR = CRYP_IVInitStruct->CRYP_IV1Left;
 324              		.loc 1 330 3 is_stmt 1 view .LVU102
 325              		.loc 1 330 34 is_stmt 0 view .LVU103
 326 000a 8268     		ldr	r2, [r0, #8]
 327              		.loc 1 330 15 view .LVU104
 328 000c 9A64     		str	r2, [r3, #72]
 331:./Library/stm32f4xx_cryp.c ****   CRYP->IV1RR = CRYP_IVInitStruct->CRYP_IV1Right;
 329              		.loc 1 331 3 is_stmt 1 view .LVU105
 330              		.loc 1 331 34 is_stmt 0 view .LVU106
 331 000e C268     		ldr	r2, [r0, #12]
 332              		.loc 1 331 15 view .LVU107
 333 0010 DA64     		str	r2, [r3, #76]
 332:./Library/stm32f4xx_cryp.c **** }
 334              		.loc 1 332 1 view .LVU108
 335 0012 7047     		bx	lr
 336              	.L15:
 337              		.align	2
 338              	.L14:
 339 0014 00000650 		.word	1342570496
 340              		.cfi_endproc
 341              	.LFE128:
 343              		.section	.text.CRYP_IVStructInit,"ax",%progbits
 344              		.align	1
 345              		.global	CRYP_IVStructInit
 346              		.syntax unified
 347              		.thumb
 348              		.thumb_func
 350              	CRYP_IVStructInit:
 351              	.LVL7:
 352              	.LFB129:
 333:./Library/stm32f4xx_cryp.c **** 
 334:./Library/stm32f4xx_cryp.c **** /**
 335:./Library/stm32f4xx_cryp.c ****   * @brief  Fills each CRYP_IVInitStruct member with its default value.
 336:./Library/stm32f4xx_cryp.c ****   * @param  CRYP_IVInitStruct: pointer to a CRYP_IVInitTypeDef Initialization 
 337:./Library/stm32f4xx_cryp.c ****   *         Vectors(IV) structure which will be initialized.
 338:./Library/stm32f4xx_cryp.c ****   * @retval None
 339:./Library/stm32f4xx_cryp.c ****   */
 340:./Library/stm32f4xx_cryp.c **** void CRYP_IVStructInit(CRYP_IVInitTypeDef* CRYP_IVInitStruct)
 341:./Library/stm32f4xx_cryp.c **** {
 353              		.loc 1 341 1 is_stmt 1 view -0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 0
 356              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccmEvdOk.s 			page 13


 357              		@ link register save eliminated.
 342:./Library/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV0Left  = 0;
 358              		.loc 1 342 3 view .LVU110
 359              		.loc 1 342 36 is_stmt 0 view .LVU111
 360 0000 0023     		movs	r3, #0
 361 0002 0360     		str	r3, [r0]
 343:./Library/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV0Right = 0;
 362              		.loc 1 343 3 is_stmt 1 view .LVU112
 363              		.loc 1 343 36 is_stmt 0 view .LVU113
 364 0004 4360     		str	r3, [r0, #4]
 344:./Library/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV1Left  = 0;
 365              		.loc 1 344 3 is_stmt 1 view .LVU114
 366              		.loc 1 344 36 is_stmt 0 view .LVU115
 367 0006 8360     		str	r3, [r0, #8]
 345:./Library/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV1Right = 0;
 368              		.loc 1 345 3 is_stmt 1 view .LVU116
 369              		.loc 1 345 36 is_stmt 0 view .LVU117
 370 0008 C360     		str	r3, [r0, #12]
 346:./Library/stm32f4xx_cryp.c **** }
 371              		.loc 1 346 1 view .LVU118
 372 000a 7047     		bx	lr
 373              		.cfi_endproc
 374              	.LFE129:
 376              		.section	.text.CRYP_PhaseConfig,"ax",%progbits
 377              		.align	1
 378              		.global	CRYP_PhaseConfig
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 383              	CRYP_PhaseConfig:
 384              	.LVL8:
 385              	.LFB130:
 347:./Library/stm32f4xx_cryp.c **** 
 348:./Library/stm32f4xx_cryp.c **** /**
 349:./Library/stm32f4xx_cryp.c ****   * @brief  Configures the AES-CCM and AES-GCM phases
 350:./Library/stm32f4xx_cryp.c ****   * @note   This function is used only with AES-CCM or AES-GCM Algorithms  
 351:./Library/stm32f4xx_cryp.c ****   * @param  CRYP_Phase: specifies the CRYP AES-CCM and AES-GCM phase to be configured.
 352:./Library/stm32f4xx_cryp.c ****   *           This parameter can be one of the following values:
 353:./Library/stm32f4xx_cryp.c ****   *            @arg CRYP_Phase_Init: Initialization phase
 354:./Library/stm32f4xx_cryp.c ****   *            @arg CRYP_Phase_Header: Header phase
 355:./Library/stm32f4xx_cryp.c ****   *            @arg CRYP_Phase_Payload: Payload phase
 356:./Library/stm32f4xx_cryp.c ****   *            @arg CRYP_Phase_Final: Final phase 
 357:./Library/stm32f4xx_cryp.c ****   * @retval None
 358:./Library/stm32f4xx_cryp.c ****   */
 359:./Library/stm32f4xx_cryp.c **** void CRYP_PhaseConfig(uint32_t CRYP_Phase)
 360:./Library/stm32f4xx_cryp.c **** { uint32_t tempcr = 0;
 386              		.loc 1 360 1 is_stmt 1 view -0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390              		@ link register save eliminated.
 391              		.loc 1 360 3 view .LVU120
 361:./Library/stm32f4xx_cryp.c **** 
 362:./Library/stm32f4xx_cryp.c ****   /* Check the parameter */
 363:./Library/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_PHASE(CRYP_Phase));
 392              		.loc 1 363 3 view .LVU121
 364:./Library/stm32f4xx_cryp.c **** 
ARM GAS  /tmp/ccmEvdOk.s 			page 14


 365:./Library/stm32f4xx_cryp.c ****   /* Get the CR register */
 366:./Library/stm32f4xx_cryp.c ****   tempcr = CRYP->CR;
 393              		.loc 1 366 3 view .LVU122
 394              		.loc 1 366 10 is_stmt 0 view .LVU123
 395 0000 034A     		ldr	r2, .L18
 396 0002 1368     		ldr	r3, [r2]
 397              	.LVL9:
 367:./Library/stm32f4xx_cryp.c ****   
 368:./Library/stm32f4xx_cryp.c ****   /* Reset the phase configuration bits: GCMP_CCMPH */
 369:./Library/stm32f4xx_cryp.c ****   tempcr &= (uint32_t)(~CRYP_CR_GCM_CCMPH);
 398              		.loc 1 369 3 is_stmt 1 view .LVU124
 399              		.loc 1 369 10 is_stmt 0 view .LVU125
 400 0004 23F44033 		bic	r3, r3, #196608
 401              	.LVL10:
 370:./Library/stm32f4xx_cryp.c ****   /* Set the selected phase */
 371:./Library/stm32f4xx_cryp.c ****   tempcr |= (uint32_t)CRYP_Phase;
 402              		.loc 1 371 3 is_stmt 1 view .LVU126
 403              		.loc 1 371 10 is_stmt 0 view .LVU127
 404 0008 0343     		orrs	r3, r3, r0
 405              	.LVL11:
 372:./Library/stm32f4xx_cryp.c **** 
 373:./Library/stm32f4xx_cryp.c ****   /* Set the CR register */ 
 374:./Library/stm32f4xx_cryp.c ****   CRYP->CR = tempcr;    
 406              		.loc 1 374 3 is_stmt 1 view .LVU128
 407              		.loc 1 374 12 is_stmt 0 view .LVU129
 408 000a 1360     		str	r3, [r2]
 375:./Library/stm32f4xx_cryp.c **** }
 409              		.loc 1 375 1 view .LVU130
 410 000c 7047     		bx	lr
 411              	.L19:
 412 000e 00BF     		.align	2
 413              	.L18:
 414 0010 00000650 		.word	1342570496
 415              		.cfi_endproc
 416              	.LFE130:
 418              		.section	.text.CRYP_FIFOFlush,"ax",%progbits
 419              		.align	1
 420              		.global	CRYP_FIFOFlush
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 425              	CRYP_FIFOFlush:
 426              	.LFB131:
 376:./Library/stm32f4xx_cryp.c **** 
 377:./Library/stm32f4xx_cryp.c **** /**
 378:./Library/stm32f4xx_cryp.c ****   * @brief  Flushes the IN and OUT FIFOs (that is read and write pointers of the 
 379:./Library/stm32f4xx_cryp.c ****   *         FIFOs are reset)
 380:./Library/stm32f4xx_cryp.c ****   * @note   The FIFOs must be flushed only when BUSY flag is reset.  
 381:./Library/stm32f4xx_cryp.c ****   * @param  None
 382:./Library/stm32f4xx_cryp.c ****   * @retval None
 383:./Library/stm32f4xx_cryp.c ****   */
 384:./Library/stm32f4xx_cryp.c **** void CRYP_FIFOFlush(void)
 385:./Library/stm32f4xx_cryp.c **** {
 427              		.loc 1 385 1 is_stmt 1 view -0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 0
 430              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccmEvdOk.s 			page 15


 431              		@ link register save eliminated.
 386:./Library/stm32f4xx_cryp.c ****   /* Reset the read and write pointers of the FIFOs */
 387:./Library/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_CR_FFLUSH;
 432              		.loc 1 387 3 view .LVU132
 433              		.loc 1 387 7 is_stmt 0 view .LVU133
 434 0000 024A     		ldr	r2, .L21
 435 0002 1368     		ldr	r3, [r2]
 436              		.loc 1 387 12 view .LVU134
 437 0004 43F48043 		orr	r3, r3, #16384
 438 0008 1360     		str	r3, [r2]
 388:./Library/stm32f4xx_cryp.c **** }
 439              		.loc 1 388 1 view .LVU135
 440 000a 7047     		bx	lr
 441              	.L22:
 442              		.align	2
 443              	.L21:
 444 000c 00000650 		.word	1342570496
 445              		.cfi_endproc
 446              	.LFE131:
 448              		.section	.text.CRYP_Cmd,"ax",%progbits
 449              		.align	1
 450              		.global	CRYP_Cmd
 451              		.syntax unified
 452              		.thumb
 453              		.thumb_func
 455              	CRYP_Cmd:
 456              	.LVL12:
 457              	.LFB132:
 389:./Library/stm32f4xx_cryp.c **** 
 390:./Library/stm32f4xx_cryp.c **** /**
 391:./Library/stm32f4xx_cryp.c ****   * @brief  Enables or disables the CRYP peripheral.
 392:./Library/stm32f4xx_cryp.c ****   * @param  NewState: new state of the CRYP peripheral.
 393:./Library/stm32f4xx_cryp.c ****   *          This parameter can be: ENABLE or DISABLE.
 394:./Library/stm32f4xx_cryp.c ****   * @retval None
 395:./Library/stm32f4xx_cryp.c ****   */
 396:./Library/stm32f4xx_cryp.c **** void CRYP_Cmd(FunctionalState NewState)
 397:./Library/stm32f4xx_cryp.c **** {
 458              		.loc 1 397 1 is_stmt 1 view -0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 0
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 462              		@ link register save eliminated.
 398:./Library/stm32f4xx_cryp.c ****   /* Check the parameters */
 399:./Library/stm32f4xx_cryp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 463              		.loc 1 399 3 view .LVU137
 400:./Library/stm32f4xx_cryp.c **** 
 401:./Library/stm32f4xx_cryp.c ****   if (NewState != DISABLE)
 464              		.loc 1 401 3 view .LVU138
 465              		.loc 1 401 6 is_stmt 0 view .LVU139
 466 0000 28B1     		cbz	r0, .L24
 402:./Library/stm32f4xx_cryp.c ****   {
 403:./Library/stm32f4xx_cryp.c ****     /* Enable the Cryptographic processor */
 404:./Library/stm32f4xx_cryp.c ****     CRYP->CR |= CRYP_CR_CRYPEN;
 467              		.loc 1 404 5 is_stmt 1 view .LVU140
 468              		.loc 1 404 9 is_stmt 0 view .LVU141
 469 0002 064A     		ldr	r2, .L26
 470 0004 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccmEvdOk.s 			page 16


 471              		.loc 1 404 14 view .LVU142
 472 0006 43F40043 		orr	r3, r3, #32768
 473 000a 1360     		str	r3, [r2]
 474 000c 7047     		bx	lr
 475              	.L24:
 405:./Library/stm32f4xx_cryp.c ****   }
 406:./Library/stm32f4xx_cryp.c ****   else
 407:./Library/stm32f4xx_cryp.c ****   {
 408:./Library/stm32f4xx_cryp.c ****     /* Disable the Cryptographic processor */
 409:./Library/stm32f4xx_cryp.c ****     CRYP->CR &= ~CRYP_CR_CRYPEN;
 476              		.loc 1 409 5 is_stmt 1 view .LVU143
 477              		.loc 1 409 9 is_stmt 0 view .LVU144
 478 000e 034A     		ldr	r2, .L26
 479 0010 1368     		ldr	r3, [r2]
 480              		.loc 1 409 14 view .LVU145
 481 0012 23F40043 		bic	r3, r3, #32768
 482 0016 1360     		str	r3, [r2]
 410:./Library/stm32f4xx_cryp.c ****   }
 411:./Library/stm32f4xx_cryp.c **** }
 483              		.loc 1 411 1 view .LVU146
 484 0018 7047     		bx	lr
 485              	.L27:
 486 001a 00BF     		.align	2
 487              	.L26:
 488 001c 00000650 		.word	1342570496
 489              		.cfi_endproc
 490              	.LFE132:
 492              		.section	.text.CRYP_DataIn,"ax",%progbits
 493              		.align	1
 494              		.global	CRYP_DataIn
 495              		.syntax unified
 496              		.thumb
 497              		.thumb_func
 499              	CRYP_DataIn:
 500              	.LVL13:
 501              	.LFB133:
 412:./Library/stm32f4xx_cryp.c **** /**
 413:./Library/stm32f4xx_cryp.c ****   * @}
 414:./Library/stm32f4xx_cryp.c ****   */
 415:./Library/stm32f4xx_cryp.c ****   
 416:./Library/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group2 CRYP Data processing functions
 417:./Library/stm32f4xx_cryp.c ****  *  @brief    CRYP Data processing functions
 418:./Library/stm32f4xx_cryp.c ****  *
 419:./Library/stm32f4xx_cryp.c **** @verbatim    
 420:./Library/stm32f4xx_cryp.c ****  ===============================================================================
 421:./Library/stm32f4xx_cryp.c ****                     ##### CRYP Data processing functions #####
 422:./Library/stm32f4xx_cryp.c ****  ===============================================================================  
 423:./Library/stm32f4xx_cryp.c ****  [..] This section provides functions allowing the encryption and decryption 
 424:./Library/stm32f4xx_cryp.c ****       operations: 
 425:./Library/stm32f4xx_cryp.c ****    (+) Enter data to be treated in the IN FIFO : using CRYP_DataIn() function.
 426:./Library/stm32f4xx_cryp.c ****    (+) Get the data result from the OUT FIFO : using CRYP_DataOut() function.
 427:./Library/stm32f4xx_cryp.c **** 
 428:./Library/stm32f4xx_cryp.c **** @endverbatim
 429:./Library/stm32f4xx_cryp.c ****   * @{
 430:./Library/stm32f4xx_cryp.c ****   */
 431:./Library/stm32f4xx_cryp.c **** 
 432:./Library/stm32f4xx_cryp.c **** /**
ARM GAS  /tmp/ccmEvdOk.s 			page 17


 433:./Library/stm32f4xx_cryp.c ****   * @brief  Writes data in the Data Input register (DIN).
 434:./Library/stm32f4xx_cryp.c ****   * @note   After the DIN register has been read once or several times, 
 435:./Library/stm32f4xx_cryp.c ****   *         the FIFO must be flushed (using CRYP_FIFOFlush() function).  
 436:./Library/stm32f4xx_cryp.c ****   * @param  Data: data to write in Data Input register
 437:./Library/stm32f4xx_cryp.c ****   * @retval None
 438:./Library/stm32f4xx_cryp.c ****   */
 439:./Library/stm32f4xx_cryp.c **** void CRYP_DataIn(uint32_t Data)
 440:./Library/stm32f4xx_cryp.c **** {
 502              		.loc 1 440 1 is_stmt 1 view -0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 0
 505              		@ frame_needed = 0, uses_anonymous_args = 0
 506              		@ link register save eliminated.
 441:./Library/stm32f4xx_cryp.c ****   CRYP->DR = Data;
 507              		.loc 1 441 3 view .LVU148
 508              		.loc 1 441 12 is_stmt 0 view .LVU149
 509 0000 014B     		ldr	r3, .L29
 510 0002 9860     		str	r0, [r3, #8]
 442:./Library/stm32f4xx_cryp.c **** }
 511              		.loc 1 442 1 view .LVU150
 512 0004 7047     		bx	lr
 513              	.L30:
 514 0006 00BF     		.align	2
 515              	.L29:
 516 0008 00000650 		.word	1342570496
 517              		.cfi_endproc
 518              	.LFE133:
 520              		.section	.text.CRYP_DataOut,"ax",%progbits
 521              		.align	1
 522              		.global	CRYP_DataOut
 523              		.syntax unified
 524              		.thumb
 525              		.thumb_func
 527              	CRYP_DataOut:
 528              	.LFB134:
 443:./Library/stm32f4xx_cryp.c **** 
 444:./Library/stm32f4xx_cryp.c **** /**
 445:./Library/stm32f4xx_cryp.c ****   * @brief  Returns the last data entered into the output FIFO.
 446:./Library/stm32f4xx_cryp.c ****   * @param  None
 447:./Library/stm32f4xx_cryp.c ****   * @retval Last data entered into the output FIFO.
 448:./Library/stm32f4xx_cryp.c ****   */
 449:./Library/stm32f4xx_cryp.c **** uint32_t CRYP_DataOut(void)
 450:./Library/stm32f4xx_cryp.c **** {
 529              		.loc 1 450 1 is_stmt 1 view -0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 0
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 533              		@ link register save eliminated.
 451:./Library/stm32f4xx_cryp.c ****   return CRYP->DOUT;
 534              		.loc 1 451 3 view .LVU152
 535              		.loc 1 451 14 is_stmt 0 view .LVU153
 536 0000 014B     		ldr	r3, .L32
 537 0002 D868     		ldr	r0, [r3, #12]
 452:./Library/stm32f4xx_cryp.c **** }
 538              		.loc 1 452 1 view .LVU154
 539 0004 7047     		bx	lr
 540              	.L33:
ARM GAS  /tmp/ccmEvdOk.s 			page 18


 541 0006 00BF     		.align	2
 542              	.L32:
 543 0008 00000650 		.word	1342570496
 544              		.cfi_endproc
 545              	.LFE134:
 547              		.section	.text.CRYP_SaveContext,"ax",%progbits
 548              		.align	1
 549              		.global	CRYP_SaveContext
 550              		.syntax unified
 551              		.thumb
 552              		.thumb_func
 554              	CRYP_SaveContext:
 555              	.LVL14:
 556              	.LFB135:
 453:./Library/stm32f4xx_cryp.c **** /**
 454:./Library/stm32f4xx_cryp.c ****   * @}
 455:./Library/stm32f4xx_cryp.c ****   */
 456:./Library/stm32f4xx_cryp.c ****   
 457:./Library/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group3 Context swapping functions
 458:./Library/stm32f4xx_cryp.c ****  *  @brief   Context swapping functions
 459:./Library/stm32f4xx_cryp.c ****  *
 460:./Library/stm32f4xx_cryp.c **** @verbatim   
 461:./Library/stm32f4xx_cryp.c ****  ===============================================================================
 462:./Library/stm32f4xx_cryp.c ****                       ##### Context swapping functions #####
 463:./Library/stm32f4xx_cryp.c ****  ===============================================================================  
 464:./Library/stm32f4xx_cryp.c ****  [..] This section provides functions allowing to save and store CRYP Context
 465:./Library/stm32f4xx_cryp.c **** 
 466:./Library/stm32f4xx_cryp.c ****  [..] It is possible to interrupt an encryption/ decryption/ key generation process 
 467:./Library/stm32f4xx_cryp.c ****       to perform another processing with a higher priority, and to complete the 
 468:./Library/stm32f4xx_cryp.c ****       interrupted process later on, when the higher-priority task is complete. To do 
 469:./Library/stm32f4xx_cryp.c ****       so, the context of the interrupted task must be saved from the CRYP registers 
 470:./Library/stm32f4xx_cryp.c ****       to memory, and then be restored from memory to the CRYP registers.
 471:./Library/stm32f4xx_cryp.c ****    
 472:./Library/stm32f4xx_cryp.c ****    (#) To save the current context, use CRYP_SaveContext() function
 473:./Library/stm32f4xx_cryp.c ****    (#) To restore the saved context, use CRYP_RestoreContext() function 
 474:./Library/stm32f4xx_cryp.c **** 
 475:./Library/stm32f4xx_cryp.c **** @endverbatim
 476:./Library/stm32f4xx_cryp.c ****   * @{
 477:./Library/stm32f4xx_cryp.c ****   */
 478:./Library/stm32f4xx_cryp.c ****   
 479:./Library/stm32f4xx_cryp.c **** /**
 480:./Library/stm32f4xx_cryp.c ****   * @brief  Saves the CRYP peripheral Context. 
 481:./Library/stm32f4xx_cryp.c ****   * @note   This function stops DMA transfer before to save the context. After 
 482:./Library/stm32f4xx_cryp.c ****   *         restoring the context, you have to enable the DMA again (if the DMA
 483:./Library/stm32f4xx_cryp.c ****   *         was previously used).
 484:./Library/stm32f4xx_cryp.c ****   * @param  CRYP_ContextSave: pointer to a CRYP_Context structure that contains
 485:./Library/stm32f4xx_cryp.c ****   *         the repository for current context.
 486:./Library/stm32f4xx_cryp.c ****   * @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure that 
 487:./Library/stm32f4xx_cryp.c ****   *         contains the configuration information for the CRYP Keys.  
 488:./Library/stm32f4xx_cryp.c ****   * @retval None
 489:./Library/stm32f4xx_cryp.c ****   */
 490:./Library/stm32f4xx_cryp.c **** ErrorStatus CRYP_SaveContext(CRYP_Context* CRYP_ContextSave,
 491:./Library/stm32f4xx_cryp.c ****                              CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
 492:./Library/stm32f4xx_cryp.c **** {
 557              		.loc 1 492 1 is_stmt 1 view -0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccmEvdOk.s 			page 19


 560              		@ frame_needed = 0, uses_anonymous_args = 0
 561              		@ link register save eliminated.
 562              		.loc 1 492 1 is_stmt 0 view .LVU156
 563 0000 10B4     		push	{r4}
 564              	.LCFI1:
 565              		.cfi_def_cfa_offset 4
 566              		.cfi_offset 4, -4
 567 0002 83B0     		sub	sp, sp, #12
 568              	.LCFI2:
 569              		.cfi_def_cfa_offset 16
 493:./Library/stm32f4xx_cryp.c ****   __IO uint32_t timeout = 0;
 570              		.loc 1 493 3 is_stmt 1 view .LVU157
 571              		.loc 1 493 17 is_stmt 0 view .LVU158
 572 0004 0023     		movs	r3, #0
 573 0006 0193     		str	r3, [sp, #4]
 494:./Library/stm32f4xx_cryp.c ****   uint32_t ckeckmask = 0, bitstatus;    
 574              		.loc 1 494 3 is_stmt 1 view .LVU159
 575              	.LVL15:
 495:./Library/stm32f4xx_cryp.c ****   ErrorStatus status = ERROR;
 576              		.loc 1 495 3 view .LVU160
 496:./Library/stm32f4xx_cryp.c **** 
 497:./Library/stm32f4xx_cryp.c ****   /* Stop DMA transfers on the IN FIFO by clearing the DIEN bit in the CRYP_DMACR */
 498:./Library/stm32f4xx_cryp.c ****   CRYP->DMACR &= ~(uint32_t)CRYP_DMACR_DIEN;
 577              		.loc 1 498 3 view .LVU161
 578              		.loc 1 498 7 is_stmt 0 view .LVU162
 579 0008 3B4B     		ldr	r3, .L43
 580 000a 1A69     		ldr	r2, [r3, #16]
 581              		.loc 1 498 15 view .LVU163
 582 000c 22F00102 		bic	r2, r2, #1
 583 0010 1A61     		str	r2, [r3, #16]
 499:./Library/stm32f4xx_cryp.c ****     
 500:./Library/stm32f4xx_cryp.c ****   /* Wait until both the IN and OUT FIFOs are empty  
 501:./Library/stm32f4xx_cryp.c ****     (IFEM=1 and OFNE=0 in the CRYP_SR register) and the 
 502:./Library/stm32f4xx_cryp.c ****      BUSY bit is cleared. */
 503:./Library/stm32f4xx_cryp.c **** 
 504:./Library/stm32f4xx_cryp.c ****   if ((CRYP->CR & (uint32_t)(CRYP_CR_ALGOMODE_TDES_ECB | CRYP_CR_ALGOMODE_TDES_CBC)) != (uint32_t)0
 584              		.loc 1 504 3 is_stmt 1 view .LVU164
 585              		.loc 1 504 12 is_stmt 0 view .LVU165
 586 0012 1B68     		ldr	r3, [r3]
 587              		.loc 1 504 6 view .LVU166
 588 0014 13F0080F 		tst	r3, #8
 589 0018 1AD0     		beq	.L39
 505:./Library/stm32f4xx_cryp.c ****   { 
 506:./Library/stm32f4xx_cryp.c ****     ckeckmask =  CRYP_SR_IFEM | CRYP_SR_BUSY ;
 590              		.loc 1 506 15 view .LVU167
 591 001a 4FF0110C 		mov	ip, #17
 592              	.LVL16:
 593              	.L37:
 507:./Library/stm32f4xx_cryp.c ****   }
 508:./Library/stm32f4xx_cryp.c ****   else /* AES or DES */
 509:./Library/stm32f4xx_cryp.c ****   {
 510:./Library/stm32f4xx_cryp.c ****     ckeckmask =  CRYP_SR_IFEM | CRYP_SR_BUSY | CRYP_SR_OFNE;
 511:./Library/stm32f4xx_cryp.c ****   }           
 512:./Library/stm32f4xx_cryp.c ****    
 513:./Library/stm32f4xx_cryp.c ****   do 
 594              		.loc 1 513 3 is_stmt 1 discriminator 2 view .LVU168
 514:./Library/stm32f4xx_cryp.c ****   {
ARM GAS  /tmp/ccmEvdOk.s 			page 20


 515:./Library/stm32f4xx_cryp.c ****     bitstatus = CRYP->SR & ckeckmask;
 595              		.loc 1 515 5 discriminator 2 view .LVU169
 596              		.loc 1 515 21 is_stmt 0 discriminator 2 view .LVU170
 597 001e 364B     		ldr	r3, .L43
 598 0020 5A68     		ldr	r2, [r3, #4]
 599              		.loc 1 515 15 discriminator 2 view .LVU171
 600 0022 02EA0C02 		and	r2, r2, ip
 601              	.LVL17:
 516:./Library/stm32f4xx_cryp.c ****     timeout++;
 602              		.loc 1 516 5 is_stmt 1 discriminator 2 view .LVU172
 603              		.loc 1 516 12 is_stmt 0 discriminator 2 view .LVU173
 604 0026 019B     		ldr	r3, [sp, #4]
 605 0028 0133     		adds	r3, r3, #1
 606 002a 0193     		str	r3, [sp, #4]
 517:./Library/stm32f4xx_cryp.c ****   }
 518:./Library/stm32f4xx_cryp.c ****   while ((timeout != MAX_TIMEOUT) && (bitstatus != CRYP_SR_IFEM));
 607              		.loc 1 518 35 is_stmt 1 discriminator 2 view .LVU174
 608              		.loc 1 518 19 is_stmt 0 discriminator 2 view .LVU175
 609 002c 019C     		ldr	r4, [sp, #4]
 610              		.loc 1 518 35 discriminator 2 view .LVU176
 611 002e 4FF6FF73 		movw	r3, #65535
 612 0032 9C42     		cmp	r4, r3
 613 0034 01D0     		beq	.L36
 614              		.loc 1 518 35 discriminator 1 view .LVU177
 615 0036 012A     		cmp	r2, #1
 616 0038 F1D1     		bne	.L37
 617              	.L36:
 519:./Library/stm32f4xx_cryp.c ****      
 520:./Library/stm32f4xx_cryp.c ****   if ((CRYP->SR & ckeckmask) != CRYP_SR_IFEM)
 618              		.loc 1 520 3 is_stmt 1 view .LVU178
 619              		.loc 1 520 12 is_stmt 0 view .LVU179
 620 003a 2F4B     		ldr	r3, .L43
 621 003c 5B68     		ldr	r3, [r3, #4]
 622              		.loc 1 520 17 view .LVU180
 623 003e 03EA0C03 		and	r3, r3, ip
 624              		.loc 1 520 6 view .LVU181
 625 0042 012B     		cmp	r3, #1
 626 0044 07D0     		beq	.L42
 521:./Library/stm32f4xx_cryp.c ****   {
 522:./Library/stm32f4xx_cryp.c ****     status = ERROR;
 627              		.loc 1 522 12 view .LVU182
 628 0046 0020     		movs	r0, #0
 629              	.LVL18:
 630              	.L38:
 523:./Library/stm32f4xx_cryp.c ****   }
 524:./Library/stm32f4xx_cryp.c ****   else
 525:./Library/stm32f4xx_cryp.c ****   {      
 526:./Library/stm32f4xx_cryp.c ****     /* Stop DMA transfers on the OUT FIFO by 
 527:./Library/stm32f4xx_cryp.c ****        - writing the DOEN bit to 0 in the CRYP_DMACR register 
 528:./Library/stm32f4xx_cryp.c ****        - and clear the CRYPEN bit. */
 529:./Library/stm32f4xx_cryp.c **** 
 530:./Library/stm32f4xx_cryp.c ****     CRYP->DMACR &= ~(uint32_t)CRYP_DMACR_DOEN;
 531:./Library/stm32f4xx_cryp.c ****     CRYP->CR &= ~(uint32_t)CRYP_CR_CRYPEN;
 532:./Library/stm32f4xx_cryp.c **** 
 533:./Library/stm32f4xx_cryp.c ****     /* Save the current configuration (bit 19, bit[17:16] and bits [9:2] in the CRYP_CR register) *
 534:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CR_CurrentConfig  = CRYP->CR & (CRYP_CR_GCM_CCMPH |
 535:./Library/stm32f4xx_cryp.c ****                                                       CRYP_CR_KEYSIZE  |
ARM GAS  /tmp/ccmEvdOk.s 			page 21


 536:./Library/stm32f4xx_cryp.c ****                                                       CRYP_CR_DATATYPE |
 537:./Library/stm32f4xx_cryp.c ****                                                       CRYP_CR_ALGOMODE |
 538:./Library/stm32f4xx_cryp.c ****                                                       CRYP_CR_ALGODIR);
 539:./Library/stm32f4xx_cryp.c **** 
 540:./Library/stm32f4xx_cryp.c ****     /* and, if not in ECB mode, the initialization vectors. */
 541:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV0LR = CRYP->IV0LR;
 542:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV0RR = CRYP->IV0RR;
 543:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV1LR = CRYP->IV1LR;
 544:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV1RR = CRYP->IV1RR;
 545:./Library/stm32f4xx_cryp.c **** 
 546:./Library/stm32f4xx_cryp.c ****     /* save The key value */
 547:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K0LR = CRYP_KeyInitStruct->CRYP_Key0Left; 
 548:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K0RR = CRYP_KeyInitStruct->CRYP_Key0Right; 
 549:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K1LR = CRYP_KeyInitStruct->CRYP_Key1Left; 
 550:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K1RR = CRYP_KeyInitStruct->CRYP_Key1Right; 
 551:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2LR = CRYP_KeyInitStruct->CRYP_Key2Left; 
 552:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2RR = CRYP_KeyInitStruct->CRYP_Key2Right; 
 553:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3LR = CRYP_KeyInitStruct->CRYP_Key3Left; 
 554:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3RR = CRYP_KeyInitStruct->CRYP_Key3Right; 
 555:./Library/stm32f4xx_cryp.c **** 
 556:./Library/stm32f4xx_cryp.c ****     /* Save the content of context swap registers */
 557:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[0] = CRYP->CSGCMCCM0R;
 558:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[1] = CRYP->CSGCMCCM1R;
 559:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[2] = CRYP->CSGCMCCM2R;
 560:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[3] = CRYP->CSGCMCCM3R;
 561:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[4] = CRYP->CSGCMCCM4R;
 562:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[5] = CRYP->CSGCMCCM5R;
 563:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[6] = CRYP->CSGCMCCM6R;
 564:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[7] = CRYP->CSGCMCCM7R;
 565:./Library/stm32f4xx_cryp.c ****     
 566:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[0] = CRYP->CSGCM0R;
 567:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[1] = CRYP->CSGCM1R;
 568:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[2] = CRYP->CSGCM2R;
 569:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[3] = CRYP->CSGCM3R;
 570:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[4] = CRYP->CSGCM4R;
 571:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[5] = CRYP->CSGCM5R;
 572:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[6] = CRYP->CSGCM6R;
 573:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[7] = CRYP->CSGCM7R;
 574:./Library/stm32f4xx_cryp.c ****     
 575:./Library/stm32f4xx_cryp.c ****    /* When needed, save the DMA status (pointers for IN and OUT messages, 
 576:./Library/stm32f4xx_cryp.c ****       number of remaining bytes, etc.) */
 577:./Library/stm32f4xx_cryp.c ****      
 578:./Library/stm32f4xx_cryp.c ****     status = SUCCESS;
 579:./Library/stm32f4xx_cryp.c ****   }
 580:./Library/stm32f4xx_cryp.c **** 
 581:./Library/stm32f4xx_cryp.c ****    return status;
 631              		.loc 1 581 4 is_stmt 1 view .LVU183
 582:./Library/stm32f4xx_cryp.c **** }
 632              		.loc 1 582 1 is_stmt 0 view .LVU184
 633 0048 03B0     		add	sp, sp, #12
 634              	.LCFI3:
 635              		.cfi_remember_state
 636              		.cfi_def_cfa_offset 4
 637              		@ sp needed
 638 004a 5DF8044B 		ldr	r4, [sp], #4
 639              	.LCFI4:
 640              		.cfi_restore 4
ARM GAS  /tmp/ccmEvdOk.s 			page 22


 641              		.cfi_def_cfa_offset 0
 642 004e 7047     		bx	lr
 643              	.LVL19:
 644              	.L39:
 645              	.LCFI5:
 646              		.cfi_restore_state
 510:./Library/stm32f4xx_cryp.c ****   }           
 647              		.loc 1 510 15 view .LVU185
 648 0050 4FF0150C 		mov	ip, #21
 649              	.LVL20:
 510:./Library/stm32f4xx_cryp.c ****   }           
 650              		.loc 1 510 15 view .LVU186
 651 0054 E3E7     		b	.L37
 652              	.LVL21:
 653              	.L42:
 530:./Library/stm32f4xx_cryp.c ****     CRYP->CR &= ~(uint32_t)CRYP_CR_CRYPEN;
 654              		.loc 1 530 5 is_stmt 1 view .LVU187
 530:./Library/stm32f4xx_cryp.c ****     CRYP->CR &= ~(uint32_t)CRYP_CR_CRYPEN;
 655              		.loc 1 530 9 is_stmt 0 view .LVU188
 656 0056 284B     		ldr	r3, .L43
 657 0058 1A69     		ldr	r2, [r3, #16]
 658              	.LVL22:
 530:./Library/stm32f4xx_cryp.c ****     CRYP->CR &= ~(uint32_t)CRYP_CR_CRYPEN;
 659              		.loc 1 530 17 view .LVU189
 660 005a 22F00202 		bic	r2, r2, #2
 661 005e 1A61     		str	r2, [r3, #16]
 531:./Library/stm32f4xx_cryp.c **** 
 662              		.loc 1 531 5 is_stmt 1 view .LVU190
 531:./Library/stm32f4xx_cryp.c **** 
 663              		.loc 1 531 9 is_stmt 0 view .LVU191
 664 0060 1A68     		ldr	r2, [r3]
 531:./Library/stm32f4xx_cryp.c **** 
 665              		.loc 1 531 14 view .LVU192
 666 0062 22F40042 		bic	r2, r2, #32768
 667 0066 1A60     		str	r2, [r3]
 534:./Library/stm32f4xx_cryp.c ****                                                       CRYP_CR_KEYSIZE  |
 668              		.loc 1 534 5 is_stmt 1 view .LVU193
 534:./Library/stm32f4xx_cryp.c ****                                                       CRYP_CR_KEYSIZE  |
 669              		.loc 1 534 47 is_stmt 0 view .LVU194
 670 0068 1A68     		ldr	r2, [r3]
 534:./Library/stm32f4xx_cryp.c ****                                                       CRYP_CR_KEYSIZE  |
 671              		.loc 1 534 52 view .LVU195
 672 006a 22F07F42 		bic	r2, r2, #-16777216
 673 006e 22F47402 		bic	r2, r2, #15990784
 674 0072 22F47C42 		bic	r2, r2, #64512
 675 0076 22F00302 		bic	r2, r2, #3
 534:./Library/stm32f4xx_cryp.c ****                                                       CRYP_CR_KEYSIZE  |
 676              		.loc 1 534 41 view .LVU196
 677 007a 0260     		str	r2, [r0]
 541:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV0RR = CRYP->IV0RR;
 678              		.loc 1 541 5 is_stmt 1 view .LVU197
 541:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV0RR = CRYP->IV0RR;
 679              		.loc 1 541 40 is_stmt 0 view .LVU198
 680 007c 1A6C     		ldr	r2, [r3, #64]
 541:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV0RR = CRYP->IV0RR;
 681              		.loc 1 541 34 view .LVU199
 682 007e 4260     		str	r2, [r0, #4]
ARM GAS  /tmp/ccmEvdOk.s 			page 23


 542:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV1LR = CRYP->IV1LR;
 683              		.loc 1 542 5 is_stmt 1 view .LVU200
 542:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV1LR = CRYP->IV1LR;
 684              		.loc 1 542 40 is_stmt 0 view .LVU201
 685 0080 5A6C     		ldr	r2, [r3, #68]
 542:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV1LR = CRYP->IV1LR;
 686              		.loc 1 542 34 view .LVU202
 687 0082 8260     		str	r2, [r0, #8]
 543:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV1RR = CRYP->IV1RR;
 688              		.loc 1 543 5 is_stmt 1 view .LVU203
 543:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV1RR = CRYP->IV1RR;
 689              		.loc 1 543 40 is_stmt 0 view .LVU204
 690 0084 9A6C     		ldr	r2, [r3, #72]
 543:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV1RR = CRYP->IV1RR;
 691              		.loc 1 543 34 view .LVU205
 692 0086 C260     		str	r2, [r0, #12]
 544:./Library/stm32f4xx_cryp.c **** 
 693              		.loc 1 544 5 is_stmt 1 view .LVU206
 544:./Library/stm32f4xx_cryp.c **** 
 694              		.loc 1 544 40 is_stmt 0 view .LVU207
 695 0088 DA6C     		ldr	r2, [r3, #76]
 544:./Library/stm32f4xx_cryp.c **** 
 696              		.loc 1 544 34 view .LVU208
 697 008a 0261     		str	r2, [r0, #16]
 547:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K0RR = CRYP_KeyInitStruct->CRYP_Key0Right; 
 698              		.loc 1 547 5 is_stmt 1 view .LVU209
 547:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K0RR = CRYP_KeyInitStruct->CRYP_Key0Right; 
 699              		.loc 1 547 53 is_stmt 0 view .LVU210
 700 008c 0A68     		ldr	r2, [r1]
 547:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K0RR = CRYP_KeyInitStruct->CRYP_Key0Right; 
 701              		.loc 1 547 33 view .LVU211
 702 008e 4261     		str	r2, [r0, #20]
 548:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K1LR = CRYP_KeyInitStruct->CRYP_Key1Left; 
 703              		.loc 1 548 5 is_stmt 1 view .LVU212
 548:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K1LR = CRYP_KeyInitStruct->CRYP_Key1Left; 
 704              		.loc 1 548 53 is_stmt 0 view .LVU213
 705 0090 4A68     		ldr	r2, [r1, #4]
 548:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K1LR = CRYP_KeyInitStruct->CRYP_Key1Left; 
 706              		.loc 1 548 33 view .LVU214
 707 0092 8261     		str	r2, [r0, #24]
 549:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K1RR = CRYP_KeyInitStruct->CRYP_Key1Right; 
 708              		.loc 1 549 5 is_stmt 1 view .LVU215
 549:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K1RR = CRYP_KeyInitStruct->CRYP_Key1Right; 
 709              		.loc 1 549 53 is_stmt 0 view .LVU216
 710 0094 8A68     		ldr	r2, [r1, #8]
 549:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K1RR = CRYP_KeyInitStruct->CRYP_Key1Right; 
 711              		.loc 1 549 33 view .LVU217
 712 0096 C261     		str	r2, [r0, #28]
 550:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2LR = CRYP_KeyInitStruct->CRYP_Key2Left; 
 713              		.loc 1 550 5 is_stmt 1 view .LVU218
 550:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2LR = CRYP_KeyInitStruct->CRYP_Key2Left; 
 714              		.loc 1 550 53 is_stmt 0 view .LVU219
 715 0098 CA68     		ldr	r2, [r1, #12]
 550:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2LR = CRYP_KeyInitStruct->CRYP_Key2Left; 
 716              		.loc 1 550 33 view .LVU220
 717 009a 0262     		str	r2, [r0, #32]
 551:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2RR = CRYP_KeyInitStruct->CRYP_Key2Right; 
ARM GAS  /tmp/ccmEvdOk.s 			page 24


 718              		.loc 1 551 5 is_stmt 1 view .LVU221
 551:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2RR = CRYP_KeyInitStruct->CRYP_Key2Right; 
 719              		.loc 1 551 53 is_stmt 0 view .LVU222
 720 009c 0A69     		ldr	r2, [r1, #16]
 551:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2RR = CRYP_KeyInitStruct->CRYP_Key2Right; 
 721              		.loc 1 551 33 view .LVU223
 722 009e 4262     		str	r2, [r0, #36]
 552:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3LR = CRYP_KeyInitStruct->CRYP_Key3Left; 
 723              		.loc 1 552 5 is_stmt 1 view .LVU224
 552:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3LR = CRYP_KeyInitStruct->CRYP_Key3Left; 
 724              		.loc 1 552 53 is_stmt 0 view .LVU225
 725 00a0 4A69     		ldr	r2, [r1, #20]
 552:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3LR = CRYP_KeyInitStruct->CRYP_Key3Left; 
 726              		.loc 1 552 33 view .LVU226
 727 00a2 8262     		str	r2, [r0, #40]
 553:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3RR = CRYP_KeyInitStruct->CRYP_Key3Right; 
 728              		.loc 1 553 5 is_stmt 1 view .LVU227
 553:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3RR = CRYP_KeyInitStruct->CRYP_Key3Right; 
 729              		.loc 1 553 53 is_stmt 0 view .LVU228
 730 00a4 8A69     		ldr	r2, [r1, #24]
 553:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3RR = CRYP_KeyInitStruct->CRYP_Key3Right; 
 731              		.loc 1 553 33 view .LVU229
 732 00a6 C262     		str	r2, [r0, #44]
 554:./Library/stm32f4xx_cryp.c **** 
 733              		.loc 1 554 5 is_stmt 1 view .LVU230
 554:./Library/stm32f4xx_cryp.c **** 
 734              		.loc 1 554 53 is_stmt 0 view .LVU231
 735 00a8 CA69     		ldr	r2, [r1, #28]
 554:./Library/stm32f4xx_cryp.c **** 
 736              		.loc 1 554 33 view .LVU232
 737 00aa 0263     		str	r2, [r0, #48]
 557:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[1] = CRYP->CSGCMCCM1R;
 738              		.loc 1 557 5 is_stmt 1 view .LVU233
 557:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[1] = CRYP->CSGCMCCM1R;
 739              		.loc 1 557 47 is_stmt 0 view .LVU234
 740 00ac 1A6D     		ldr	r2, [r3, #80]
 557:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[1] = CRYP->CSGCMCCM1R;
 741              		.loc 1 557 41 view .LVU235
 742 00ae 4263     		str	r2, [r0, #52]
 558:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[2] = CRYP->CSGCMCCM2R;
 743              		.loc 1 558 5 is_stmt 1 view .LVU236
 558:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[2] = CRYP->CSGCMCCM2R;
 744              		.loc 1 558 47 is_stmt 0 view .LVU237
 745 00b0 5A6D     		ldr	r2, [r3, #84]
 558:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[2] = CRYP->CSGCMCCM2R;
 746              		.loc 1 558 41 view .LVU238
 747 00b2 8263     		str	r2, [r0, #56]
 559:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[3] = CRYP->CSGCMCCM3R;
 748              		.loc 1 559 5 is_stmt 1 view .LVU239
 559:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[3] = CRYP->CSGCMCCM3R;
 749              		.loc 1 559 47 is_stmt 0 view .LVU240
 750 00b4 9A6D     		ldr	r2, [r3, #88]
 559:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[3] = CRYP->CSGCMCCM3R;
 751              		.loc 1 559 41 view .LVU241
 752 00b6 C263     		str	r2, [r0, #60]
 560:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[4] = CRYP->CSGCMCCM4R;
 753              		.loc 1 560 5 is_stmt 1 view .LVU242
ARM GAS  /tmp/ccmEvdOk.s 			page 25


 560:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[4] = CRYP->CSGCMCCM4R;
 754              		.loc 1 560 47 is_stmt 0 view .LVU243
 755 00b8 DA6D     		ldr	r2, [r3, #92]
 560:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[4] = CRYP->CSGCMCCM4R;
 756              		.loc 1 560 41 view .LVU244
 757 00ba 0264     		str	r2, [r0, #64]
 561:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[5] = CRYP->CSGCMCCM5R;
 758              		.loc 1 561 5 is_stmt 1 view .LVU245
 561:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[5] = CRYP->CSGCMCCM5R;
 759              		.loc 1 561 47 is_stmt 0 view .LVU246
 760 00bc 1A6E     		ldr	r2, [r3, #96]
 561:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[5] = CRYP->CSGCMCCM5R;
 761              		.loc 1 561 41 view .LVU247
 762 00be 4264     		str	r2, [r0, #68]
 562:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[6] = CRYP->CSGCMCCM6R;
 763              		.loc 1 562 5 is_stmt 1 view .LVU248
 562:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[6] = CRYP->CSGCMCCM6R;
 764              		.loc 1 562 47 is_stmt 0 view .LVU249
 765 00c0 5A6E     		ldr	r2, [r3, #100]
 562:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[6] = CRYP->CSGCMCCM6R;
 766              		.loc 1 562 41 view .LVU250
 767 00c2 8264     		str	r2, [r0, #72]
 563:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[7] = CRYP->CSGCMCCM7R;
 768              		.loc 1 563 5 is_stmt 1 view .LVU251
 563:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[7] = CRYP->CSGCMCCM7R;
 769              		.loc 1 563 47 is_stmt 0 view .LVU252
 770 00c4 9A6E     		ldr	r2, [r3, #104]
 563:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMCCMR[7] = CRYP->CSGCMCCM7R;
 771              		.loc 1 563 41 view .LVU253
 772 00c6 C264     		str	r2, [r0, #76]
 564:./Library/stm32f4xx_cryp.c ****     
 773              		.loc 1 564 5 is_stmt 1 view .LVU254
 564:./Library/stm32f4xx_cryp.c ****     
 774              		.loc 1 564 47 is_stmt 0 view .LVU255
 775 00c8 DA6E     		ldr	r2, [r3, #108]
 564:./Library/stm32f4xx_cryp.c ****     
 776              		.loc 1 564 41 view .LVU256
 777 00ca 0265     		str	r2, [r0, #80]
 566:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[1] = CRYP->CSGCM1R;
 778              		.loc 1 566 5 is_stmt 1 view .LVU257
 566:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[1] = CRYP->CSGCM1R;
 779              		.loc 1 566 44 is_stmt 0 view .LVU258
 780 00cc 1A6F     		ldr	r2, [r3, #112]
 566:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[1] = CRYP->CSGCM1R;
 781              		.loc 1 566 38 view .LVU259
 782 00ce 4265     		str	r2, [r0, #84]
 567:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[2] = CRYP->CSGCM2R;
 783              		.loc 1 567 5 is_stmt 1 view .LVU260
 567:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[2] = CRYP->CSGCM2R;
 784              		.loc 1 567 44 is_stmt 0 view .LVU261
 785 00d0 5A6F     		ldr	r2, [r3, #116]
 567:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[2] = CRYP->CSGCM2R;
 786              		.loc 1 567 38 view .LVU262
 787 00d2 8265     		str	r2, [r0, #88]
 568:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[3] = CRYP->CSGCM3R;
 788              		.loc 1 568 5 is_stmt 1 view .LVU263
 568:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[3] = CRYP->CSGCM3R;
ARM GAS  /tmp/ccmEvdOk.s 			page 26


 789              		.loc 1 568 44 is_stmt 0 view .LVU264
 790 00d4 9A6F     		ldr	r2, [r3, #120]
 568:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[3] = CRYP->CSGCM3R;
 791              		.loc 1 568 38 view .LVU265
 792 00d6 C265     		str	r2, [r0, #92]
 569:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[4] = CRYP->CSGCM4R;
 793              		.loc 1 569 5 is_stmt 1 view .LVU266
 569:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[4] = CRYP->CSGCM4R;
 794              		.loc 1 569 44 is_stmt 0 view .LVU267
 795 00d8 DA6F     		ldr	r2, [r3, #124]
 569:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[4] = CRYP->CSGCM4R;
 796              		.loc 1 569 38 view .LVU268
 797 00da 0266     		str	r2, [r0, #96]
 570:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[5] = CRYP->CSGCM5R;
 798              		.loc 1 570 5 is_stmt 1 view .LVU269
 570:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[5] = CRYP->CSGCM5R;
 799              		.loc 1 570 44 is_stmt 0 view .LVU270
 800 00dc D3F88020 		ldr	r2, [r3, #128]
 570:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[5] = CRYP->CSGCM5R;
 801              		.loc 1 570 38 view .LVU271
 802 00e0 4266     		str	r2, [r0, #100]
 571:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[6] = CRYP->CSGCM6R;
 803              		.loc 1 571 5 is_stmt 1 view .LVU272
 571:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[6] = CRYP->CSGCM6R;
 804              		.loc 1 571 44 is_stmt 0 view .LVU273
 805 00e2 D3F88420 		ldr	r2, [r3, #132]
 571:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[6] = CRYP->CSGCM6R;
 806              		.loc 1 571 38 view .LVU274
 807 00e6 8266     		str	r2, [r0, #104]
 572:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[7] = CRYP->CSGCM7R;
 808              		.loc 1 572 5 is_stmt 1 view .LVU275
 572:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[7] = CRYP->CSGCM7R;
 809              		.loc 1 572 44 is_stmt 0 view .LVU276
 810 00e8 D3F88820 		ldr	r2, [r3, #136]
 572:./Library/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_CSGCMR[7] = CRYP->CSGCM7R;
 811              		.loc 1 572 38 view .LVU277
 812 00ec C266     		str	r2, [r0, #108]
 573:./Library/stm32f4xx_cryp.c ****     
 813              		.loc 1 573 5 is_stmt 1 view .LVU278
 573:./Library/stm32f4xx_cryp.c ****     
 814              		.loc 1 573 44 is_stmt 0 view .LVU279
 815 00ee D3F88C30 		ldr	r3, [r3, #140]
 573:./Library/stm32f4xx_cryp.c ****     
 816              		.loc 1 573 38 view .LVU280
 817 00f2 0367     		str	r3, [r0, #112]
 578:./Library/stm32f4xx_cryp.c ****   }
 818              		.loc 1 578 5 is_stmt 1 view .LVU281
 819              	.LVL23:
 578:./Library/stm32f4xx_cryp.c ****   }
 820              		.loc 1 578 12 is_stmt 0 view .LVU282
 821 00f4 0120     		movs	r0, #1
 822              	.LVL24:
 578:./Library/stm32f4xx_cryp.c ****   }
 823              		.loc 1 578 12 view .LVU283
 824 00f6 A7E7     		b	.L38
 825              	.L44:
 826              		.align	2
ARM GAS  /tmp/ccmEvdOk.s 			page 27


 827              	.L43:
 828 00f8 00000650 		.word	1342570496
 829              		.cfi_endproc
 830              	.LFE135:
 832              		.section	.text.CRYP_RestoreContext,"ax",%progbits
 833              		.align	1
 834              		.global	CRYP_RestoreContext
 835              		.syntax unified
 836              		.thumb
 837              		.thumb_func
 839              	CRYP_RestoreContext:
 840              	.LVL25:
 841              	.LFB136:
 583:./Library/stm32f4xx_cryp.c **** 
 584:./Library/stm32f4xx_cryp.c **** /**
 585:./Library/stm32f4xx_cryp.c ****   * @brief  Restores the CRYP peripheral Context.
 586:./Library/stm32f4xx_cryp.c ****   * @note   Since the DMA transfer is stopped in CRYP_SaveContext() function,
 587:./Library/stm32f4xx_cryp.c ****   *         after restoring the context, you have to enable the DMA again (if the
 588:./Library/stm32f4xx_cryp.c ****   *         DMA was previously used).  
 589:./Library/stm32f4xx_cryp.c ****   * @param  CRYP_ContextRestore: pointer to a CRYP_Context structure that contains
 590:./Library/stm32f4xx_cryp.c ****   *         the repository for saved context.
 591:./Library/stm32f4xx_cryp.c ****   * @note   The data that were saved during context saving must be rewritten into
 592:./Library/stm32f4xx_cryp.c ****   *         the IN FIFO.
 593:./Library/stm32f4xx_cryp.c ****   * @retval None
 594:./Library/stm32f4xx_cryp.c ****   */
 595:./Library/stm32f4xx_cryp.c **** void CRYP_RestoreContext(CRYP_Context* CRYP_ContextRestore)  
 596:./Library/stm32f4xx_cryp.c **** {
 842              		.loc 1 596 1 is_stmt 1 view -0
 843              		.cfi_startproc
 844              		@ args = 0, pretend = 0, frame = 0
 845              		@ frame_needed = 0, uses_anonymous_args = 0
 846              		@ link register save eliminated.
 597:./Library/stm32f4xx_cryp.c **** 
 598:./Library/stm32f4xx_cryp.c ****   /* Configure the processor with the saved configuration */
 599:./Library/stm32f4xx_cryp.c ****   CRYP->CR = CRYP_ContextRestore->CR_CurrentConfig;
 847              		.loc 1 599 3 view .LVU285
 848              		.loc 1 599 33 is_stmt 0 view .LVU286
 849 0000 0268     		ldr	r2, [r0]
 850              		.loc 1 599 12 view .LVU287
 851 0002 214B     		ldr	r3, .L46
 852 0004 1A60     		str	r2, [r3]
 600:./Library/stm32f4xx_cryp.c **** 
 601:./Library/stm32f4xx_cryp.c ****   /* restore The key value */
 602:./Library/stm32f4xx_cryp.c ****   CRYP->K0LR = CRYP_ContextRestore->CRYP_K0LR; 
 853              		.loc 1 602 3 is_stmt 1 view .LVU288
 854              		.loc 1 602 35 is_stmt 0 view .LVU289
 855 0006 4269     		ldr	r2, [r0, #20]
 856              		.loc 1 602 14 view .LVU290
 857 0008 1A62     		str	r2, [r3, #32]
 603:./Library/stm32f4xx_cryp.c ****   CRYP->K0RR = CRYP_ContextRestore->CRYP_K0RR;
 858              		.loc 1 603 3 is_stmt 1 view .LVU291
 859              		.loc 1 603 35 is_stmt 0 view .LVU292
 860 000a 8269     		ldr	r2, [r0, #24]
 861              		.loc 1 603 14 view .LVU293
 862 000c 5A62     		str	r2, [r3, #36]
 604:./Library/stm32f4xx_cryp.c ****   CRYP->K1LR = CRYP_ContextRestore->CRYP_K1LR;
 863              		.loc 1 604 3 is_stmt 1 view .LVU294
ARM GAS  /tmp/ccmEvdOk.s 			page 28


 864              		.loc 1 604 35 is_stmt 0 view .LVU295
 865 000e C269     		ldr	r2, [r0, #28]
 866              		.loc 1 604 14 view .LVU296
 867 0010 9A62     		str	r2, [r3, #40]
 605:./Library/stm32f4xx_cryp.c ****   CRYP->K1RR = CRYP_ContextRestore->CRYP_K1RR;
 868              		.loc 1 605 3 is_stmt 1 view .LVU297
 869              		.loc 1 605 35 is_stmt 0 view .LVU298
 870 0012 026A     		ldr	r2, [r0, #32]
 871              		.loc 1 605 14 view .LVU299
 872 0014 DA62     		str	r2, [r3, #44]
 606:./Library/stm32f4xx_cryp.c ****   CRYP->K2LR = CRYP_ContextRestore->CRYP_K2LR;
 873              		.loc 1 606 3 is_stmt 1 view .LVU300
 874              		.loc 1 606 35 is_stmt 0 view .LVU301
 875 0016 426A     		ldr	r2, [r0, #36]
 876              		.loc 1 606 14 view .LVU302
 877 0018 1A63     		str	r2, [r3, #48]
 607:./Library/stm32f4xx_cryp.c ****   CRYP->K2RR = CRYP_ContextRestore->CRYP_K2RR;
 878              		.loc 1 607 3 is_stmt 1 view .LVU303
 879              		.loc 1 607 35 is_stmt 0 view .LVU304
 880 001a 826A     		ldr	r2, [r0, #40]
 881              		.loc 1 607 14 view .LVU305
 882 001c 5A63     		str	r2, [r3, #52]
 608:./Library/stm32f4xx_cryp.c ****   CRYP->K3LR = CRYP_ContextRestore->CRYP_K3LR;
 883              		.loc 1 608 3 is_stmt 1 view .LVU306
 884              		.loc 1 608 35 is_stmt 0 view .LVU307
 885 001e C26A     		ldr	r2, [r0, #44]
 886              		.loc 1 608 14 view .LVU308
 887 0020 9A63     		str	r2, [r3, #56]
 609:./Library/stm32f4xx_cryp.c ****   CRYP->K3RR = CRYP_ContextRestore->CRYP_K3RR;
 888              		.loc 1 609 3 is_stmt 1 view .LVU309
 889              		.loc 1 609 35 is_stmt 0 view .LVU310
 890 0022 026B     		ldr	r2, [r0, #48]
 891              		.loc 1 609 14 view .LVU311
 892 0024 DA63     		str	r2, [r3, #60]
 610:./Library/stm32f4xx_cryp.c **** 
 611:./Library/stm32f4xx_cryp.c ****   /* and the initialization vectors. */
 612:./Library/stm32f4xx_cryp.c ****   CRYP->IV0LR = CRYP_ContextRestore->CRYP_IV0LR;
 893              		.loc 1 612 3 is_stmt 1 view .LVU312
 894              		.loc 1 612 36 is_stmt 0 view .LVU313
 895 0026 4268     		ldr	r2, [r0, #4]
 896              		.loc 1 612 15 view .LVU314
 897 0028 1A64     		str	r2, [r3, #64]
 613:./Library/stm32f4xx_cryp.c ****   CRYP->IV0RR = CRYP_ContextRestore->CRYP_IV0RR;
 898              		.loc 1 613 3 is_stmt 1 view .LVU315
 899              		.loc 1 613 36 is_stmt 0 view .LVU316
 900 002a 8268     		ldr	r2, [r0, #8]
 901              		.loc 1 613 15 view .LVU317
 902 002c 5A64     		str	r2, [r3, #68]
 614:./Library/stm32f4xx_cryp.c ****   CRYP->IV1LR = CRYP_ContextRestore->CRYP_IV1LR;
 903              		.loc 1 614 3 is_stmt 1 view .LVU318
 904              		.loc 1 614 36 is_stmt 0 view .LVU319
 905 002e C268     		ldr	r2, [r0, #12]
 906              		.loc 1 614 15 view .LVU320
 907 0030 9A64     		str	r2, [r3, #72]
 615:./Library/stm32f4xx_cryp.c ****   CRYP->IV1RR = CRYP_ContextRestore->CRYP_IV1RR;
 908              		.loc 1 615 3 is_stmt 1 view .LVU321
 909              		.loc 1 615 36 is_stmt 0 view .LVU322
ARM GAS  /tmp/ccmEvdOk.s 			page 29


 910 0032 0269     		ldr	r2, [r0, #16]
 911              		.loc 1 615 15 view .LVU323
 912 0034 DA64     		str	r2, [r3, #76]
 616:./Library/stm32f4xx_cryp.c **** 
 617:./Library/stm32f4xx_cryp.c ****   /* Restore the content of context swap registers */
 618:./Library/stm32f4xx_cryp.c ****   CRYP->CSGCMCCM0R = CRYP_ContextRestore->CRYP_CSGCMCCMR[0];
 913              		.loc 1 618 3 is_stmt 1 view .LVU324
 914              		.loc 1 618 57 is_stmt 0 view .LVU325
 915 0036 426B     		ldr	r2, [r0, #52]
 916              		.loc 1 618 20 view .LVU326
 917 0038 1A65     		str	r2, [r3, #80]
 619:./Library/stm32f4xx_cryp.c ****   CRYP->CSGCMCCM1R = CRYP_ContextRestore->CRYP_CSGCMCCMR[1];
 918              		.loc 1 619 3 is_stmt 1 view .LVU327
 919              		.loc 1 619 57 is_stmt 0 view .LVU328
 920 003a 826B     		ldr	r2, [r0, #56]
 921              		.loc 1 619 20 view .LVU329
 922 003c 5A65     		str	r2, [r3, #84]
 620:./Library/stm32f4xx_cryp.c ****   CRYP->CSGCMCCM2R = CRYP_ContextRestore->CRYP_CSGCMCCMR[2];
 923              		.loc 1 620 3 is_stmt 1 view .LVU330
 924              		.loc 1 620 57 is_stmt 0 view .LVU331
 925 003e C26B     		ldr	r2, [r0, #60]
 926              		.loc 1 620 20 view .LVU332
 927 0040 9A65     		str	r2, [r3, #88]
 621:./Library/stm32f4xx_cryp.c ****   CRYP->CSGCMCCM3R = CRYP_ContextRestore->CRYP_CSGCMCCMR[3];
 928              		.loc 1 621 3 is_stmt 1 view .LVU333
 929              		.loc 1 621 57 is_stmt 0 view .LVU334
 930 0042 026C     		ldr	r2, [r0, #64]
 931              		.loc 1 621 20 view .LVU335
 932 0044 DA65     		str	r2, [r3, #92]
 622:./Library/stm32f4xx_cryp.c ****   CRYP->CSGCMCCM4R = CRYP_ContextRestore->CRYP_CSGCMCCMR[4];
 933              		.loc 1 622 3 is_stmt 1 view .LVU336
 934              		.loc 1 622 57 is_stmt 0 view .LVU337
 935 0046 426C     		ldr	r2, [r0, #68]
 936              		.loc 1 622 20 view .LVU338
 937 0048 1A66     		str	r2, [r3, #96]
 623:./Library/stm32f4xx_cryp.c ****   CRYP->CSGCMCCM5R = CRYP_ContextRestore->CRYP_CSGCMCCMR[5];
 938              		.loc 1 623 3 is_stmt 1 view .LVU339
 939              		.loc 1 623 57 is_stmt 0 view .LVU340
 940 004a 826C     		ldr	r2, [r0, #72]
 941              		.loc 1 623 20 view .LVU341
 942 004c 5A66     		str	r2, [r3, #100]
 624:./Library/stm32f4xx_cryp.c ****   CRYP->CSGCMCCM6R = CRYP_ContextRestore->CRYP_CSGCMCCMR[6];
 943              		.loc 1 624 3 is_stmt 1 view .LVU342
 944              		.loc 1 624 57 is_stmt 0 view .LVU343
 945 004e C26C     		ldr	r2, [r0, #76]
 946              		.loc 1 624 20 view .LVU344
 947 0050 9A66     		str	r2, [r3, #104]
 625:./Library/stm32f4xx_cryp.c ****   CRYP->CSGCMCCM7R = CRYP_ContextRestore->CRYP_CSGCMCCMR[7];
 948              		.loc 1 625 3 is_stmt 1 view .LVU345
 949              		.loc 1 625 57 is_stmt 0 view .LVU346
 950 0052 026D     		ldr	r2, [r0, #80]
 951              		.loc 1 625 20 view .LVU347
 952 0054 DA66     		str	r2, [r3, #108]
 626:./Library/stm32f4xx_cryp.c ****   
 627:./Library/stm32f4xx_cryp.c ****   CRYP->CSGCM0R = CRYP_ContextRestore->CRYP_CSGCMR[0];
 953              		.loc 1 627 3 is_stmt 1 view .LVU348
 954              		.loc 1 627 51 is_stmt 0 view .LVU349
ARM GAS  /tmp/ccmEvdOk.s 			page 30


 955 0056 426D     		ldr	r2, [r0, #84]
 956              		.loc 1 627 17 view .LVU350
 957 0058 1A67     		str	r2, [r3, #112]
 628:./Library/stm32f4xx_cryp.c ****   CRYP->CSGCM1R = CRYP_ContextRestore->CRYP_CSGCMR[1];
 958              		.loc 1 628 3 is_stmt 1 view .LVU351
 959              		.loc 1 628 51 is_stmt 0 view .LVU352
 960 005a 826D     		ldr	r2, [r0, #88]
 961              		.loc 1 628 17 view .LVU353
 962 005c 5A67     		str	r2, [r3, #116]
 629:./Library/stm32f4xx_cryp.c ****   CRYP->CSGCM2R = CRYP_ContextRestore->CRYP_CSGCMR[2];
 963              		.loc 1 629 3 is_stmt 1 view .LVU354
 964              		.loc 1 629 51 is_stmt 0 view .LVU355
 965 005e C26D     		ldr	r2, [r0, #92]
 966              		.loc 1 629 17 view .LVU356
 967 0060 9A67     		str	r2, [r3, #120]
 630:./Library/stm32f4xx_cryp.c ****   CRYP->CSGCM3R = CRYP_ContextRestore->CRYP_CSGCMR[3];
 968              		.loc 1 630 3 is_stmt 1 view .LVU357
 969              		.loc 1 630 51 is_stmt 0 view .LVU358
 970 0062 026E     		ldr	r2, [r0, #96]
 971              		.loc 1 630 17 view .LVU359
 972 0064 DA67     		str	r2, [r3, #124]
 631:./Library/stm32f4xx_cryp.c ****   CRYP->CSGCM4R = CRYP_ContextRestore->CRYP_CSGCMR[4];
 973              		.loc 1 631 3 is_stmt 1 view .LVU360
 974              		.loc 1 631 51 is_stmt 0 view .LVU361
 975 0066 426E     		ldr	r2, [r0, #100]
 976              		.loc 1 631 17 view .LVU362
 977 0068 C3F88020 		str	r2, [r3, #128]
 632:./Library/stm32f4xx_cryp.c ****   CRYP->CSGCM5R = CRYP_ContextRestore->CRYP_CSGCMR[5];
 978              		.loc 1 632 3 is_stmt 1 view .LVU363
 979              		.loc 1 632 51 is_stmt 0 view .LVU364
 980 006c 826E     		ldr	r2, [r0, #104]
 981              		.loc 1 632 17 view .LVU365
 982 006e C3F88420 		str	r2, [r3, #132]
 633:./Library/stm32f4xx_cryp.c ****   CRYP->CSGCM6R = CRYP_ContextRestore->CRYP_CSGCMR[6];
 983              		.loc 1 633 3 is_stmt 1 view .LVU366
 984              		.loc 1 633 51 is_stmt 0 view .LVU367
 985 0072 C26E     		ldr	r2, [r0, #108]
 986              		.loc 1 633 17 view .LVU368
 987 0074 C3F88820 		str	r2, [r3, #136]
 634:./Library/stm32f4xx_cryp.c ****   CRYP->CSGCM7R = CRYP_ContextRestore->CRYP_CSGCMR[7];
 988              		.loc 1 634 3 is_stmt 1 view .LVU369
 989              		.loc 1 634 51 is_stmt 0 view .LVU370
 990 0078 026F     		ldr	r2, [r0, #112]
 991              		.loc 1 634 17 view .LVU371
 992 007a C3F88C20 		str	r2, [r3, #140]
 635:./Library/stm32f4xx_cryp.c ****   
 636:./Library/stm32f4xx_cryp.c ****   /* Enable the cryptographic processor */
 637:./Library/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_CR_CRYPEN;
 993              		.loc 1 637 3 is_stmt 1 view .LVU372
 994              		.loc 1 637 7 is_stmt 0 view .LVU373
 995 007e 1A68     		ldr	r2, [r3]
 996              		.loc 1 637 12 view .LVU374
 997 0080 42F40042 		orr	r2, r2, #32768
 998 0084 1A60     		str	r2, [r3]
 638:./Library/stm32f4xx_cryp.c **** }
 999              		.loc 1 638 1 view .LVU375
 1000 0086 7047     		bx	lr
ARM GAS  /tmp/ccmEvdOk.s 			page 31


 1001              	.L47:
 1002              		.align	2
 1003              	.L46:
 1004 0088 00000650 		.word	1342570496
 1005              		.cfi_endproc
 1006              	.LFE136:
 1008              		.section	.text.CRYP_DMACmd,"ax",%progbits
 1009              		.align	1
 1010              		.global	CRYP_DMACmd
 1011              		.syntax unified
 1012              		.thumb
 1013              		.thumb_func
 1015              	CRYP_DMACmd:
 1016              	.LVL26:
 1017              	.LFB137:
 639:./Library/stm32f4xx_cryp.c **** /**
 640:./Library/stm32f4xx_cryp.c ****   * @}
 641:./Library/stm32f4xx_cryp.c ****   */
 642:./Library/stm32f4xx_cryp.c **** 
 643:./Library/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group4 CRYP's DMA interface Configuration function
 644:./Library/stm32f4xx_cryp.c ****  *  @brief   CRYP's DMA interface Configuration function 
 645:./Library/stm32f4xx_cryp.c ****  *
 646:./Library/stm32f4xx_cryp.c **** @verbatim   
 647:./Library/stm32f4xx_cryp.c ****  ===============================================================================
 648:./Library/stm32f4xx_cryp.c ****              ##### CRYP's DMA interface Configuration function #####
 649:./Library/stm32f4xx_cryp.c ****  ===============================================================================  
 650:./Library/stm32f4xx_cryp.c ****  [..] This section provides functions allowing to configure the DMA interface for 
 651:./Library/stm32f4xx_cryp.c ****       CRYP data input and output transfer.
 652:./Library/stm32f4xx_cryp.c ****    
 653:./Library/stm32f4xx_cryp.c ****  [..] When the DMA mode is enabled (using the CRYP_DMACmd() function), data can be 
 654:./Library/stm32f4xx_cryp.c ****       transferred:
 655:./Library/stm32f4xx_cryp.c ****    (+) From memory to the CRYP IN FIFO using the DMA peripheral by enabling 
 656:./Library/stm32f4xx_cryp.c ****        the CRYP_DMAReq_DataIN request.
 657:./Library/stm32f4xx_cryp.c ****    (+) From the CRYP OUT FIFO to the memory using the DMA peripheral by enabling 
 658:./Library/stm32f4xx_cryp.c ****        the CRYP_DMAReq_DataOUT request.
 659:./Library/stm32f4xx_cryp.c **** 
 660:./Library/stm32f4xx_cryp.c **** @endverbatim
 661:./Library/stm32f4xx_cryp.c ****   * @{
 662:./Library/stm32f4xx_cryp.c ****   */
 663:./Library/stm32f4xx_cryp.c **** 
 664:./Library/stm32f4xx_cryp.c **** /**
 665:./Library/stm32f4xx_cryp.c ****   * @brief  Enables or disables the CRYP DMA interface.
 666:./Library/stm32f4xx_cryp.c ****   * @param  CRYP_DMAReq: specifies the CRYP DMA transfer request to be enabled or disabled.
 667:./Library/stm32f4xx_cryp.c ****   *           This parameter can be any combination of the following values:
 668:./Library/stm32f4xx_cryp.c ****   *            @arg CRYP_DMAReq_DataOUT: DMA for outgoing(Tx) data transfer
 669:./Library/stm32f4xx_cryp.c ****   *            @arg CRYP_DMAReq_DataIN: DMA for incoming(Rx) data transfer
 670:./Library/stm32f4xx_cryp.c ****   * @param  NewState: new state of the selected CRYP DMA transfer request.
 671:./Library/stm32f4xx_cryp.c ****   *          This parameter can be: ENABLE or DISABLE.
 672:./Library/stm32f4xx_cryp.c ****   * @retval None
 673:./Library/stm32f4xx_cryp.c ****   */
 674:./Library/stm32f4xx_cryp.c **** void CRYP_DMACmd(uint8_t CRYP_DMAReq, FunctionalState NewState)
 675:./Library/stm32f4xx_cryp.c **** {
 1018              		.loc 1 675 1 is_stmt 1 view -0
 1019              		.cfi_startproc
 1020              		@ args = 0, pretend = 0, frame = 0
 1021              		@ frame_needed = 0, uses_anonymous_args = 0
 1022              		@ link register save eliminated.
ARM GAS  /tmp/ccmEvdOk.s 			page 32


 676:./Library/stm32f4xx_cryp.c ****   /* Check the parameters */
 677:./Library/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_DMAREQ(CRYP_DMAReq));
 1023              		.loc 1 677 3 view .LVU377
 678:./Library/stm32f4xx_cryp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1024              		.loc 1 678 3 view .LVU378
 679:./Library/stm32f4xx_cryp.c **** 
 680:./Library/stm32f4xx_cryp.c ****   if (NewState != DISABLE)
 1025              		.loc 1 680 3 view .LVU379
 1026              		.loc 1 680 6 is_stmt 0 view .LVU380
 1027 0000 21B1     		cbz	r1, .L49
 681:./Library/stm32f4xx_cryp.c ****   {
 682:./Library/stm32f4xx_cryp.c ****     /* Enable the selected CRYP DMA request */
 683:./Library/stm32f4xx_cryp.c ****     CRYP->DMACR |= CRYP_DMAReq;
 1028              		.loc 1 683 5 is_stmt 1 view .LVU381
 1029              		.loc 1 683 9 is_stmt 0 view .LVU382
 1030 0002 064B     		ldr	r3, .L51
 1031 0004 1A69     		ldr	r2, [r3, #16]
 1032              		.loc 1 683 17 view .LVU383
 1033 0006 1043     		orrs	r0, r0, r2
 1034              	.LVL27:
 1035              		.loc 1 683 17 view .LVU384
 1036 0008 1861     		str	r0, [r3, #16]
 1037 000a 7047     		bx	lr
 1038              	.LVL28:
 1039              	.L49:
 684:./Library/stm32f4xx_cryp.c ****   }
 685:./Library/stm32f4xx_cryp.c ****   else
 686:./Library/stm32f4xx_cryp.c ****   {
 687:./Library/stm32f4xx_cryp.c ****     /* Disable the selected CRYP DMA request */
 688:./Library/stm32f4xx_cryp.c ****     CRYP->DMACR &= (uint8_t)~CRYP_DMAReq;
 1040              		.loc 1 688 5 is_stmt 1 view .LVU385
 1041              		.loc 1 688 9 is_stmt 0 view .LVU386
 1042 000c 034A     		ldr	r2, .L51
 1043 000e 1369     		ldr	r3, [r2, #16]
 1044              		.loc 1 688 20 view .LVU387
 1045 0010 C043     		mvns	r0, r0
 1046              	.LVL29:
 1047              		.loc 1 688 20 view .LVU388
 1048 0012 C0B2     		uxtb	r0, r0
 1049              		.loc 1 688 17 view .LVU389
 1050 0014 0340     		ands	r3, r3, r0
 1051 0016 1361     		str	r3, [r2, #16]
 689:./Library/stm32f4xx_cryp.c ****   }
 690:./Library/stm32f4xx_cryp.c **** }
 1052              		.loc 1 690 1 view .LVU390
 1053 0018 7047     		bx	lr
 1054              	.L52:
 1055 001a 00BF     		.align	2
 1056              	.L51:
 1057 001c 00000650 		.word	1342570496
 1058              		.cfi_endproc
 1059              	.LFE137:
 1061              		.section	.text.CRYP_ITConfig,"ax",%progbits
 1062              		.align	1
 1063              		.global	CRYP_ITConfig
 1064              		.syntax unified
 1065              		.thumb
ARM GAS  /tmp/ccmEvdOk.s 			page 33


 1066              		.thumb_func
 1068              	CRYP_ITConfig:
 1069              	.LVL30:
 1070              	.LFB138:
 691:./Library/stm32f4xx_cryp.c **** /**
 692:./Library/stm32f4xx_cryp.c ****   * @}
 693:./Library/stm32f4xx_cryp.c ****   */
 694:./Library/stm32f4xx_cryp.c **** 
 695:./Library/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group5 Interrupts and flags management functions
 696:./Library/stm32f4xx_cryp.c ****  *  @brief   Interrupts and flags management functions
 697:./Library/stm32f4xx_cryp.c ****  *
 698:./Library/stm32f4xx_cryp.c **** @verbatim   
 699:./Library/stm32f4xx_cryp.c ****  ===============================================================================
 700:./Library/stm32f4xx_cryp.c ****               ##### Interrupts and flags management functions #####
 701:./Library/stm32f4xx_cryp.c ****  ===============================================================================  
 702:./Library/stm32f4xx_cryp.c ****  
 703:./Library/stm32f4xx_cryp.c ****  [..] This section provides functions allowing to configure the CRYP Interrupts and 
 704:./Library/stm32f4xx_cryp.c ****       to get the status and Interrupts pending bits.
 705:./Library/stm32f4xx_cryp.c **** 
 706:./Library/stm32f4xx_cryp.c ****  [..] The CRYP provides 2 Interrupts sources and 7 Flags:
 707:./Library/stm32f4xx_cryp.c **** 
 708:./Library/stm32f4xx_cryp.c ****  *** Flags : ***
 709:./Library/stm32f4xx_cryp.c ****  ===============
 710:./Library/stm32f4xx_cryp.c ****  [..] 
 711:./Library/stm32f4xx_cryp.c ****    (#) CRYP_FLAG_IFEM :  Set when Input FIFO is empty. This Flag is cleared only
 712:./Library/stm32f4xx_cryp.c ****        by hardware.
 713:./Library/stm32f4xx_cryp.c ****       
 714:./Library/stm32f4xx_cryp.c ****    (#) CRYP_FLAG_IFNF :  Set when Input FIFO is not full. This Flag is cleared 
 715:./Library/stm32f4xx_cryp.c ****        only by hardware.
 716:./Library/stm32f4xx_cryp.c **** 
 717:./Library/stm32f4xx_cryp.c **** 
 718:./Library/stm32f4xx_cryp.c ****    (#) CRYP_FLAG_INRIS  : Set when Input FIFO Raw interrupt is pending it gives 
 719:./Library/stm32f4xx_cryp.c ****        the raw interrupt state prior to masking of the input FIFO service interrupt.
 720:./Library/stm32f4xx_cryp.c ****        This Flag is cleared only by hardware.
 721:./Library/stm32f4xx_cryp.c ****      
 722:./Library/stm32f4xx_cryp.c ****    (#) CRYP_FLAG_OFNE   : Set when Output FIFO not empty. This Flag is cleared 
 723:./Library/stm32f4xx_cryp.c ****        only by hardware.
 724:./Library/stm32f4xx_cryp.c ****         
 725:./Library/stm32f4xx_cryp.c ****    (#) CRYP_FLAG_OFFU   : Set when Output FIFO is full. This Flag is cleared only 
 726:./Library/stm32f4xx_cryp.c ****        by hardware.
 727:./Library/stm32f4xx_cryp.c ****                            
 728:./Library/stm32f4xx_cryp.c ****    (#) CRYP_FLAG_OUTRIS : Set when Output FIFO Raw interrupt is pending it gives 
 729:./Library/stm32f4xx_cryp.c ****        the raw interrupt state prior to masking of the output FIFO service interrupt.
 730:./Library/stm32f4xx_cryp.c ****        This Flag is cleared only by hardware.
 731:./Library/stm32f4xx_cryp.c ****                                
 732:./Library/stm32f4xx_cryp.c ****    (#) CRYP_FLAG_BUSY   : Set when the CRYP core is currently processing a block 
 733:./Library/stm32f4xx_cryp.c ****        of data or a key preparation (for AES decryption). This Flag is cleared 
 734:./Library/stm32f4xx_cryp.c ****        only by hardware. To clear it, the CRYP core must be disabled and the last
 735:./Library/stm32f4xx_cryp.c ****        processing has completed. 
 736:./Library/stm32f4xx_cryp.c **** 
 737:./Library/stm32f4xx_cryp.c ****  *** Interrupts : ***
 738:./Library/stm32f4xx_cryp.c ****  ====================
 739:./Library/stm32f4xx_cryp.c ****  [..]
 740:./Library/stm32f4xx_cryp.c ****    (#) CRYP_IT_INI   : The input FIFO service interrupt is asserted when there 
 741:./Library/stm32f4xx_cryp.c ****       are less than 4 words in the input FIFO. This interrupt is associated to 
 742:./Library/stm32f4xx_cryp.c ****       CRYP_FLAG_INRIS flag.
 743:./Library/stm32f4xx_cryp.c **** 
ARM GAS  /tmp/ccmEvdOk.s 			page 34


 744:./Library/stm32f4xx_cryp.c ****       -@- This interrupt is cleared by performing write operations to the input FIFO 
 745:./Library/stm32f4xx_cryp.c ****           until it holds 4 or more words. The input FIFO service interrupt INMIS is 
 746:./Library/stm32f4xx_cryp.c ****           enabled with the CRYP enable bit. Consequently, when CRYP is disabled, the 
 747:./Library/stm32f4xx_cryp.c ****           INMIS signal is low even if the input FIFO is empty.
 748:./Library/stm32f4xx_cryp.c **** 
 749:./Library/stm32f4xx_cryp.c **** 
 750:./Library/stm32f4xx_cryp.c **** 
 751:./Library/stm32f4xx_cryp.c ****    (#) CRYP_IT_OUTI  : The output FIFO service interrupt is asserted when there 
 752:./Library/stm32f4xx_cryp.c ****        is one or more (32-bit word) data items in the output FIFO. This interrupt 
 753:./Library/stm32f4xx_cryp.c ****        is associated to CRYP_FLAG_OUTRIS flag.
 754:./Library/stm32f4xx_cryp.c **** 
 755:./Library/stm32f4xx_cryp.c ****        -@- This interrupt is cleared by reading data from the output FIFO until there 
 756:./Library/stm32f4xx_cryp.c ****            is no valid (32-bit) word left (that is, the interrupt follows the state 
 757:./Library/stm32f4xx_cryp.c ****            of the OFNE (output FIFO not empty) flag).
 758:./Library/stm32f4xx_cryp.c **** 
 759:./Library/stm32f4xx_cryp.c ****  *** Managing the CRYP controller events : ***
 760:./Library/stm32f4xx_cryp.c ****  =============================================
 761:./Library/stm32f4xx_cryp.c ****  [..] The user should identify which mode will be used in his application to manage 
 762:./Library/stm32f4xx_cryp.c ****       the CRYP controller events: Polling mode or Interrupt mode.
 763:./Library/stm32f4xx_cryp.c **** 
 764:./Library/stm32f4xx_cryp.c ****    (#) In the Polling Mode it is advised to use the following functions:
 765:./Library/stm32f4xx_cryp.c ****        (++) CRYP_GetFlagStatus() : to check if flags events occur. 
 766:./Library/stm32f4xx_cryp.c **** 
 767:./Library/stm32f4xx_cryp.c ****        -@@- The CRYPT flags do not need to be cleared since they are cleared as 
 768:./Library/stm32f4xx_cryp.c ****             soon as the associated event are reset.   
 769:./Library/stm32f4xx_cryp.c **** 
 770:./Library/stm32f4xx_cryp.c **** 
 771:./Library/stm32f4xx_cryp.c ****    (#) In the Interrupt Mode it is advised to use the following functions:
 772:./Library/stm32f4xx_cryp.c ****        (++) CRYP_ITConfig()       : to enable or disable the interrupt source.
 773:./Library/stm32f4xx_cryp.c ****        (++) CRYP_GetITStatus()    : to check if Interrupt occurs.
 774:./Library/stm32f4xx_cryp.c **** 
 775:./Library/stm32f4xx_cryp.c ****        -@@- The CRYPT interrupts have no pending bits, the interrupt is cleared as 
 776:./Library/stm32f4xx_cryp.c ****              soon as the associated event is reset. 
 777:./Library/stm32f4xx_cryp.c **** 
 778:./Library/stm32f4xx_cryp.c **** @endverbatim
 779:./Library/stm32f4xx_cryp.c ****   * @{
 780:./Library/stm32f4xx_cryp.c ****   */ 
 781:./Library/stm32f4xx_cryp.c **** 
 782:./Library/stm32f4xx_cryp.c **** /**
 783:./Library/stm32f4xx_cryp.c ****   * @brief  Enables or disables the specified CRYP interrupts.
 784:./Library/stm32f4xx_cryp.c ****   * @param  CRYP_IT: specifies the CRYP interrupt source to be enabled or disabled.
 785:./Library/stm32f4xx_cryp.c ****   *          This parameter can be any combination of the following values:
 786:./Library/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_INI: Input FIFO interrupt
 787:./Library/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_OUTI: Output FIFO interrupt
 788:./Library/stm32f4xx_cryp.c ****   * @param  NewState: new state of the specified CRYP interrupt.
 789:./Library/stm32f4xx_cryp.c ****   *           This parameter can be: ENABLE or DISABLE.
 790:./Library/stm32f4xx_cryp.c ****   * @retval None
 791:./Library/stm32f4xx_cryp.c ****   */
 792:./Library/stm32f4xx_cryp.c **** void CRYP_ITConfig(uint8_t CRYP_IT, FunctionalState NewState)
 793:./Library/stm32f4xx_cryp.c **** {
 1071              		.loc 1 793 1 is_stmt 1 view -0
 1072              		.cfi_startproc
 1073              		@ args = 0, pretend = 0, frame = 0
 1074              		@ frame_needed = 0, uses_anonymous_args = 0
 1075              		@ link register save eliminated.
 794:./Library/stm32f4xx_cryp.c ****   /* Check the parameters */
 795:./Library/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_CONFIG_IT(CRYP_IT));
ARM GAS  /tmp/ccmEvdOk.s 			page 35


 1076              		.loc 1 795 3 view .LVU392
 796:./Library/stm32f4xx_cryp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1077              		.loc 1 796 3 view .LVU393
 797:./Library/stm32f4xx_cryp.c **** 
 798:./Library/stm32f4xx_cryp.c ****   if (NewState != DISABLE)
 1078              		.loc 1 798 3 view .LVU394
 1079              		.loc 1 798 6 is_stmt 0 view .LVU395
 1080 0000 21B1     		cbz	r1, .L54
 799:./Library/stm32f4xx_cryp.c ****   {
 800:./Library/stm32f4xx_cryp.c ****     /* Enable the selected CRYP interrupt */
 801:./Library/stm32f4xx_cryp.c ****     CRYP->IMSCR |= CRYP_IT;
 1081              		.loc 1 801 5 is_stmt 1 view .LVU396
 1082              		.loc 1 801 9 is_stmt 0 view .LVU397
 1083 0002 064B     		ldr	r3, .L56
 1084 0004 5A69     		ldr	r2, [r3, #20]
 1085              		.loc 1 801 17 view .LVU398
 1086 0006 1043     		orrs	r0, r0, r2
 1087              	.LVL31:
 1088              		.loc 1 801 17 view .LVU399
 1089 0008 5861     		str	r0, [r3, #20]
 1090 000a 7047     		bx	lr
 1091              	.LVL32:
 1092              	.L54:
 802:./Library/stm32f4xx_cryp.c ****   }
 803:./Library/stm32f4xx_cryp.c ****   else
 804:./Library/stm32f4xx_cryp.c ****   {
 805:./Library/stm32f4xx_cryp.c ****     /* Disable the selected CRYP interrupt */
 806:./Library/stm32f4xx_cryp.c ****     CRYP->IMSCR &= (uint8_t)~CRYP_IT;
 1093              		.loc 1 806 5 is_stmt 1 view .LVU400
 1094              		.loc 1 806 9 is_stmt 0 view .LVU401
 1095 000c 034A     		ldr	r2, .L56
 1096 000e 5369     		ldr	r3, [r2, #20]
 1097              		.loc 1 806 20 view .LVU402
 1098 0010 C043     		mvns	r0, r0
 1099              	.LVL33:
 1100              		.loc 1 806 20 view .LVU403
 1101 0012 C0B2     		uxtb	r0, r0
 1102              		.loc 1 806 17 view .LVU404
 1103 0014 0340     		ands	r3, r3, r0
 1104 0016 5361     		str	r3, [r2, #20]
 807:./Library/stm32f4xx_cryp.c ****   }
 808:./Library/stm32f4xx_cryp.c **** }
 1105              		.loc 1 808 1 view .LVU405
 1106 0018 7047     		bx	lr
 1107              	.L57:
 1108 001a 00BF     		.align	2
 1109              	.L56:
 1110 001c 00000650 		.word	1342570496
 1111              		.cfi_endproc
 1112              	.LFE138:
 1114              		.section	.text.CRYP_GetITStatus,"ax",%progbits
 1115              		.align	1
 1116              		.global	CRYP_GetITStatus
 1117              		.syntax unified
 1118              		.thumb
 1119              		.thumb_func
 1121              	CRYP_GetITStatus:
ARM GAS  /tmp/ccmEvdOk.s 			page 36


 1122              	.LVL34:
 1123              	.LFB139:
 809:./Library/stm32f4xx_cryp.c **** 
 810:./Library/stm32f4xx_cryp.c **** /**
 811:./Library/stm32f4xx_cryp.c ****   * @brief  Checks whether the specified CRYP interrupt has occurred or not.
 812:./Library/stm32f4xx_cryp.c ****   * @note   This function checks the status of the masked interrupt (i.e the 
 813:./Library/stm32f4xx_cryp.c ****   *         interrupt should be previously enabled).     
 814:./Library/stm32f4xx_cryp.c ****   * @param  CRYP_IT: specifies the CRYP (masked) interrupt source to check.
 815:./Library/stm32f4xx_cryp.c ****   *           This parameter can be one of the following values:
 816:./Library/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_INI: Input FIFO interrupt
 817:./Library/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_OUTI: Output FIFO interrupt
 818:./Library/stm32f4xx_cryp.c ****   * @retval The new state of CRYP_IT (SET or RESET).
 819:./Library/stm32f4xx_cryp.c ****   */
 820:./Library/stm32f4xx_cryp.c **** ITStatus CRYP_GetITStatus(uint8_t CRYP_IT)
 821:./Library/stm32f4xx_cryp.c **** {
 1124              		.loc 1 821 1 is_stmt 1 view -0
 1125              		.cfi_startproc
 1126              		@ args = 0, pretend = 0, frame = 0
 1127              		@ frame_needed = 0, uses_anonymous_args = 0
 1128              		@ link register save eliminated.
 822:./Library/stm32f4xx_cryp.c ****   ITStatus bitstatus = RESET;
 1129              		.loc 1 822 3 view .LVU407
 823:./Library/stm32f4xx_cryp.c ****   /* Check the parameters */
 824:./Library/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_GET_IT(CRYP_IT));
 1130              		.loc 1 824 3 view .LVU408
 825:./Library/stm32f4xx_cryp.c **** 
 826:./Library/stm32f4xx_cryp.c ****   /* Check the status of the specified CRYP interrupt */
 827:./Library/stm32f4xx_cryp.c ****   if ((CRYP->MISR &  CRYP_IT) != (uint8_t)RESET)
 1131              		.loc 1 827 3 view .LVU409
 1132              		.loc 1 827 12 is_stmt 0 view .LVU410
 1133 0000 034B     		ldr	r3, .L61
 1134 0002 DB69     		ldr	r3, [r3, #28]
 1135              		.loc 1 827 6 view .LVU411
 1136 0004 1842     		tst	r0, r3
 1137 0006 01D0     		beq	.L60
 828:./Library/stm32f4xx_cryp.c ****   {
 829:./Library/stm32f4xx_cryp.c ****     /* CRYP_IT is set */
 830:./Library/stm32f4xx_cryp.c ****     bitstatus = SET;
 1138              		.loc 1 830 15 view .LVU412
 1139 0008 0120     		movs	r0, #1
 1140              	.LVL35:
 1141              		.loc 1 830 15 view .LVU413
 1142 000a 7047     		bx	lr
 1143              	.LVL36:
 1144              	.L60:
 831:./Library/stm32f4xx_cryp.c ****   }
 832:./Library/stm32f4xx_cryp.c ****   else
 833:./Library/stm32f4xx_cryp.c ****   {
 834:./Library/stm32f4xx_cryp.c ****     /* CRYP_IT is reset */
 835:./Library/stm32f4xx_cryp.c ****     bitstatus = RESET;
 1145              		.loc 1 835 15 view .LVU414
 1146 000c 0020     		movs	r0, #0
 1147              	.LVL37:
 836:./Library/stm32f4xx_cryp.c ****   }
 837:./Library/stm32f4xx_cryp.c ****   /* Return the CRYP_IT status */
 838:./Library/stm32f4xx_cryp.c ****   return bitstatus;
 1148              		.loc 1 838 3 is_stmt 1 view .LVU415
ARM GAS  /tmp/ccmEvdOk.s 			page 37


 839:./Library/stm32f4xx_cryp.c **** }
 1149              		.loc 1 839 1 is_stmt 0 view .LVU416
 1150 000e 7047     		bx	lr
 1151              	.L62:
 1152              		.align	2
 1153              	.L61:
 1154 0010 00000650 		.word	1342570496
 1155              		.cfi_endproc
 1156              	.LFE139:
 1158              		.section	.text.CRYP_GetCmdStatus,"ax",%progbits
 1159              		.align	1
 1160              		.global	CRYP_GetCmdStatus
 1161              		.syntax unified
 1162              		.thumb
 1163              		.thumb_func
 1165              	CRYP_GetCmdStatus:
 1166              	.LFB140:
 840:./Library/stm32f4xx_cryp.c **** 
 841:./Library/stm32f4xx_cryp.c **** /**
 842:./Library/stm32f4xx_cryp.c ****   * @brief  Returns whether CRYP peripheral is enabled or disabled.
 843:./Library/stm32f4xx_cryp.c ****   * @param  none.
 844:./Library/stm32f4xx_cryp.c ****   * @retval Current state of the CRYP peripheral (ENABLE or DISABLE).
 845:./Library/stm32f4xx_cryp.c ****   */
 846:./Library/stm32f4xx_cryp.c **** FunctionalState CRYP_GetCmdStatus(void)
 847:./Library/stm32f4xx_cryp.c **** {
 1167              		.loc 1 847 1 is_stmt 1 view -0
 1168              		.cfi_startproc
 1169              		@ args = 0, pretend = 0, frame = 0
 1170              		@ frame_needed = 0, uses_anonymous_args = 0
 1171              		@ link register save eliminated.
 848:./Library/stm32f4xx_cryp.c ****   FunctionalState state = DISABLE;
 1172              		.loc 1 848 3 view .LVU418
 1173              	.LVL38:
 849:./Library/stm32f4xx_cryp.c **** 
 850:./Library/stm32f4xx_cryp.c ****   if ((CRYP->CR & CRYP_CR_CRYPEN) != 0)
 1174              		.loc 1 850 3 view .LVU419
 1175              		.loc 1 850 12 is_stmt 0 view .LVU420
 1176 0000 044B     		ldr	r3, .L66
 1177 0002 1B68     		ldr	r3, [r3]
 1178              		.loc 1 850 6 view .LVU421
 1179 0004 13F4004F 		tst	r3, #32768
 1180 0008 01D0     		beq	.L65
 851:./Library/stm32f4xx_cryp.c ****   {
 852:./Library/stm32f4xx_cryp.c ****     /* CRYPEN bit is set */
 853:./Library/stm32f4xx_cryp.c ****     state = ENABLE;
 1181              		.loc 1 853 11 view .LVU422
 1182 000a 0120     		movs	r0, #1
 1183 000c 7047     		bx	lr
 1184              	.L65:
 854:./Library/stm32f4xx_cryp.c ****   }
 855:./Library/stm32f4xx_cryp.c ****   else
 856:./Library/stm32f4xx_cryp.c ****   {
 857:./Library/stm32f4xx_cryp.c ****     /* CRYPEN bit is reset */
 858:./Library/stm32f4xx_cryp.c ****     state = DISABLE;
 1185              		.loc 1 858 11 view .LVU423
 1186 000e 0020     		movs	r0, #0
 1187              	.LVL39:
ARM GAS  /tmp/ccmEvdOk.s 			page 38


 859:./Library/stm32f4xx_cryp.c ****   }
 860:./Library/stm32f4xx_cryp.c ****   return state;
 1188              		.loc 1 860 3 is_stmt 1 view .LVU424
 861:./Library/stm32f4xx_cryp.c **** }
 1189              		.loc 1 861 1 is_stmt 0 view .LVU425
 1190 0010 7047     		bx	lr
 1191              	.L67:
 1192 0012 00BF     		.align	2
 1193              	.L66:
 1194 0014 00000650 		.word	1342570496
 1195              		.cfi_endproc
 1196              	.LFE140:
 1198              		.section	.text.CRYP_GetFlagStatus,"ax",%progbits
 1199              		.align	1
 1200              		.global	CRYP_GetFlagStatus
 1201              		.syntax unified
 1202              		.thumb
 1203              		.thumb_func
 1205              	CRYP_GetFlagStatus:
 1206              	.LVL40:
 1207              	.LFB141:
 862:./Library/stm32f4xx_cryp.c **** 
 863:./Library/stm32f4xx_cryp.c **** /**
 864:./Library/stm32f4xx_cryp.c ****   * @brief  Checks whether the specified CRYP flag is set or not.
 865:./Library/stm32f4xx_cryp.c ****   * @param  CRYP_FLAG: specifies the CRYP flag to check.
 866:./Library/stm32f4xx_cryp.c ****   *          This parameter can be one of the following values:
 867:./Library/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_IFEM: Input FIFO Empty flag.
 868:./Library/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_IFNF: Input FIFO Not Full flag.
 869:./Library/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_OFNE: Output FIFO Not Empty flag.
 870:./Library/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_OFFU: Output FIFO Full flag.
 871:./Library/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_BUSY: Busy flag.
 872:./Library/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_OUTRIS: Output FIFO raw interrupt flag.
 873:./Library/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_INRIS: Input FIFO raw interrupt flag.
 874:./Library/stm32f4xx_cryp.c ****   * @retval The new state of CRYP_FLAG (SET or RESET).
 875:./Library/stm32f4xx_cryp.c ****   */
 876:./Library/stm32f4xx_cryp.c **** FlagStatus CRYP_GetFlagStatus(uint8_t CRYP_FLAG)
 877:./Library/stm32f4xx_cryp.c **** {
 1208              		.loc 1 877 1 is_stmt 1 view -0
 1209              		.cfi_startproc
 1210              		@ args = 0, pretend = 0, frame = 0
 1211              		@ frame_needed = 0, uses_anonymous_args = 0
 1212              		@ link register save eliminated.
 878:./Library/stm32f4xx_cryp.c ****   FlagStatus bitstatus = RESET;
 1213              		.loc 1 878 3 view .LVU427
 879:./Library/stm32f4xx_cryp.c ****   uint32_t tempreg = 0;
 1214              		.loc 1 879 3 view .LVU428
 880:./Library/stm32f4xx_cryp.c **** 
 881:./Library/stm32f4xx_cryp.c ****   /* Check the parameters */
 882:./Library/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_GET_FLAG(CRYP_FLAG));
 1215              		.loc 1 882 3 view .LVU429
 883:./Library/stm32f4xx_cryp.c **** 
 884:./Library/stm32f4xx_cryp.c ****   /* check if the FLAG is in RISR register */
 885:./Library/stm32f4xx_cryp.c ****   if ((CRYP_FLAG & FLAG_MASK) != 0x00) 
 1216              		.loc 1 885 3 view .LVU430
 1217              		.loc 1 885 6 is_stmt 0 view .LVU431
 1218 0000 10F0200F 		tst	r0, #32
 1219 0004 05D0     		beq	.L69
ARM GAS  /tmp/ccmEvdOk.s 			page 39


 886:./Library/stm32f4xx_cryp.c ****   {
 887:./Library/stm32f4xx_cryp.c ****     tempreg = CRYP->RISR;
 1220              		.loc 1 887 5 is_stmt 1 view .LVU432
 1221              		.loc 1 887 13 is_stmt 0 view .LVU433
 1222 0006 054B     		ldr	r3, .L73
 1223 0008 9B69     		ldr	r3, [r3, #24]
 1224              	.LVL41:
 1225              	.L70:
 888:./Library/stm32f4xx_cryp.c ****   }
 889:./Library/stm32f4xx_cryp.c ****   else  /* The FLAG is in SR register */
 890:./Library/stm32f4xx_cryp.c ****   {
 891:./Library/stm32f4xx_cryp.c ****     tempreg = CRYP->SR;
 892:./Library/stm32f4xx_cryp.c ****   }
 893:./Library/stm32f4xx_cryp.c **** 
 894:./Library/stm32f4xx_cryp.c **** 
 895:./Library/stm32f4xx_cryp.c ****   /* Check the status of the specified CRYP flag */
 896:./Library/stm32f4xx_cryp.c ****   if ((tempreg & CRYP_FLAG ) != (uint8_t)RESET)
 1226              		.loc 1 896 3 is_stmt 1 view .LVU434
 1227              		.loc 1 896 6 is_stmt 0 view .LVU435
 1228 000a 1842     		tst	r0, r3
 1229 000c 04D0     		beq	.L72
 897:./Library/stm32f4xx_cryp.c ****   {
 898:./Library/stm32f4xx_cryp.c ****     /* CRYP_FLAG is set */
 899:./Library/stm32f4xx_cryp.c ****     bitstatus = SET;
 1230              		.loc 1 899 15 view .LVU436
 1231 000e 0120     		movs	r0, #1
 1232              	.LVL42:
 1233              		.loc 1 899 15 view .LVU437
 1234 0010 7047     		bx	lr
 1235              	.LVL43:
 1236              	.L69:
 891:./Library/stm32f4xx_cryp.c ****   }
 1237              		.loc 1 891 5 is_stmt 1 view .LVU438
 891:./Library/stm32f4xx_cryp.c ****   }
 1238              		.loc 1 891 13 is_stmt 0 view .LVU439
 1239 0012 024B     		ldr	r3, .L73
 1240 0014 5B68     		ldr	r3, [r3, #4]
 1241              	.LVL44:
 891:./Library/stm32f4xx_cryp.c ****   }
 1242              		.loc 1 891 13 view .LVU440
 1243 0016 F8E7     		b	.L70
 1244              	.L72:
 900:./Library/stm32f4xx_cryp.c ****   }
 901:./Library/stm32f4xx_cryp.c ****   else
 902:./Library/stm32f4xx_cryp.c ****   {
 903:./Library/stm32f4xx_cryp.c ****     /* CRYP_FLAG is reset */
 904:./Library/stm32f4xx_cryp.c ****     bitstatus = RESET;
 1245              		.loc 1 904 15 view .LVU441
 1246 0018 0020     		movs	r0, #0
 1247              	.LVL45:
 905:./Library/stm32f4xx_cryp.c ****   }
 906:./Library/stm32f4xx_cryp.c **** 
 907:./Library/stm32f4xx_cryp.c ****   /* Return the CRYP_FLAG status */
 908:./Library/stm32f4xx_cryp.c ****   return  bitstatus;
 1248              		.loc 1 908 3 is_stmt 1 view .LVU442
 909:./Library/stm32f4xx_cryp.c **** }
 1249              		.loc 1 909 1 is_stmt 0 view .LVU443
ARM GAS  /tmp/ccmEvdOk.s 			page 40


 1250 001a 7047     		bx	lr
 1251              	.L74:
 1252              		.align	2
 1253              	.L73:
 1254 001c 00000650 		.word	1342570496
 1255              		.cfi_endproc
 1256              	.LFE141:
 1258              		.text
 1259              	.Letext0:
 1260              		.file 2 "/usr/lib/gcc/arm-none-eabi/12.2.1/include/stdint.h"
 1261              		.file 3 "./CORE/stm32f4xx.h"
 1262              		.file 4 "./Library/stm32f4xx_cryp.h"
 1263              		.file 5 "./Library/stm32f4xx_rcc.h"
ARM GAS  /tmp/ccmEvdOk.s 			page 41


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_cryp.c
     /tmp/ccmEvdOk.s:21     .text.CRYP_DeInit:0000000000000000 $t
     /tmp/ccmEvdOk.s:27     .text.CRYP_DeInit:0000000000000000 CRYP_DeInit
     /tmp/ccmEvdOk.s:54     .text.CRYP_Init:0000000000000000 $t
     /tmp/ccmEvdOk.s:60     .text.CRYP_Init:0000000000000000 CRYP_Init
     /tmp/ccmEvdOk.s:150    .text.CRYP_Init:0000000000000060 $d
     /tmp/ccmEvdOk.s:156    .text.CRYP_StructInit:0000000000000000 $t
     /tmp/ccmEvdOk.s:162    .text.CRYP_StructInit:0000000000000000 CRYP_StructInit
     /tmp/ccmEvdOk.s:189    .text.CRYP_KeyInit:0000000000000000 $t
     /tmp/ccmEvdOk.s:195    .text.CRYP_KeyInit:0000000000000000 CRYP_KeyInit
     /tmp/ccmEvdOk.s:249    .text.CRYP_KeyInit:0000000000000024 $d
     /tmp/ccmEvdOk.s:254    .text.CRYP_KeyStructInit:0000000000000000 $t
     /tmp/ccmEvdOk.s:260    .text.CRYP_KeyStructInit:0000000000000000 CRYP_KeyStructInit
     /tmp/ccmEvdOk.s:299    .text.CRYP_IVInit:0000000000000000 $t
     /tmp/ccmEvdOk.s:305    .text.CRYP_IVInit:0000000000000000 CRYP_IVInit
     /tmp/ccmEvdOk.s:339    .text.CRYP_IVInit:0000000000000014 $d
     /tmp/ccmEvdOk.s:344    .text.CRYP_IVStructInit:0000000000000000 $t
     /tmp/ccmEvdOk.s:350    .text.CRYP_IVStructInit:0000000000000000 CRYP_IVStructInit
     /tmp/ccmEvdOk.s:377    .text.CRYP_PhaseConfig:0000000000000000 $t
     /tmp/ccmEvdOk.s:383    .text.CRYP_PhaseConfig:0000000000000000 CRYP_PhaseConfig
     /tmp/ccmEvdOk.s:414    .text.CRYP_PhaseConfig:0000000000000010 $d
     /tmp/ccmEvdOk.s:419    .text.CRYP_FIFOFlush:0000000000000000 $t
     /tmp/ccmEvdOk.s:425    .text.CRYP_FIFOFlush:0000000000000000 CRYP_FIFOFlush
     /tmp/ccmEvdOk.s:444    .text.CRYP_FIFOFlush:000000000000000c $d
     /tmp/ccmEvdOk.s:449    .text.CRYP_Cmd:0000000000000000 $t
     /tmp/ccmEvdOk.s:455    .text.CRYP_Cmd:0000000000000000 CRYP_Cmd
     /tmp/ccmEvdOk.s:488    .text.CRYP_Cmd:000000000000001c $d
     /tmp/ccmEvdOk.s:493    .text.CRYP_DataIn:0000000000000000 $t
     /tmp/ccmEvdOk.s:499    .text.CRYP_DataIn:0000000000000000 CRYP_DataIn
     /tmp/ccmEvdOk.s:516    .text.CRYP_DataIn:0000000000000008 $d
     /tmp/ccmEvdOk.s:521    .text.CRYP_DataOut:0000000000000000 $t
     /tmp/ccmEvdOk.s:527    .text.CRYP_DataOut:0000000000000000 CRYP_DataOut
     /tmp/ccmEvdOk.s:543    .text.CRYP_DataOut:0000000000000008 $d
     /tmp/ccmEvdOk.s:548    .text.CRYP_SaveContext:0000000000000000 $t
     /tmp/ccmEvdOk.s:554    .text.CRYP_SaveContext:0000000000000000 CRYP_SaveContext
     /tmp/ccmEvdOk.s:828    .text.CRYP_SaveContext:00000000000000f8 $d
     /tmp/ccmEvdOk.s:833    .text.CRYP_RestoreContext:0000000000000000 $t
     /tmp/ccmEvdOk.s:839    .text.CRYP_RestoreContext:0000000000000000 CRYP_RestoreContext
     /tmp/ccmEvdOk.s:1004   .text.CRYP_RestoreContext:0000000000000088 $d
     /tmp/ccmEvdOk.s:1009   .text.CRYP_DMACmd:0000000000000000 $t
     /tmp/ccmEvdOk.s:1015   .text.CRYP_DMACmd:0000000000000000 CRYP_DMACmd
     /tmp/ccmEvdOk.s:1057   .text.CRYP_DMACmd:000000000000001c $d
     /tmp/ccmEvdOk.s:1062   .text.CRYP_ITConfig:0000000000000000 $t
     /tmp/ccmEvdOk.s:1068   .text.CRYP_ITConfig:0000000000000000 CRYP_ITConfig
     /tmp/ccmEvdOk.s:1110   .text.CRYP_ITConfig:000000000000001c $d
     /tmp/ccmEvdOk.s:1115   .text.CRYP_GetITStatus:0000000000000000 $t
     /tmp/ccmEvdOk.s:1121   .text.CRYP_GetITStatus:0000000000000000 CRYP_GetITStatus
     /tmp/ccmEvdOk.s:1154   .text.CRYP_GetITStatus:0000000000000010 $d
     /tmp/ccmEvdOk.s:1159   .text.CRYP_GetCmdStatus:0000000000000000 $t
     /tmp/ccmEvdOk.s:1165   .text.CRYP_GetCmdStatus:0000000000000000 CRYP_GetCmdStatus
     /tmp/ccmEvdOk.s:1194   .text.CRYP_GetCmdStatus:0000000000000014 $d
     /tmp/ccmEvdOk.s:1199   .text.CRYP_GetFlagStatus:0000000000000000 $t
     /tmp/ccmEvdOk.s:1205   .text.CRYP_GetFlagStatus:0000000000000000 CRYP_GetFlagStatus
     /tmp/ccmEvdOk.s:1254   .text.CRYP_GetFlagStatus:000000000000001c $d

UNDEFINED SYMBOLS
ARM GAS  /tmp/ccmEvdOk.s 			page 42


RCC_AHB2PeriphResetCmd
