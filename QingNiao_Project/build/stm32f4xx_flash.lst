ARM GAS  /tmp/ccwx2lab.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_flash.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "./Library/stm32f4xx_flash.c"
  20              		.section	.text.FLASH_SetLatency,"ax",%progbits
  21              		.align	1
  22              		.global	FLASH_SetLatency
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	FLASH_SetLatency:
  28              	.LVL0:
  29              	.LFB123:
   1:./Library/stm32f4xx_flash.c **** /**
   2:./Library/stm32f4xx_flash.c ****   ******************************************************************************
   3:./Library/stm32f4xx_flash.c ****   * @file    stm32f4xx_flash.c
   4:./Library/stm32f4xx_flash.c ****   * @author  MCD Application Team
   5:./Library/stm32f4xx_flash.c ****   * @version V1.8.1
   6:./Library/stm32f4xx_flash.c ****   * @date    27-January-2022
   7:./Library/stm32f4xx_flash.c ****   * @brief   This file provides firmware functions to manage the following 
   8:./Library/stm32f4xx_flash.c ****   *          functionalities of the FLASH peripheral:
   9:./Library/stm32f4xx_flash.c ****   *            + FLASH Interface configuration
  10:./Library/stm32f4xx_flash.c ****   *            + FLASH Memory Programming
  11:./Library/stm32f4xx_flash.c ****   *            + Option Bytes Programming
  12:./Library/stm32f4xx_flash.c ****   *            + Interrupts and flags management
  13:./Library/stm32f4xx_flash.c ****   *  
  14:./Library/stm32f4xx_flash.c ****  @verbatim    
  15:./Library/stm32f4xx_flash.c ****  ===============================================================================
  16:./Library/stm32f4xx_flash.c ****                         ##### How to use this driver #####
  17:./Library/stm32f4xx_flash.c ****  ===============================================================================
  18:./Library/stm32f4xx_flash.c ****     [..]                             
  19:./Library/stm32f4xx_flash.c ****       This driver provides functions to configure and program the FLASH memory 
  20:./Library/stm32f4xx_flash.c ****       of all STM32F4xx devices. These functions are split in 4 groups:
  21:./Library/stm32f4xx_flash.c ****    
  22:./Library/stm32f4xx_flash.c ****       (#) FLASH Interface configuration functions: this group includes the
  23:./Library/stm32f4xx_flash.c ****           management of the following features:
  24:./Library/stm32f4xx_flash.c ****         (++) Set the latency
  25:./Library/stm32f4xx_flash.c ****         (++) Enable/Disable the prefetch buffer
  26:./Library/stm32f4xx_flash.c ****         (++) Enable/Disable the Instruction cache and the Data cache
  27:./Library/stm32f4xx_flash.c ****         (++) Reset the Instruction cache and the Data cache
  28:./Library/stm32f4xx_flash.c ****     
  29:./Library/stm32f4xx_flash.c ****       (#) FLASH Memory Programming functions: this group includes all needed
ARM GAS  /tmp/ccwx2lab.s 			page 2


  30:./Library/stm32f4xx_flash.c ****           functions to erase and program the main memory:
  31:./Library/stm32f4xx_flash.c ****         (++) Lock and Unlock the FLASH interface
  32:./Library/stm32f4xx_flash.c ****         (++) Erase function: Erase sector, erase all sectors
  33:./Library/stm32f4xx_flash.c ****         (++) Program functions: byte, half word, word and double word
  34:./Library/stm32f4xx_flash.c ****     
  35:./Library/stm32f4xx_flash.c ****       (#) Option Bytes Programming functions: this group includes all needed
  36:./Library/stm32f4xx_flash.c ****           functions to manage the Option Bytes:
  37:./Library/stm32f4xx_flash.c ****         (++) Set/Reset the write protection
  38:./Library/stm32f4xx_flash.c ****         (++) Set the Read protection Level
  39:./Library/stm32f4xx_flash.c ****         (++) Set the BOR level
  40:./Library/stm32f4xx_flash.c ****         (++) Program the user Option Bytes
  41:./Library/stm32f4xx_flash.c ****         (++) Launch the Option Bytes loader
  42:./Library/stm32f4xx_flash.c ****     
  43:./Library/stm32f4xx_flash.c ****       (#) Interrupts and flags management functions: this group 
  44:./Library/stm32f4xx_flash.c ****           includes all needed functions to:
  45:./Library/stm32f4xx_flash.c ****         (++) Enable/Disable the FLASH interrupt sources
  46:./Library/stm32f4xx_flash.c ****         (++) Get flags status
  47:./Library/stm32f4xx_flash.c ****         (++) Clear flags
  48:./Library/stm32f4xx_flash.c ****         (++) Get FLASH operation status
  49:./Library/stm32f4xx_flash.c ****         (++) Wait for last FLASH operation   
  50:./Library/stm32f4xx_flash.c ****  @endverbatim
  51:./Library/stm32f4xx_flash.c ****   ******************************************************************************
  52:./Library/stm32f4xx_flash.c ****   * @attention
  53:./Library/stm32f4xx_flash.c ****   *
  54:./Library/stm32f4xx_flash.c ****   * Copyright (c) 2016 STMicroelectronics.
  55:./Library/stm32f4xx_flash.c ****   * All rights reserved.
  56:./Library/stm32f4xx_flash.c ****   *
  57:./Library/stm32f4xx_flash.c ****   * This software is licensed under terms that can be found in the LICENSE file
  58:./Library/stm32f4xx_flash.c ****   * in the root directory of this software component.
  59:./Library/stm32f4xx_flash.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  60:./Library/stm32f4xx_flash.c ****   *
  61:./Library/stm32f4xx_flash.c ****   ******************************************************************************
  62:./Library/stm32f4xx_flash.c ****   */
  63:./Library/stm32f4xx_flash.c **** 
  64:./Library/stm32f4xx_flash.c **** /* Includes ------------------------------------------------------------------*/
  65:./Library/stm32f4xx_flash.c **** #include "stm32f4xx_flash.h"
  66:./Library/stm32f4xx_flash.c **** 
  67:./Library/stm32f4xx_flash.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  68:./Library/stm32f4xx_flash.c ****   * @{
  69:./Library/stm32f4xx_flash.c ****   */
  70:./Library/stm32f4xx_flash.c **** 
  71:./Library/stm32f4xx_flash.c **** /** @defgroup FLASH 
  72:./Library/stm32f4xx_flash.c ****   * @brief FLASH driver modules
  73:./Library/stm32f4xx_flash.c ****   * @{
  74:./Library/stm32f4xx_flash.c ****   */ 
  75:./Library/stm32f4xx_flash.c **** 
  76:./Library/stm32f4xx_flash.c **** /* Private typedef -----------------------------------------------------------*/
  77:./Library/stm32f4xx_flash.c **** /* Private define ------------------------------------------------------------*/ 
  78:./Library/stm32f4xx_flash.c **** #define SECTOR_MASK               ((uint32_t)0xFFFFFF07)
  79:./Library/stm32f4xx_flash.c **** 
  80:./Library/stm32f4xx_flash.c **** /* Private macro -------------------------------------------------------------*/
  81:./Library/stm32f4xx_flash.c **** /* Private variables ---------------------------------------------------------*/
  82:./Library/stm32f4xx_flash.c **** /* Private function prototypes -----------------------------------------------*/
  83:./Library/stm32f4xx_flash.c **** /* Private functions ---------------------------------------------------------*/
  84:./Library/stm32f4xx_flash.c **** 
  85:./Library/stm32f4xx_flash.c **** /** @defgroup FLASH_Private_Functions
  86:./Library/stm32f4xx_flash.c ****   * @{
ARM GAS  /tmp/ccwx2lab.s 			page 3


  87:./Library/stm32f4xx_flash.c ****   */ 
  88:./Library/stm32f4xx_flash.c **** 
  89:./Library/stm32f4xx_flash.c **** /** @defgroup FLASH_Group1 FLASH Interface configuration functions
  90:./Library/stm32f4xx_flash.c ****   *  @brief   FLASH Interface configuration functions 
  91:./Library/stm32f4xx_flash.c ****  *
  92:./Library/stm32f4xx_flash.c **** 
  93:./Library/stm32f4xx_flash.c **** @verbatim   
  94:./Library/stm32f4xx_flash.c ****  ===============================================================================
  95:./Library/stm32f4xx_flash.c ****               ##### FLASH Interface configuration functions #####
  96:./Library/stm32f4xx_flash.c ****  ===============================================================================
  97:./Library/stm32f4xx_flash.c ****     [..]
  98:./Library/stm32f4xx_flash.c ****       This group includes the following functions:
  99:./Library/stm32f4xx_flash.c ****       (+) void FLASH_SetLatency(uint32_t FLASH_Latency)
 100:./Library/stm32f4xx_flash.c ****           To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 101:./Library/stm32f4xx_flash.c ****           must be correctly programmed according to the frequency of the CPU clock 
 102:./Library/stm32f4xx_flash.c ****           (HCLK) and the supply voltage of the device.
 103:./Library/stm32f4xx_flash.c ****     [..]      
 104:./Library/stm32f4xx_flash.c ****       For STM32F405xx/07xx and STM32F415xx/17xx devices
 105:./Library/stm32f4xx_flash.c ****  +-------------------------------------------------------------------------------------+
 106:./Library/stm32f4xx_flash.c ****  | Latency       |                HCLK clock frequency (MHz)                           |
 107:./Library/stm32f4xx_flash.c ****  |               |---------------------------------------------------------------------|
 108:./Library/stm32f4xx_flash.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   |
 109:./Library/stm32f4xx_flash.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
 110:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 111:./Library/stm32f4xx_flash.c ****  |0WS(1CPU cycle)|0 < HCLK <= 30  |0 < HCLK <= 24  |0 < HCLK <= 22   |0 < HCLK <= 20   |
 112:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 113:./Library/stm32f4xx_flash.c ****  |1WS(2CPU cycle)|30 < HCLK <= 60 |24 < HCLK <= 48 |22 < HCLK <= 44  |20 < HCLK <= 40  |
 114:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 115:./Library/stm32f4xx_flash.c ****  |2WS(3CPU cycle)|60 < HCLK <= 90 |48 < HCLK <= 72 |44 < HCLK <= 66  |40 < HCLK <= 60  |
 116:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 117:./Library/stm32f4xx_flash.c ****  |3WS(4CPU cycle)|90 < HCLK <= 120|72 < HCLK <= 96 |66 < HCLK <= 88  |60 < HCLK <= 80  |
 118:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 119:./Library/stm32f4xx_flash.c ****  |4WS(5CPU cycle)|120< HCLK <= 150|96 < HCLK <= 120|88 < HCLK <= 110 |80 < HCLK <= 100 |
 120:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 121:./Library/stm32f4xx_flash.c ****  |5WS(6CPU cycle)|150< HCLK <= 168|120< HCLK <= 144|110 < HCLK <= 132|100 < HCLK <= 120|
 122:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 123:./Library/stm32f4xx_flash.c ****  |6WS(7CPU cycle)|      NA        |144< HCLK <= 168|132 < HCLK <= 154|120 < HCLK <= 140|
 124:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 125:./Library/stm32f4xx_flash.c ****  |7WS(8CPU cycle)|      NA        |      NA        |154 < HCLK <= 168|140 < HCLK <= 160|
 126:./Library/stm32f4xx_flash.c ****  +---------------|----------------|----------------|-----------------|-----------------+
 127:./Library/stm32f4xx_flash.c **** 
 128:./Library/stm32f4xx_flash.c ****     [..]      
 129:./Library/stm32f4xx_flash.c ****       For STM32F42xxx/43xxx devices
 130:./Library/stm32f4xx_flash.c ****  +-------------------------------------------------------------------------------------+
 131:./Library/stm32f4xx_flash.c ****  | Latency       |                HCLK clock frequency (MHz)                           |
 132:./Library/stm32f4xx_flash.c ****  |               |---------------------------------------------------------------------|
 133:./Library/stm32f4xx_flash.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   |
 134:./Library/stm32f4xx_flash.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
 135:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 136:./Library/stm32f4xx_flash.c ****  |0WS(1CPU cycle)|0 < HCLK <= 30  |0 < HCLK <= 24  |0 < HCLK <= 22   |0 < HCLK <= 20   |
 137:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 138:./Library/stm32f4xx_flash.c ****  |1WS(2CPU cycle)|30 < HCLK <= 60 |24 < HCLK <= 48 |22 < HCLK <= 44  |20 < HCLK <= 40  |
 139:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 140:./Library/stm32f4xx_flash.c ****  |2WS(3CPU cycle)|60 < HCLK <= 90 |48 < HCLK <= 72 |44 < HCLK <= 66  |40 < HCLK <= 60  |
 141:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 142:./Library/stm32f4xx_flash.c ****  |3WS(4CPU cycle)|90 < HCLK <= 120|72 < HCLK <= 96 |66 < HCLK <= 88  |60 < HCLK <= 80  |
 143:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
ARM GAS  /tmp/ccwx2lab.s 			page 4


 144:./Library/stm32f4xx_flash.c ****  |4WS(5CPU cycle)|120< HCLK <= 150|96 < HCLK <= 120|88 < HCLK <= 110 |80 < HCLK <= 100 |
 145:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 146:./Library/stm32f4xx_flash.c ****  |5WS(6CPU cycle)|120< HCLK <= 180|120< HCLK <= 144|110 < HCLK <= 132|100 < HCLK <= 120|
 147:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 148:./Library/stm32f4xx_flash.c ****  |6WS(7CPU cycle)|      NA        |144< HCLK <= 168|132 < HCLK <= 154|120 < HCLK <= 140|
 149:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 150:./Library/stm32f4xx_flash.c ****  |7WS(8CPU cycle)|      NA        |168< HCLK <= 180|154 < HCLK <= 176|140 < HCLK <= 160|
 151:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 152:./Library/stm32f4xx_flash.c ****  |8WS(9CPU cycle)|      NA        |      NA        |176 < HCLK <= 180|160 < HCLK <= 168|
 153:./Library/stm32f4xx_flash.c ****  +-------------------------------------------------------------------------------------+
 154:./Library/stm32f4xx_flash.c ****    
 155:./Library/stm32f4xx_flash.c ****     [..]
 156:./Library/stm32f4xx_flash.c ****     For STM32F401x devices
 157:./Library/stm32f4xx_flash.c ****  +-------------------------------------------------------------------------------------+
 158:./Library/stm32f4xx_flash.c ****  | Latency       |                HCLK clock frequency (MHz)                           |
 159:./Library/stm32f4xx_flash.c ****  |               |---------------------------------------------------------------------|
 160:./Library/stm32f4xx_flash.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   |
 161:./Library/stm32f4xx_flash.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
 162:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 163:./Library/stm32f4xx_flash.c ****  |0WS(1CPU cycle)|0 < HCLK <= 30  |0 < HCLK <= 24  |0 < HCLK <= 22   |0 < HCLK <= 20   |
 164:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 165:./Library/stm32f4xx_flash.c ****  |1WS(2CPU cycle)|30 < HCLK <= 60 |24 < HCLK <= 48 |22 < HCLK <= 44  |20 < HCLK <= 40  |
 166:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 167:./Library/stm32f4xx_flash.c ****  |2WS(3CPU cycle)|60 < HCLK <= 84 |48 < HCLK <= 72 |44 < HCLK <= 66  |40 < HCLK <= 60  |
 168:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 169:./Library/stm32f4xx_flash.c ****  |3WS(4CPU cycle)|      NA        |72 < HCLK <= 84 |66 < HCLK <= 84  |60 < HCLK <= 80  |
 170:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 171:./Library/stm32f4xx_flash.c ****  |4WS(5CPU cycle)|      NA        |      NA        |      NA         |80 < HCLK <= 84  |
 172:./Library/stm32f4xx_flash.c ****  +-------------------------------------------------------------------------------------+
 173:./Library/stm32f4xx_flash.c **** 
 174:./Library/stm32f4xx_flash.c ****     [..]
 175:./Library/stm32f4xx_flash.c ****     For STM32F410xx/STM32F411xE devices
 176:./Library/stm32f4xx_flash.c ****  +-------------------------------------------------------------------------------------+
 177:./Library/stm32f4xx_flash.c ****  | Latency       |                HCLK clock frequency (MHz)                           |
 178:./Library/stm32f4xx_flash.c ****  |               |---------------------------------------------------------------------|
 179:./Library/stm32f4xx_flash.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   |
 180:./Library/stm32f4xx_flash.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
 181:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 182:./Library/stm32f4xx_flash.c ****  |0WS(1CPU cycle)|0 < HCLK <= 30  |0 < HCLK <= 24  |0 < HCLK <= 18   |0 < HCLK <= 16   |
 183:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 184:./Library/stm32f4xx_flash.c ****  |1WS(2CPU cycle)|30 < HCLK <= 64 |24 < HCLK <= 48 |18 < HCLK <= 36  |16 < HCLK <= 32  |
 185:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 186:./Library/stm32f4xx_flash.c ****  |2WS(3CPU cycle)|64 < HCLK <= 90 |48 < HCLK <= 72 |36 < HCLK <= 54  |32 < HCLK <= 48  |
 187:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 188:./Library/stm32f4xx_flash.c ****  |3WS(4CPU cycle)|90 < HCLK <= 100|72 < HCLK <= 96 |54 < HCLK <= 72  |48 < HCLK <= 64  |
 189:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 190:./Library/stm32f4xx_flash.c ****  |4WS(5CPU cycle)|      NA        |96 < HCLK <= 100|72 < HCLK <= 90  |64 < HCLK <= 80  |
 191:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 192:./Library/stm32f4xx_flash.c ****  |5WS(6CPU cycle)|      NA        |       NA       |90 < HCLK <= 100 |80 < HCLK <= 96  |
 193:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 194:./Library/stm32f4xx_flash.c ****  |6WS(7CPU cycle)|      NA        |       NA       |        NA       |96 < HCLK <= 100 |
 195:./Library/stm32f4xx_flash.c ****  +-------------------------------------------------------------------------------------+
 196:./Library/stm32f4xx_flash.c ****  
 197:./Library/stm32f4xx_flash.c ****  [..]
 198:./Library/stm32f4xx_flash.c ****  +-------------------------------------------------------------------------------------------------
 199:./Library/stm32f4xx_flash.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   | voltage ra
 200:./Library/stm32f4xx_flash.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   | with Exter
ARM GAS  /tmp/ccwx2lab.s 			page 5


 201:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|-----------
 202:./Library/stm32f4xx_flash.c ****  |Max Parallelism|      x32       |               x16                |       x8        |          x
 203:./Library/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|-----------
 204:./Library/stm32f4xx_flash.c ****  |PSIZE[1:0]     |      10        |               01                 |       00        |           
 205:./Library/stm32f4xx_flash.c ****  +-------------------------------------------------------------------------------------------------
 206:./Library/stm32f4xx_flash.c **** 
 207:./Library/stm32f4xx_flash.c ****       -@- On STM32F405xx/407xx and STM32F415xx/417xx devices: 
 208:./Library/stm32f4xx_flash.c ****            (++) when VOS = '0' Scale 2 mode, the maximum value of fHCLK = 144MHz. 
 209:./Library/stm32f4xx_flash.c ****            (++) when VOS = '1' Scale 1 mode, the maximum value of fHCLK = 168MHz. 
 210:./Library/stm32f4xx_flash.c ****           [..] 
 211:./Library/stm32f4xx_flash.c ****           On STM32F42xxx/43xxx devices:
 212:./Library/stm32f4xx_flash.c ****            (++) when VOS[1:0] = '0x01' Scale 3 mode, the maximum value of fHCLK is 120MHz.
 213:./Library/stm32f4xx_flash.c ****            (++) when VOS[1:0] = '0x10' Scale 2 mode, the maximum value of fHCLK is 144MHz if OverDr
 214:./Library/stm32f4xx_flash.c ****            (++) when VOS[1:0] = '0x11' Scale 1 mode, the maximum value of fHCLK is 168MHz if OverDr
 215:./Library/stm32f4xx_flash.c ****           [..]
 216:./Library/stm32f4xx_flash.c ****           On STM32F401x devices:
 217:./Library/stm32f4xx_flash.c ****            (++) when VOS[1:0] = '0x01' Scale 3 mode, the maximum value of fHCLK is 60MHz.
 218:./Library/stm32f4xx_flash.c ****            (++) when VOS[1:0] = '0x10' Scale 2 mode, the maximum value of fHCLK is 84MHz.
 219:./Library/stm32f4xx_flash.c ****           [..]  
 220:./Library/stm32f4xx_flash.c ****           On STM32F410xx/STM32F411xE devices:
 221:./Library/stm32f4xx_flash.c ****            (++) when VOS[1:0] = '0x01' Scale 3 mode, the maximum value of fHCLK is 64MHz.
 222:./Library/stm32f4xx_flash.c ****            (++) when VOS[1:0] = '0x10' Scale 2 mode, the maximum value of fHCLK is 84MHz.
 223:./Library/stm32f4xx_flash.c ****            (++) when VOS[1:0] = '0x11' Scale 1 mode, the maximum value of fHCLK is 100MHz.
 224:./Library/stm32f4xx_flash.c **** 
 225:./Library/stm32f4xx_flash.c ****         For more details please refer product DataSheet 
 226:./Library/stm32f4xx_flash.c ****            You can use PWR_MainRegulatorModeConfig() function to control VOS bits.
 227:./Library/stm32f4xx_flash.c **** 
 228:./Library/stm32f4xx_flash.c ****       (+) void FLASH_PrefetchBufferCmd(FunctionalState NewState)
 229:./Library/stm32f4xx_flash.c ****       (+) void FLASH_InstructionCacheCmd(FunctionalState NewState)
 230:./Library/stm32f4xx_flash.c ****       (+) void FLASH_DataCacheCmd(FunctionalState NewState)
 231:./Library/stm32f4xx_flash.c ****       (+) void FLASH_InstructionCacheReset(void)
 232:./Library/stm32f4xx_flash.c ****       (+) void FLASH_DataCacheReset(void)
 233:./Library/stm32f4xx_flash.c ****       
 234:./Library/stm32f4xx_flash.c ****     [..]   
 235:./Library/stm32f4xx_flash.c ****       The unlock sequence is not needed for these functions.
 236:./Library/stm32f4xx_flash.c ****  
 237:./Library/stm32f4xx_flash.c **** @endverbatim
 238:./Library/stm32f4xx_flash.c ****   * @{
 239:./Library/stm32f4xx_flash.c ****   */
 240:./Library/stm32f4xx_flash.c ****  
 241:./Library/stm32f4xx_flash.c **** /**
 242:./Library/stm32f4xx_flash.c ****   * @brief  Sets the code latency value.  
 243:./Library/stm32f4xx_flash.c ****   * @param  FLASH_Latency: specifies the FLASH Latency value.
 244:./Library/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 245:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_0: FLASH Zero Latency cycle
 246:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_1: FLASH One Latency cycle
 247:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_2: FLASH Two Latency cycles
 248:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_3: FLASH Three Latency cycles
 249:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_4: FLASH Four Latency cycles 
 250:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_5: FLASH Five Latency cycles 
 251:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_6: FLASH Six Latency cycles
 252:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_7: FLASH Seven Latency cycles 
 253:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_8: FLASH Eight Latency cycles
 254:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_9: FLASH Nine Latency cycles
 255:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_10: FLASH Teen Latency cycles 
 256:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_11: FLASH Eleven Latency cycles 
 257:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_12: FLASH Twelve Latency cycles
ARM GAS  /tmp/ccwx2lab.s 			page 6


 258:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_13: FLASH Thirteen Latency cycles
 259:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_14: FLASH Fourteen Latency cycles
 260:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_15: FLASH Fifteen Latency cycles 
 261:./Library/stm32f4xx_flash.c ****   *              
 262:./Library/stm32f4xx_flash.c ****   * @note For STM32F405xx/407xx, STM32F415xx/417xx, STM32F401xx/411xE/STM32F412xG and STM32F413_423
 263:./Library/stm32f4xx_flash.c ****   *       this parameter can be a value between FLASH_Latency_0 and FLASH_Latency_7.
 264:./Library/stm32f4xx_flash.c ****   *
 265:./Library/stm32f4xx_flash.c ****   * @note For STM32F42xxx/43xxx devices this parameter can be a value between 
 266:./Library/stm32f4xx_flash.c ****   *       FLASH_Latency_0 and FLASH_Latency_15. 
 267:./Library/stm32f4xx_flash.c ****   *         
 268:./Library/stm32f4xx_flash.c ****   * @retval None
 269:./Library/stm32f4xx_flash.c ****   */
 270:./Library/stm32f4xx_flash.c **** void FLASH_SetLatency(uint32_t FLASH_Latency)
 271:./Library/stm32f4xx_flash.c **** {
  30              		.loc 1 271 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 272:./Library/stm32f4xx_flash.c ****   /* Check the parameters */
 273:./Library/stm32f4xx_flash.c ****   assert_param(IS_FLASH_LATENCY(FLASH_Latency));
  35              		.loc 1 273 3 view .LVU1
 274:./Library/stm32f4xx_flash.c ****   
 275:./Library/stm32f4xx_flash.c ****   /* Perform Byte access to FLASH_ACR[8:0] to set the Latency value */
 276:./Library/stm32f4xx_flash.c ****   *(__IO uint8_t *)ACR_BYTE0_ADDRESS = (uint8_t)FLASH_Latency;
  36              		.loc 1 276 3 view .LVU2
  37              		.loc 1 276 40 is_stmt 0 view .LVU3
  38 0000 C0B2     		uxtb	r0, r0
  39              	.LVL1:
  40              		.loc 1 276 38 view .LVU4
  41 0002 014B     		ldr	r3, .L2
  42 0004 1870     		strb	r0, [r3]
 277:./Library/stm32f4xx_flash.c **** }
  43              		.loc 1 277 1 view .LVU5
  44 0006 7047     		bx	lr
  45              	.L3:
  46              		.align	2
  47              	.L2:
  48 0008 003C0240 		.word	1073888256
  49              		.cfi_endproc
  50              	.LFE123:
  52              		.section	.text.FLASH_PrefetchBufferCmd,"ax",%progbits
  53              		.align	1
  54              		.global	FLASH_PrefetchBufferCmd
  55              		.syntax unified
  56              		.thumb
  57              		.thumb_func
  59              	FLASH_PrefetchBufferCmd:
  60              	.LVL2:
  61              	.LFB124:
 278:./Library/stm32f4xx_flash.c **** 
 279:./Library/stm32f4xx_flash.c **** /**
 280:./Library/stm32f4xx_flash.c ****   * @brief  Enables or disables the Prefetch Buffer.
 281:./Library/stm32f4xx_flash.c ****   * @param  NewState: new state of the Prefetch Buffer.
 282:./Library/stm32f4xx_flash.c ****   *          This parameter  can be: ENABLE or DISABLE.
 283:./Library/stm32f4xx_flash.c ****   * @retval None
 284:./Library/stm32f4xx_flash.c ****   */
ARM GAS  /tmp/ccwx2lab.s 			page 7


 285:./Library/stm32f4xx_flash.c **** void FLASH_PrefetchBufferCmd(FunctionalState NewState)
 286:./Library/stm32f4xx_flash.c **** {
  62              		.loc 1 286 1 is_stmt 1 view -0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              		@ link register save eliminated.
 287:./Library/stm32f4xx_flash.c ****   /* Check the parameters */
 288:./Library/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
  67              		.loc 1 288 3 view .LVU7
 289:./Library/stm32f4xx_flash.c ****   
 290:./Library/stm32f4xx_flash.c ****   /* Enable or disable the Prefetch Buffer */
 291:./Library/stm32f4xx_flash.c ****   if(NewState != DISABLE)
  68              		.loc 1 291 3 view .LVU8
  69              		.loc 1 291 5 is_stmt 0 view .LVU9
  70 0000 28B1     		cbz	r0, .L5
 292:./Library/stm32f4xx_flash.c ****   {
 293:./Library/stm32f4xx_flash.c ****     FLASH->ACR |= FLASH_ACR_PRFTEN;
  71              		.loc 1 293 5 is_stmt 1 view .LVU10
  72              		.loc 1 293 10 is_stmt 0 view .LVU11
  73 0002 064A     		ldr	r2, .L7
  74 0004 1368     		ldr	r3, [r2]
  75              		.loc 1 293 16 view .LVU12
  76 0006 43F48073 		orr	r3, r3, #256
  77 000a 1360     		str	r3, [r2]
  78 000c 7047     		bx	lr
  79              	.L5:
 294:./Library/stm32f4xx_flash.c ****   }
 295:./Library/stm32f4xx_flash.c ****   else
 296:./Library/stm32f4xx_flash.c ****   {
 297:./Library/stm32f4xx_flash.c ****     FLASH->ACR &= (~FLASH_ACR_PRFTEN);
  80              		.loc 1 297 5 is_stmt 1 view .LVU13
  81              		.loc 1 297 10 is_stmt 0 view .LVU14
  82 000e 034A     		ldr	r2, .L7
  83 0010 1368     		ldr	r3, [r2]
  84              		.loc 1 297 16 view .LVU15
  85 0012 23F48073 		bic	r3, r3, #256
  86 0016 1360     		str	r3, [r2]
 298:./Library/stm32f4xx_flash.c ****   }
 299:./Library/stm32f4xx_flash.c **** }
  87              		.loc 1 299 1 view .LVU16
  88 0018 7047     		bx	lr
  89              	.L8:
  90 001a 00BF     		.align	2
  91              	.L7:
  92 001c 003C0240 		.word	1073888256
  93              		.cfi_endproc
  94              	.LFE124:
  96              		.section	.text.FLASH_InstructionCacheCmd,"ax",%progbits
  97              		.align	1
  98              		.global	FLASH_InstructionCacheCmd
  99              		.syntax unified
 100              		.thumb
 101              		.thumb_func
 103              	FLASH_InstructionCacheCmd:
 104              	.LVL3:
 105              	.LFB125:
ARM GAS  /tmp/ccwx2lab.s 			page 8


 300:./Library/stm32f4xx_flash.c **** 
 301:./Library/stm32f4xx_flash.c **** /**
 302:./Library/stm32f4xx_flash.c ****   * @brief  Enables or disables the Instruction Cache feature.
 303:./Library/stm32f4xx_flash.c ****   * @param  NewState: new state of the Instruction Cache.
 304:./Library/stm32f4xx_flash.c ****   *          This parameter  can be: ENABLE or DISABLE.
 305:./Library/stm32f4xx_flash.c ****   * @retval None
 306:./Library/stm32f4xx_flash.c ****   */
 307:./Library/stm32f4xx_flash.c **** void FLASH_InstructionCacheCmd(FunctionalState NewState)
 308:./Library/stm32f4xx_flash.c **** {
 106              		.loc 1 308 1 is_stmt 1 view -0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110              		@ link register save eliminated.
 309:./Library/stm32f4xx_flash.c ****   /* Check the parameters */
 310:./Library/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 111              		.loc 1 310 3 view .LVU18
 311:./Library/stm32f4xx_flash.c ****   
 312:./Library/stm32f4xx_flash.c ****   if(NewState != DISABLE)
 112              		.loc 1 312 3 view .LVU19
 113              		.loc 1 312 5 is_stmt 0 view .LVU20
 114 0000 28B1     		cbz	r0, .L10
 313:./Library/stm32f4xx_flash.c ****   {
 314:./Library/stm32f4xx_flash.c ****     FLASH->ACR |= FLASH_ACR_ICEN;
 115              		.loc 1 314 5 is_stmt 1 view .LVU21
 116              		.loc 1 314 10 is_stmt 0 view .LVU22
 117 0002 064A     		ldr	r2, .L12
 118 0004 1368     		ldr	r3, [r2]
 119              		.loc 1 314 16 view .LVU23
 120 0006 43F40073 		orr	r3, r3, #512
 121 000a 1360     		str	r3, [r2]
 122 000c 7047     		bx	lr
 123              	.L10:
 315:./Library/stm32f4xx_flash.c ****   }
 316:./Library/stm32f4xx_flash.c ****   else
 317:./Library/stm32f4xx_flash.c ****   {
 318:./Library/stm32f4xx_flash.c ****     FLASH->ACR &= (~FLASH_ACR_ICEN);
 124              		.loc 1 318 5 is_stmt 1 view .LVU24
 125              		.loc 1 318 10 is_stmt 0 view .LVU25
 126 000e 034A     		ldr	r2, .L12
 127 0010 1368     		ldr	r3, [r2]
 128              		.loc 1 318 16 view .LVU26
 129 0012 23F40073 		bic	r3, r3, #512
 130 0016 1360     		str	r3, [r2]
 319:./Library/stm32f4xx_flash.c ****   }
 320:./Library/stm32f4xx_flash.c **** }
 131              		.loc 1 320 1 view .LVU27
 132 0018 7047     		bx	lr
 133              	.L13:
 134 001a 00BF     		.align	2
 135              	.L12:
 136 001c 003C0240 		.word	1073888256
 137              		.cfi_endproc
 138              	.LFE125:
 140              		.section	.text.FLASH_DataCacheCmd,"ax",%progbits
 141              		.align	1
 142              		.global	FLASH_DataCacheCmd
ARM GAS  /tmp/ccwx2lab.s 			page 9


 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 147              	FLASH_DataCacheCmd:
 148              	.LVL4:
 149              	.LFB126:
 321:./Library/stm32f4xx_flash.c **** 
 322:./Library/stm32f4xx_flash.c **** /**
 323:./Library/stm32f4xx_flash.c ****   * @brief  Enables or disables the Data Cache feature.
 324:./Library/stm32f4xx_flash.c ****   * @param  NewState: new state of the Data Cache.
 325:./Library/stm32f4xx_flash.c ****   *          This parameter  can be: ENABLE or DISABLE.
 326:./Library/stm32f4xx_flash.c ****   * @retval None
 327:./Library/stm32f4xx_flash.c ****   */
 328:./Library/stm32f4xx_flash.c **** void FLASH_DataCacheCmd(FunctionalState NewState)
 329:./Library/stm32f4xx_flash.c **** {
 150              		.loc 1 329 1 is_stmt 1 view -0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 330:./Library/stm32f4xx_flash.c ****   /* Check the parameters */
 331:./Library/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 155              		.loc 1 331 3 view .LVU29
 332:./Library/stm32f4xx_flash.c ****   
 333:./Library/stm32f4xx_flash.c ****   if(NewState != DISABLE)
 156              		.loc 1 333 3 view .LVU30
 157              		.loc 1 333 5 is_stmt 0 view .LVU31
 158 0000 28B1     		cbz	r0, .L15
 334:./Library/stm32f4xx_flash.c ****   {
 335:./Library/stm32f4xx_flash.c ****     FLASH->ACR |= FLASH_ACR_DCEN;
 159              		.loc 1 335 5 is_stmt 1 view .LVU32
 160              		.loc 1 335 10 is_stmt 0 view .LVU33
 161 0002 064A     		ldr	r2, .L17
 162 0004 1368     		ldr	r3, [r2]
 163              		.loc 1 335 16 view .LVU34
 164 0006 43F48063 		orr	r3, r3, #1024
 165 000a 1360     		str	r3, [r2]
 166 000c 7047     		bx	lr
 167              	.L15:
 336:./Library/stm32f4xx_flash.c ****   }
 337:./Library/stm32f4xx_flash.c ****   else
 338:./Library/stm32f4xx_flash.c ****   {
 339:./Library/stm32f4xx_flash.c ****     FLASH->ACR &= (~FLASH_ACR_DCEN);
 168              		.loc 1 339 5 is_stmt 1 view .LVU35
 169              		.loc 1 339 10 is_stmt 0 view .LVU36
 170 000e 034A     		ldr	r2, .L17
 171 0010 1368     		ldr	r3, [r2]
 172              		.loc 1 339 16 view .LVU37
 173 0012 23F48063 		bic	r3, r3, #1024
 174 0016 1360     		str	r3, [r2]
 340:./Library/stm32f4xx_flash.c ****   }
 341:./Library/stm32f4xx_flash.c **** }
 175              		.loc 1 341 1 view .LVU38
 176 0018 7047     		bx	lr
 177              	.L18:
 178 001a 00BF     		.align	2
 179              	.L17:
ARM GAS  /tmp/ccwx2lab.s 			page 10


 180 001c 003C0240 		.word	1073888256
 181              		.cfi_endproc
 182              	.LFE126:
 184              		.section	.text.FLASH_InstructionCacheReset,"ax",%progbits
 185              		.align	1
 186              		.global	FLASH_InstructionCacheReset
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 191              	FLASH_InstructionCacheReset:
 192              	.LFB127:
 342:./Library/stm32f4xx_flash.c **** 
 343:./Library/stm32f4xx_flash.c **** /**
 344:./Library/stm32f4xx_flash.c ****   * @brief  Resets the Instruction Cache.
 345:./Library/stm32f4xx_flash.c ****   * @note   This function must be used only when the Instruction Cache is disabled.  
 346:./Library/stm32f4xx_flash.c ****   * @param  None
 347:./Library/stm32f4xx_flash.c ****   * @retval None
 348:./Library/stm32f4xx_flash.c ****   */
 349:./Library/stm32f4xx_flash.c **** void FLASH_InstructionCacheReset(void)
 350:./Library/stm32f4xx_flash.c **** {
 193              		.loc 1 350 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              		@ link register save eliminated.
 351:./Library/stm32f4xx_flash.c ****   FLASH->ACR |= FLASH_ACR_ICRST;
 198              		.loc 1 351 3 view .LVU40
 199              		.loc 1 351 8 is_stmt 0 view .LVU41
 200 0000 024A     		ldr	r2, .L20
 201 0002 1368     		ldr	r3, [r2]
 202              		.loc 1 351 14 view .LVU42
 203 0004 43F40063 		orr	r3, r3, #2048
 204 0008 1360     		str	r3, [r2]
 352:./Library/stm32f4xx_flash.c **** }
 205              		.loc 1 352 1 view .LVU43
 206 000a 7047     		bx	lr
 207              	.L21:
 208              		.align	2
 209              	.L20:
 210 000c 003C0240 		.word	1073888256
 211              		.cfi_endproc
 212              	.LFE127:
 214              		.section	.text.FLASH_DataCacheReset,"ax",%progbits
 215              		.align	1
 216              		.global	FLASH_DataCacheReset
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 221              	FLASH_DataCacheReset:
 222              	.LFB128:
 353:./Library/stm32f4xx_flash.c **** 
 354:./Library/stm32f4xx_flash.c **** /**
 355:./Library/stm32f4xx_flash.c ****   * @brief  Resets the Data Cache.
 356:./Library/stm32f4xx_flash.c ****   * @note   This function must be used only when the Data Cache is disabled.  
 357:./Library/stm32f4xx_flash.c ****   * @param  None
 358:./Library/stm32f4xx_flash.c ****   * @retval None
 359:./Library/stm32f4xx_flash.c ****   */
ARM GAS  /tmp/ccwx2lab.s 			page 11


 360:./Library/stm32f4xx_flash.c **** void FLASH_DataCacheReset(void)
 361:./Library/stm32f4xx_flash.c **** {
 223              		.loc 1 361 1 is_stmt 1 view -0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              		@ link register save eliminated.
 362:./Library/stm32f4xx_flash.c ****   FLASH->ACR |= FLASH_ACR_DCRST;
 228              		.loc 1 362 3 view .LVU45
 229              		.loc 1 362 8 is_stmt 0 view .LVU46
 230 0000 024A     		ldr	r2, .L23
 231 0002 1368     		ldr	r3, [r2]
 232              		.loc 1 362 14 view .LVU47
 233 0004 43F48053 		orr	r3, r3, #4096
 234 0008 1360     		str	r3, [r2]
 363:./Library/stm32f4xx_flash.c **** }
 235              		.loc 1 363 1 view .LVU48
 236 000a 7047     		bx	lr
 237              	.L24:
 238              		.align	2
 239              	.L23:
 240 000c 003C0240 		.word	1073888256
 241              		.cfi_endproc
 242              	.LFE128:
 244              		.section	.text.FLASH_Unlock,"ax",%progbits
 245              		.align	1
 246              		.global	FLASH_Unlock
 247              		.syntax unified
 248              		.thumb
 249              		.thumb_func
 251              	FLASH_Unlock:
 252              	.LFB129:
 364:./Library/stm32f4xx_flash.c **** 
 365:./Library/stm32f4xx_flash.c **** /**
 366:./Library/stm32f4xx_flash.c ****   * @}
 367:./Library/stm32f4xx_flash.c ****   */
 368:./Library/stm32f4xx_flash.c **** 
 369:./Library/stm32f4xx_flash.c **** /** @defgroup FLASH_Group2 FLASH Memory Programming functions
 370:./Library/stm32f4xx_flash.c ****  *  @brief   FLASH Memory Programming functions
 371:./Library/stm32f4xx_flash.c ****  *
 372:./Library/stm32f4xx_flash.c **** @verbatim   
 373:./Library/stm32f4xx_flash.c ****  ===============================================================================
 374:./Library/stm32f4xx_flash.c ****                 ##### FLASH Memory Programming functions #####
 375:./Library/stm32f4xx_flash.c ****  ===============================================================================   
 376:./Library/stm32f4xx_flash.c ****     [..]
 377:./Library/stm32f4xx_flash.c ****       This group includes the following functions:
 378:./Library/stm32f4xx_flash.c ****       (+) void FLASH_Unlock(void)
 379:./Library/stm32f4xx_flash.c ****       (+) void FLASH_Lock(void)
 380:./Library/stm32f4xx_flash.c ****       (+) FLASH_Status FLASH_EraseSector(uint32_t FLASH_Sector, uint8_t VoltageRange)
 381:./Library/stm32f4xx_flash.c ****       (+) FLASH_Status FLASH_EraseAllSectors(uint8_t VoltageRange)       
 382:./Library/stm32f4xx_flash.c ****       (+) FLASH_Status FLASH_ProgramDoubleWord(uint32_t Address, uint64_t Data)
 383:./Library/stm32f4xx_flash.c ****       (+) FLASH_Status FLASH_ProgramWord(uint32_t Address, uint32_t Data)
 384:./Library/stm32f4xx_flash.c ****       (+) FLASH_Status FLASH_ProgramHalfWord(uint32_t Address, uint16_t Data)
 385:./Library/stm32f4xx_flash.c ****       (+) FLASH_Status FLASH_ProgramByte(uint32_t Address, uint8_t Data)
 386:./Library/stm32f4xx_flash.c ****           The following functions can be used only for STM32F42xxx/43xxx devices. 
 387:./Library/stm32f4xx_flash.c ****       (+) FLASH_Status FLASH_EraseAllBank1Sectors(uint8_t VoltageRange)
 388:./Library/stm32f4xx_flash.c ****       (+) FLASH_Status FLASH_EraseAllBank2Sectors(uint8_t VoltageRange)    
ARM GAS  /tmp/ccwx2lab.s 			page 12


 389:./Library/stm32f4xx_flash.c ****     [..]   
 390:./Library/stm32f4xx_flash.c ****       Any operation of erase or program should follow these steps:
 391:./Library/stm32f4xx_flash.c ****       (#) Call the FLASH_Unlock() function to enable the FLASH control register access
 392:./Library/stm32f4xx_flash.c **** 
 393:./Library/stm32f4xx_flash.c ****       (#) Call the desired function to erase sector(s) or program data
 394:./Library/stm32f4xx_flash.c **** 
 395:./Library/stm32f4xx_flash.c ****       (#) Call the FLASH_Lock() function to disable the FLASH control register access
 396:./Library/stm32f4xx_flash.c ****           (recommended to protect the FLASH memory against possible unwanted operation)
 397:./Library/stm32f4xx_flash.c ****     
 398:./Library/stm32f4xx_flash.c **** @endverbatim
 399:./Library/stm32f4xx_flash.c ****   * @{
 400:./Library/stm32f4xx_flash.c ****   */
 401:./Library/stm32f4xx_flash.c **** 
 402:./Library/stm32f4xx_flash.c **** /**
 403:./Library/stm32f4xx_flash.c ****   * @brief  Unlocks the FLASH control register access
 404:./Library/stm32f4xx_flash.c ****   * @param  None
 405:./Library/stm32f4xx_flash.c ****   * @retval None
 406:./Library/stm32f4xx_flash.c ****   */
 407:./Library/stm32f4xx_flash.c **** void FLASH_Unlock(void)
 408:./Library/stm32f4xx_flash.c **** {
 253              		.loc 1 408 1 is_stmt 1 view -0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              		@ link register save eliminated.
 409:./Library/stm32f4xx_flash.c ****   if((FLASH->CR & FLASH_CR_LOCK) != RESET)
 258              		.loc 1 409 3 view .LVU50
 259              		.loc 1 409 12 is_stmt 0 view .LVU51
 260 0000 054B     		ldr	r3, .L28
 261 0002 1B69     		ldr	r3, [r3, #16]
 262              		.loc 1 409 5 view .LVU52
 263 0004 002B     		cmp	r3, #0
 264 0006 00DB     		blt	.L27
 265              	.L25:
 410:./Library/stm32f4xx_flash.c ****   {
 411:./Library/stm32f4xx_flash.c ****     /* Authorize the FLASH Registers access */
 412:./Library/stm32f4xx_flash.c ****     FLASH->KEYR = FLASH_KEY1;
 413:./Library/stm32f4xx_flash.c ****     FLASH->KEYR = FLASH_KEY2;
 414:./Library/stm32f4xx_flash.c ****   }  
 415:./Library/stm32f4xx_flash.c **** }
 266              		.loc 1 415 1 view .LVU53
 267 0008 7047     		bx	lr
 268              	.L27:
 412:./Library/stm32f4xx_flash.c ****     FLASH->KEYR = FLASH_KEY2;
 269              		.loc 1 412 5 is_stmt 1 view .LVU54
 412:./Library/stm32f4xx_flash.c ****     FLASH->KEYR = FLASH_KEY2;
 270              		.loc 1 412 17 is_stmt 0 view .LVU55
 271 000a 034B     		ldr	r3, .L28
 272 000c 034A     		ldr	r2, .L28+4
 273 000e 5A60     		str	r2, [r3, #4]
 413:./Library/stm32f4xx_flash.c ****   }  
 274              		.loc 1 413 5 is_stmt 1 view .LVU56
 413:./Library/stm32f4xx_flash.c ****   }  
 275              		.loc 1 413 17 is_stmt 0 view .LVU57
 276 0010 02F18832 		add	r2, r2, #-2004318072
 277 0014 5A60     		str	r2, [r3, #4]
 278              		.loc 1 415 1 view .LVU58
ARM GAS  /tmp/ccwx2lab.s 			page 13


 279 0016 F7E7     		b	.L25
 280              	.L29:
 281              		.align	2
 282              	.L28:
 283 0018 003C0240 		.word	1073888256
 284 001c 23016745 		.word	1164378403
 285              		.cfi_endproc
 286              	.LFE129:
 288              		.section	.text.FLASH_Lock,"ax",%progbits
 289              		.align	1
 290              		.global	FLASH_Lock
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 295              	FLASH_Lock:
 296              	.LFB130:
 416:./Library/stm32f4xx_flash.c **** 
 417:./Library/stm32f4xx_flash.c **** /**
 418:./Library/stm32f4xx_flash.c ****   * @brief  Locks the FLASH control register access
 419:./Library/stm32f4xx_flash.c ****   * @param  None
 420:./Library/stm32f4xx_flash.c ****   * @retval None
 421:./Library/stm32f4xx_flash.c ****   */
 422:./Library/stm32f4xx_flash.c **** void FLASH_Lock(void)
 423:./Library/stm32f4xx_flash.c **** {
 297              		.loc 1 423 1 is_stmt 1 view -0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              		@ link register save eliminated.
 424:./Library/stm32f4xx_flash.c ****   /* Set the LOCK Bit to lock the FLASH Registers access */
 425:./Library/stm32f4xx_flash.c ****   FLASH->CR |= FLASH_CR_LOCK;
 302              		.loc 1 425 3 view .LVU60
 303              		.loc 1 425 8 is_stmt 0 view .LVU61
 304 0000 024A     		ldr	r2, .L31
 305 0002 1369     		ldr	r3, [r2, #16]
 306              		.loc 1 425 13 view .LVU62
 307 0004 43F00043 		orr	r3, r3, #-2147483648
 308 0008 1361     		str	r3, [r2, #16]
 426:./Library/stm32f4xx_flash.c **** }
 309              		.loc 1 426 1 view .LVU63
 310 000a 7047     		bx	lr
 311              	.L32:
 312              		.align	2
 313              	.L31:
 314 000c 003C0240 		.word	1073888256
 315              		.cfi_endproc
 316              	.LFE130:
 318              		.section	.text.FLASH_OB_Unlock,"ax",%progbits
 319              		.align	1
 320              		.global	FLASH_OB_Unlock
 321              		.syntax unified
 322              		.thumb
 323              		.thumb_func
 325              	FLASH_OB_Unlock:
 326              	.LFB139:
 427:./Library/stm32f4xx_flash.c **** 
 428:./Library/stm32f4xx_flash.c **** /**
ARM GAS  /tmp/ccwx2lab.s 			page 14


 429:./Library/stm32f4xx_flash.c ****   * @brief  Erases a specified FLASH Sector.
 430:./Library/stm32f4xx_flash.c ****   *
 431:./Library/stm32f4xx_flash.c ****   * @note   If an erase and a program operations are requested simultaneously,    
 432:./Library/stm32f4xx_flash.c ****   *         the erase operation is performed before the program one.
 433:./Library/stm32f4xx_flash.c ****   *
 434:./Library/stm32f4xx_flash.c ****   * @param  FLASH_Sector: The Sector number to be erased.
 435:./Library/stm32f4xx_flash.c ****   *
 436:./Library/stm32f4xx_flash.c ****   *  @note  For STM32F405xx/407xx and STM32F415xx/417xx devices this parameter can 
 437:./Library/stm32f4xx_flash.c ****   *         be a value between FLASH_Sector_0 and FLASH_Sector_11.
 438:./Library/stm32f4xx_flash.c ****   *
 439:./Library/stm32f4xx_flash.c ****   *         For STM32F42xxx/43xxx devices this parameter can be a value between 
 440:./Library/stm32f4xx_flash.c ****   *         FLASH_Sector_0 and FLASH_Sector_23.
 441:./Library/stm32f4xx_flash.c ****   *
 442:./Library/stm32f4xx_flash.c ****   *         For STM32F401xx devices this parameter can be a value between 
 443:./Library/stm32f4xx_flash.c ****   *         FLASH_Sector_0 and FLASH_Sector_5.
 444:./Library/stm32f4xx_flash.c ****   *
 445:./Library/stm32f4xx_flash.c ****   *         For STM32F411xE and STM32F412xG devices this parameter can be a value between 
 446:./Library/stm32f4xx_flash.c ****   *         FLASH_Sector_0 and FLASH_Sector_7.
 447:./Library/stm32f4xx_flash.c ****   *
 448:./Library/stm32f4xx_flash.c ****   *         For STM32F410xx devices this parameter can be a value between 
 449:./Library/stm32f4xx_flash.c ****   *         FLASH_Sector_0 and FLASH_Sector_4.
 450:./Library/stm32f4xx_flash.c ****   *
 451:./Library/stm32f4xx_flash.c ****   *         For STM32F413_423xx devices this parameter can be a value between 
 452:./Library/stm32f4xx_flash.c ****   *         FLASH_Sector_0 and FLASH_Sector_15.
 453:./Library/stm32f4xx_flash.c ****   *
 454:./Library/stm32f4xx_flash.c ****   * @param  VoltageRange: The device voltage range which defines the erase parallelism.  
 455:./Library/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 456:./Library/stm32f4xx_flash.c ****   *            @arg VoltageRange_1: when the device voltage range is 1.8V to 2.1V, 
 457:./Library/stm32f4xx_flash.c ****   *                                  the operation will be done by byte (8-bit) 
 458:./Library/stm32f4xx_flash.c ****   *            @arg VoltageRange_2: when the device voltage range is 2.1V to 2.7V,
 459:./Library/stm32f4xx_flash.c ****   *                                  the operation will be done by half word (16-bit)
 460:./Library/stm32f4xx_flash.c ****   *            @arg VoltageRange_3: when the device voltage range is 2.7V to 3.6V,
 461:./Library/stm32f4xx_flash.c ****   *                                  the operation will be done by word (32-bit)
 462:./Library/stm32f4xx_flash.c ****   *            @arg VoltageRange_4: when the device voltage range is 2.7V to 3.6V + External Vpp, 
 463:./Library/stm32f4xx_flash.c ****   *                                  the operation will be done by double word (64-bit)
 464:./Library/stm32f4xx_flash.c ****   *       
 465:./Library/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 466:./Library/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 467:./Library/stm32f4xx_flash.c ****   */
 468:./Library/stm32f4xx_flash.c **** FLASH_Status FLASH_EraseSector(uint32_t FLASH_Sector, uint8_t VoltageRange)
 469:./Library/stm32f4xx_flash.c **** {
 470:./Library/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 471:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 472:./Library/stm32f4xx_flash.c **** 
 473:./Library/stm32f4xx_flash.c ****   /* Check the parameters */
 474:./Library/stm32f4xx_flash.c ****   assert_param(IS_FLASH_SECTOR(FLASH_Sector));
 475:./Library/stm32f4xx_flash.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 476:./Library/stm32f4xx_flash.c ****   
 477:./Library/stm32f4xx_flash.c ****   if(VoltageRange == VoltageRange_1)
 478:./Library/stm32f4xx_flash.c ****   {
 479:./Library/stm32f4xx_flash.c ****      tmp_psize = FLASH_PSIZE_BYTE;
 480:./Library/stm32f4xx_flash.c ****   }
 481:./Library/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_2)
 482:./Library/stm32f4xx_flash.c ****   {
 483:./Library/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_HALF_WORD;
 484:./Library/stm32f4xx_flash.c ****   }
 485:./Library/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_3)
ARM GAS  /tmp/ccwx2lab.s 			page 15


 486:./Library/stm32f4xx_flash.c ****   {
 487:./Library/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_WORD;
 488:./Library/stm32f4xx_flash.c ****   }
 489:./Library/stm32f4xx_flash.c ****   else
 490:./Library/stm32f4xx_flash.c ****   {
 491:./Library/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_DOUBLE_WORD;
 492:./Library/stm32f4xx_flash.c ****   }
 493:./Library/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 494:./Library/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 495:./Library/stm32f4xx_flash.c ****   
 496:./Library/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 497:./Library/stm32f4xx_flash.c ****   { 
 498:./Library/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to erase the sector */
 499:./Library/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 500:./Library/stm32f4xx_flash.c ****     FLASH->CR |= tmp_psize;
 501:./Library/stm32f4xx_flash.c ****     FLASH->CR &= SECTOR_MASK;
 502:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_SER | FLASH_Sector;
 503:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_STRT;
 504:./Library/stm32f4xx_flash.c ****     
 505:./Library/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 506:./Library/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 507:./Library/stm32f4xx_flash.c ****     
 508:./Library/stm32f4xx_flash.c ****     /* if the erase operation is completed, disable the SER Bit */
 509:./Library/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_SER);
 510:./Library/stm32f4xx_flash.c ****     FLASH->CR &= SECTOR_MASK; 
 511:./Library/stm32f4xx_flash.c ****   }
 512:./Library/stm32f4xx_flash.c ****   /* Return the Erase Status */
 513:./Library/stm32f4xx_flash.c ****   return status;
 514:./Library/stm32f4xx_flash.c **** }
 515:./Library/stm32f4xx_flash.c **** 
 516:./Library/stm32f4xx_flash.c **** /**
 517:./Library/stm32f4xx_flash.c ****   * @brief  Erases all FLASH Sectors.
 518:./Library/stm32f4xx_flash.c ****   *
 519:./Library/stm32f4xx_flash.c ****   * @note   If an erase and a program operations are requested simultaneously,    
 520:./Library/stm32f4xx_flash.c ****   *         the erase operation is performed before the program one.
 521:./Library/stm32f4xx_flash.c ****   *  
 522:./Library/stm32f4xx_flash.c ****   * @param  VoltageRange: The device voltage range which defines the erase parallelism.  
 523:./Library/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 524:./Library/stm32f4xx_flash.c ****   *            @arg VoltageRange_1: when the device voltage range is 1.8V to 2.1V, 
 525:./Library/stm32f4xx_flash.c ****   *                                  the operation will be done by byte (8-bit) 
 526:./Library/stm32f4xx_flash.c ****   *            @arg VoltageRange_2: when the device voltage range is 2.1V to 2.7V,
 527:./Library/stm32f4xx_flash.c ****   *                                  the operation will be done by half word (16-bit)
 528:./Library/stm32f4xx_flash.c ****   *            @arg VoltageRange_3: when the device voltage range is 2.7V to 3.6V,
 529:./Library/stm32f4xx_flash.c ****   *                                  the operation will be done by word (32-bit)
 530:./Library/stm32f4xx_flash.c ****   *            @arg VoltageRange_4: when the device voltage range is 2.7V to 3.6V + External Vpp, 
 531:./Library/stm32f4xx_flash.c ****   *                                  the operation will be done by double word (64-bit)
 532:./Library/stm32f4xx_flash.c ****   *       
 533:./Library/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 534:./Library/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 535:./Library/stm32f4xx_flash.c ****   */
 536:./Library/stm32f4xx_flash.c **** FLASH_Status FLASH_EraseAllSectors(uint8_t VoltageRange)
 537:./Library/stm32f4xx_flash.c **** {
 538:./Library/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 539:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 540:./Library/stm32f4xx_flash.c ****   
 541:./Library/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 542:./Library/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
ARM GAS  /tmp/ccwx2lab.s 			page 16


 543:./Library/stm32f4xx_flash.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 544:./Library/stm32f4xx_flash.c ****   
 545:./Library/stm32f4xx_flash.c ****   if(VoltageRange == VoltageRange_1)
 546:./Library/stm32f4xx_flash.c ****   {
 547:./Library/stm32f4xx_flash.c ****      tmp_psize = FLASH_PSIZE_BYTE;
 548:./Library/stm32f4xx_flash.c ****   }
 549:./Library/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_2)
 550:./Library/stm32f4xx_flash.c ****   {
 551:./Library/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_HALF_WORD;
 552:./Library/stm32f4xx_flash.c ****   }
 553:./Library/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_3)
 554:./Library/stm32f4xx_flash.c ****   {
 555:./Library/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_WORD;
 556:./Library/stm32f4xx_flash.c ****   }
 557:./Library/stm32f4xx_flash.c ****   else
 558:./Library/stm32f4xx_flash.c ****   {
 559:./Library/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_DOUBLE_WORD;
 560:./Library/stm32f4xx_flash.c ****   }  
 561:./Library/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 562:./Library/stm32f4xx_flash.c ****   {
 563:./Library/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to erase all sectors */
 564:./Library/stm32f4xx_flash.c **** #if defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM32F469_479xx)
 565:./Library/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 566:./Library/stm32f4xx_flash.c ****     FLASH->CR |= tmp_psize;
 567:./Library/stm32f4xx_flash.c ****     FLASH->CR |= (FLASH_CR_MER1 | FLASH_CR_MER2);
 568:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_STRT;
 569:./Library/stm32f4xx_flash.c ****     
 570:./Library/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 571:./Library/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 572:./Library/stm32f4xx_flash.c **** 
 573:./Library/stm32f4xx_flash.c ****     /* if the erase operation is completed, disable the MER Bit */
 574:./Library/stm32f4xx_flash.c ****     FLASH->CR &= ~(FLASH_CR_MER1 | FLASH_CR_MER2);
 575:./Library/stm32f4xx_flash.c **** #endif /* STM32F427_437xx ||  STM32F429_439xx ||  STM32F469_479xx */
 576:./Library/stm32f4xx_flash.c **** 
 577:./Library/stm32f4xx_flash.c **** #if defined(STM32F40_41xxx) || defined(STM32F401xx) || defined(STM32F410xx) || defined(STM32F411xE)
 578:./Library/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 579:./Library/stm32f4xx_flash.c ****     FLASH->CR |= tmp_psize;
 580:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_MER;
 581:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_STRT;
 582:./Library/stm32f4xx_flash.c ****     
 583:./Library/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 584:./Library/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 585:./Library/stm32f4xx_flash.c **** 
 586:./Library/stm32f4xx_flash.c ****     /* if the erase operation is completed, disable the MER Bit */
 587:./Library/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_MER);
 588:./Library/stm32f4xx_flash.c **** #endif /* STM32F40_41xxx || STM32F401xx || STM32F410xx || STM32F411xE || STM32F412xG || STM32F413_4
 589:./Library/stm32f4xx_flash.c **** 
 590:./Library/stm32f4xx_flash.c ****   }   
 591:./Library/stm32f4xx_flash.c ****   /* Return the Erase Status */
 592:./Library/stm32f4xx_flash.c ****   return status;
 593:./Library/stm32f4xx_flash.c **** }
 594:./Library/stm32f4xx_flash.c **** 
 595:./Library/stm32f4xx_flash.c **** /**
 596:./Library/stm32f4xx_flash.c ****   * @brief  Erases all FLASH Sectors in Bank 1.
 597:./Library/stm32f4xx_flash.c ****   *
 598:./Library/stm32f4xx_flash.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices.
 599:./Library/stm32f4xx_flash.c ****   *      
ARM GAS  /tmp/ccwx2lab.s 			page 17


 600:./Library/stm32f4xx_flash.c ****   * @note   If an erase and a program operations are requested simultaneously,    
 601:./Library/stm32f4xx_flash.c ****   *         the erase operation is performed before the program one. 
 602:./Library/stm32f4xx_flash.c ****   *  
 603:./Library/stm32f4xx_flash.c ****   * @param  VoltageRange: The device voltage range which defines the erase parallelism.  
 604:./Library/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 605:./Library/stm32f4xx_flash.c ****   *            @arg VoltageRange_1: when the device voltage range is 1.8V to 2.1V, 
 606:./Library/stm32f4xx_flash.c ****   *                                  the operation will be done by byte (8-bit) 
 607:./Library/stm32f4xx_flash.c ****   *            @arg VoltageRange_2: when the device voltage range is 2.1V to 2.7V,
 608:./Library/stm32f4xx_flash.c ****   *                                  the operation will be done by half word (16-bit)
 609:./Library/stm32f4xx_flash.c ****   *            @arg VoltageRange_3: when the device voltage range is 2.7V to 3.6V,
 610:./Library/stm32f4xx_flash.c ****   *                                  the operation will be done by word (32-bit)
 611:./Library/stm32f4xx_flash.c ****   *            @arg VoltageRange_4: when the device voltage range is 2.7V to 3.6V + External Vpp, 
 612:./Library/stm32f4xx_flash.c ****   *                                  the operation will be done by double word (64-bit)
 613:./Library/stm32f4xx_flash.c ****   *       
 614:./Library/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 615:./Library/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 616:./Library/stm32f4xx_flash.c ****   */
 617:./Library/stm32f4xx_flash.c **** FLASH_Status FLASH_EraseAllBank1Sectors(uint8_t VoltageRange)
 618:./Library/stm32f4xx_flash.c **** {
 619:./Library/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 620:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 621:./Library/stm32f4xx_flash.c ****   
 622:./Library/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 623:./Library/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 624:./Library/stm32f4xx_flash.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 625:./Library/stm32f4xx_flash.c ****   
 626:./Library/stm32f4xx_flash.c ****   if(VoltageRange == VoltageRange_1)
 627:./Library/stm32f4xx_flash.c ****   {
 628:./Library/stm32f4xx_flash.c ****      tmp_psize = FLASH_PSIZE_BYTE;
 629:./Library/stm32f4xx_flash.c ****   }
 630:./Library/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_2)
 631:./Library/stm32f4xx_flash.c ****   {
 632:./Library/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_HALF_WORD;
 633:./Library/stm32f4xx_flash.c ****   }
 634:./Library/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_3)
 635:./Library/stm32f4xx_flash.c ****   {
 636:./Library/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_WORD;
 637:./Library/stm32f4xx_flash.c ****   }
 638:./Library/stm32f4xx_flash.c ****   else
 639:./Library/stm32f4xx_flash.c ****   {
 640:./Library/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_DOUBLE_WORD;
 641:./Library/stm32f4xx_flash.c ****   }  
 642:./Library/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 643:./Library/stm32f4xx_flash.c ****   {
 644:./Library/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to erase all sectors */
 645:./Library/stm32f4xx_flash.c ****      FLASH->CR &= CR_PSIZE_MASK;
 646:./Library/stm32f4xx_flash.c ****      FLASH->CR |= tmp_psize;
 647:./Library/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_MER1;
 648:./Library/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_STRT;
 649:./Library/stm32f4xx_flash.c ****     
 650:./Library/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 651:./Library/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 652:./Library/stm32f4xx_flash.c **** 
 653:./Library/stm32f4xx_flash.c ****     /* if the erase operation is completed, disable the MER Bit */
 654:./Library/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_MER1);
 655:./Library/stm32f4xx_flash.c **** 
 656:./Library/stm32f4xx_flash.c ****   }   
ARM GAS  /tmp/ccwx2lab.s 			page 18


 657:./Library/stm32f4xx_flash.c ****   /* Return the Erase Status */
 658:./Library/stm32f4xx_flash.c ****   return status;
 659:./Library/stm32f4xx_flash.c **** }
 660:./Library/stm32f4xx_flash.c **** 
 661:./Library/stm32f4xx_flash.c **** 
 662:./Library/stm32f4xx_flash.c **** /**
 663:./Library/stm32f4xx_flash.c ****   * @brief  Erases all FLASH Sectors in Bank 2.
 664:./Library/stm32f4xx_flash.c ****   *
 665:./Library/stm32f4xx_flash.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices.
 666:./Library/stm32f4xx_flash.c ****   *     
 667:./Library/stm32f4xx_flash.c ****   * @note   If an erase and a program operations are requested simultaneously,    
 668:./Library/stm32f4xx_flash.c ****   *         the erase operation is performed before the program one.
 669:./Library/stm32f4xx_flash.c ****   *     
 670:./Library/stm32f4xx_flash.c ****   * @param  VoltageRange: The device voltage range which defines the erase parallelism.  
 671:./Library/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 672:./Library/stm32f4xx_flash.c ****   *            @arg VoltageRange_1: when the device voltage range is 1.8V to 2.1V, 
 673:./Library/stm32f4xx_flash.c ****   *                                  the operation will be done by byte (8-bit) 
 674:./Library/stm32f4xx_flash.c ****   *            @arg VoltageRange_2: when the device voltage range is 2.1V to 2.7V,
 675:./Library/stm32f4xx_flash.c ****   *                                  the operation will be done by half word (16-bit)
 676:./Library/stm32f4xx_flash.c ****   *            @arg VoltageRange_3: when the device voltage range is 2.7V to 3.6V,
 677:./Library/stm32f4xx_flash.c ****   *                                  the operation will be done by word (32-bit)
 678:./Library/stm32f4xx_flash.c ****   *            @arg VoltageRange_4: when the device voltage range is 2.7V to 3.6V + External Vpp, 
 679:./Library/stm32f4xx_flash.c ****   *                                  the operation will be done by double word (64-bit)
 680:./Library/stm32f4xx_flash.c ****   *       
 681:./Library/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 682:./Library/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 683:./Library/stm32f4xx_flash.c ****   */
 684:./Library/stm32f4xx_flash.c **** FLASH_Status FLASH_EraseAllBank2Sectors(uint8_t VoltageRange)
 685:./Library/stm32f4xx_flash.c **** {
 686:./Library/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 687:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 688:./Library/stm32f4xx_flash.c ****   
 689:./Library/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 690:./Library/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 691:./Library/stm32f4xx_flash.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 692:./Library/stm32f4xx_flash.c ****   
 693:./Library/stm32f4xx_flash.c ****   if(VoltageRange == VoltageRange_1)
 694:./Library/stm32f4xx_flash.c ****   {
 695:./Library/stm32f4xx_flash.c ****      tmp_psize = FLASH_PSIZE_BYTE;
 696:./Library/stm32f4xx_flash.c ****   }
 697:./Library/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_2)
 698:./Library/stm32f4xx_flash.c ****   {
 699:./Library/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_HALF_WORD;
 700:./Library/stm32f4xx_flash.c ****   }
 701:./Library/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_3)
 702:./Library/stm32f4xx_flash.c ****   {
 703:./Library/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_WORD;
 704:./Library/stm32f4xx_flash.c ****   }
 705:./Library/stm32f4xx_flash.c ****   else
 706:./Library/stm32f4xx_flash.c ****   {
 707:./Library/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_DOUBLE_WORD;
 708:./Library/stm32f4xx_flash.c ****   }  
 709:./Library/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 710:./Library/stm32f4xx_flash.c ****   {
 711:./Library/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to erase all sectors */
 712:./Library/stm32f4xx_flash.c ****      FLASH->CR &= CR_PSIZE_MASK;
 713:./Library/stm32f4xx_flash.c ****      FLASH->CR |= tmp_psize;
ARM GAS  /tmp/ccwx2lab.s 			page 19


 714:./Library/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_MER2;
 715:./Library/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_STRT;
 716:./Library/stm32f4xx_flash.c ****     
 717:./Library/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 718:./Library/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 719:./Library/stm32f4xx_flash.c **** 
 720:./Library/stm32f4xx_flash.c ****     /* if the erase operation is completed, disable the MER Bit */
 721:./Library/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_MER2);
 722:./Library/stm32f4xx_flash.c **** 
 723:./Library/stm32f4xx_flash.c ****   }   
 724:./Library/stm32f4xx_flash.c ****   /* Return the Erase Status */
 725:./Library/stm32f4xx_flash.c ****   return status;
 726:./Library/stm32f4xx_flash.c **** }
 727:./Library/stm32f4xx_flash.c **** 
 728:./Library/stm32f4xx_flash.c **** /**
 729:./Library/stm32f4xx_flash.c ****   * @brief  Programs a double word (64-bit) at a specified address.
 730:./Library/stm32f4xx_flash.c ****   * @note   This function must be used when the device voltage range is from
 731:./Library/stm32f4xx_flash.c ****   *         2.7V to 3.6V and an External Vpp is present.
 732:./Library/stm32f4xx_flash.c ****   *
 733:./Library/stm32f4xx_flash.c ****   * @note   If an erase and a program operations are requested simultaneously,    
 734:./Library/stm32f4xx_flash.c ****   *         the erase operation is performed before the program one.
 735:./Library/stm32f4xx_flash.c ****   *  
 736:./Library/stm32f4xx_flash.c ****   * @param  Address: specifies the address to be programmed.
 737:./Library/stm32f4xx_flash.c ****   * @param  Data: specifies the data to be programmed.
 738:./Library/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 739:./Library/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 740:./Library/stm32f4xx_flash.c ****   */
 741:./Library/stm32f4xx_flash.c **** FLASH_Status FLASH_ProgramDoubleWord(uint32_t Address, uint64_t Data)
 742:./Library/stm32f4xx_flash.c **** {
 743:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 744:./Library/stm32f4xx_flash.c **** 
 745:./Library/stm32f4xx_flash.c ****   /* Check the parameters */
 746:./Library/stm32f4xx_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 747:./Library/stm32f4xx_flash.c **** 
 748:./Library/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 749:./Library/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 750:./Library/stm32f4xx_flash.c ****   
 751:./Library/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 752:./Library/stm32f4xx_flash.c ****   {
 753:./Library/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to program the new data */
 754:./Library/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 755:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 756:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 757:./Library/stm32f4xx_flash.c ****   
 758:./Library/stm32f4xx_flash.c ****     *(__IO uint64_t*)Address = Data;
 759:./Library/stm32f4xx_flash.c ****         
 760:./Library/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 761:./Library/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 762:./Library/stm32f4xx_flash.c **** 
 763:./Library/stm32f4xx_flash.c ****     /* if the program operation is completed, disable the PG Bit */
 764:./Library/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_PG);
 765:./Library/stm32f4xx_flash.c ****   } 
 766:./Library/stm32f4xx_flash.c ****   /* Return the Program Status */
 767:./Library/stm32f4xx_flash.c ****   return status;
 768:./Library/stm32f4xx_flash.c **** }
 769:./Library/stm32f4xx_flash.c **** 
 770:./Library/stm32f4xx_flash.c **** /**
ARM GAS  /tmp/ccwx2lab.s 			page 20


 771:./Library/stm32f4xx_flash.c ****   * @brief  Programs a word (32-bit) at a specified address.
 772:./Library/stm32f4xx_flash.c ****   *
 773:./Library/stm32f4xx_flash.c ****   * @note   This function must be used when the device voltage range is from 2.7V to 3.6V. 
 774:./Library/stm32f4xx_flash.c ****   *
 775:./Library/stm32f4xx_flash.c ****   * @note   If an erase and a program operations are requested simultaneously,    
 776:./Library/stm32f4xx_flash.c ****   *         the erase operation is performed before the program one.
 777:./Library/stm32f4xx_flash.c ****   *  
 778:./Library/stm32f4xx_flash.c ****   * @param  Address: specifies the address to be programmed.
 779:./Library/stm32f4xx_flash.c ****   *         This parameter can be any address in Program memory zone or in OTP zone.  
 780:./Library/stm32f4xx_flash.c ****   * @param  Data: specifies the data to be programmed.
 781:./Library/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 782:./Library/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 783:./Library/stm32f4xx_flash.c ****   */
 784:./Library/stm32f4xx_flash.c **** FLASH_Status FLASH_ProgramWord(uint32_t Address, uint32_t Data)
 785:./Library/stm32f4xx_flash.c **** {
 786:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 787:./Library/stm32f4xx_flash.c **** 
 788:./Library/stm32f4xx_flash.c ****   /* Check the parameters */
 789:./Library/stm32f4xx_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 790:./Library/stm32f4xx_flash.c **** 
 791:./Library/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 792:./Library/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 793:./Library/stm32f4xx_flash.c ****   
 794:./Library/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 795:./Library/stm32f4xx_flash.c ****   {
 796:./Library/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to program the new data */
 797:./Library/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 798:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_WORD;
 799:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 800:./Library/stm32f4xx_flash.c ****   
 801:./Library/stm32f4xx_flash.c ****     *(__IO uint32_t*)Address = Data;
 802:./Library/stm32f4xx_flash.c ****         
 803:./Library/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 804:./Library/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 805:./Library/stm32f4xx_flash.c **** 
 806:./Library/stm32f4xx_flash.c ****     /* if the program operation is completed, disable the PG Bit */
 807:./Library/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_PG);
 808:./Library/stm32f4xx_flash.c ****   } 
 809:./Library/stm32f4xx_flash.c ****   /* Return the Program Status */
 810:./Library/stm32f4xx_flash.c ****   return status;
 811:./Library/stm32f4xx_flash.c **** }
 812:./Library/stm32f4xx_flash.c **** 
 813:./Library/stm32f4xx_flash.c **** /**
 814:./Library/stm32f4xx_flash.c ****   * @brief  Programs a half word (16-bit) at a specified address. 
 815:./Library/stm32f4xx_flash.c ****   * @note   This function must be used when the device voltage range is from 2.1V to 3.6V. 
 816:./Library/stm32f4xx_flash.c ****   *
 817:./Library/stm32f4xx_flash.c ****   * @note   If an erase and a program operations are requested simultaneously,    
 818:./Library/stm32f4xx_flash.c ****   *         the erase operation is performed before the program one.
 819:./Library/stm32f4xx_flash.c ****   * 
 820:./Library/stm32f4xx_flash.c ****   * @param  Address: specifies the address to be programmed.
 821:./Library/stm32f4xx_flash.c ****   *         This parameter can be any address in Program memory zone or in OTP zone.  
 822:./Library/stm32f4xx_flash.c ****   * @param  Data: specifies the data to be programmed.
 823:./Library/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 824:./Library/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 825:./Library/stm32f4xx_flash.c ****   */
 826:./Library/stm32f4xx_flash.c **** FLASH_Status FLASH_ProgramHalfWord(uint32_t Address, uint16_t Data)
 827:./Library/stm32f4xx_flash.c **** {
ARM GAS  /tmp/ccwx2lab.s 			page 21


 828:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 829:./Library/stm32f4xx_flash.c **** 
 830:./Library/stm32f4xx_flash.c ****   /* Check the parameters */
 831:./Library/stm32f4xx_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 832:./Library/stm32f4xx_flash.c **** 
 833:./Library/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 834:./Library/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 835:./Library/stm32f4xx_flash.c ****   
 836:./Library/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 837:./Library/stm32f4xx_flash.c ****   {
 838:./Library/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to program the new data */
 839:./Library/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 840:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 841:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 842:./Library/stm32f4xx_flash.c ****   
 843:./Library/stm32f4xx_flash.c ****     *(__IO uint16_t*)Address = Data;
 844:./Library/stm32f4xx_flash.c ****         
 845:./Library/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 846:./Library/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 847:./Library/stm32f4xx_flash.c **** 
 848:./Library/stm32f4xx_flash.c ****     /* if the program operation is completed, disable the PG Bit */
 849:./Library/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_PG);
 850:./Library/stm32f4xx_flash.c ****   } 
 851:./Library/stm32f4xx_flash.c ****   /* Return the Program Status */
 852:./Library/stm32f4xx_flash.c ****   return status;
 853:./Library/stm32f4xx_flash.c **** }
 854:./Library/stm32f4xx_flash.c **** 
 855:./Library/stm32f4xx_flash.c **** /**
 856:./Library/stm32f4xx_flash.c ****   * @brief  Programs a byte (8-bit) at a specified address.
 857:./Library/stm32f4xx_flash.c ****   * @note   This function can be used within all the device supply voltage ranges.  
 858:./Library/stm32f4xx_flash.c ****   *
 859:./Library/stm32f4xx_flash.c ****   * @note   If an erase and a program operations are requested simultaneously,    
 860:./Library/stm32f4xx_flash.c ****   *         the erase operation is performed before the program one.
 861:./Library/stm32f4xx_flash.c ****   * 
 862:./Library/stm32f4xx_flash.c ****   * @param  Address: specifies the address to be programmed.
 863:./Library/stm32f4xx_flash.c ****   *         This parameter can be any address in Program memory zone or in OTP zone.  
 864:./Library/stm32f4xx_flash.c ****   * @param  Data: specifies the data to be programmed.
 865:./Library/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 866:./Library/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 867:./Library/stm32f4xx_flash.c ****   */
 868:./Library/stm32f4xx_flash.c **** FLASH_Status FLASH_ProgramByte(uint32_t Address, uint8_t Data)
 869:./Library/stm32f4xx_flash.c **** {
 870:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 871:./Library/stm32f4xx_flash.c **** 
 872:./Library/stm32f4xx_flash.c ****   /* Check the parameters */
 873:./Library/stm32f4xx_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 874:./Library/stm32f4xx_flash.c **** 
 875:./Library/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 876:./Library/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 877:./Library/stm32f4xx_flash.c ****   
 878:./Library/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 879:./Library/stm32f4xx_flash.c ****   {
 880:./Library/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to program the new data */
 881:./Library/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 882:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_BYTE;
 883:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 884:./Library/stm32f4xx_flash.c ****   
ARM GAS  /tmp/ccwx2lab.s 			page 22


 885:./Library/stm32f4xx_flash.c ****     *(__IO uint8_t*)Address = Data;
 886:./Library/stm32f4xx_flash.c ****         
 887:./Library/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 888:./Library/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 889:./Library/stm32f4xx_flash.c **** 
 890:./Library/stm32f4xx_flash.c ****     /* if the program operation is completed, disable the PG Bit */
 891:./Library/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_PG);
 892:./Library/stm32f4xx_flash.c ****   } 
 893:./Library/stm32f4xx_flash.c **** 
 894:./Library/stm32f4xx_flash.c ****   /* Return the Program Status */
 895:./Library/stm32f4xx_flash.c ****   return status;
 896:./Library/stm32f4xx_flash.c **** }
 897:./Library/stm32f4xx_flash.c **** 
 898:./Library/stm32f4xx_flash.c **** /**
 899:./Library/stm32f4xx_flash.c ****   * @}
 900:./Library/stm32f4xx_flash.c ****   */
 901:./Library/stm32f4xx_flash.c **** 
 902:./Library/stm32f4xx_flash.c **** /** @defgroup FLASH_Group3 Option Bytes Programming functions
 903:./Library/stm32f4xx_flash.c ****  *  @brief   Option Bytes Programming functions 
 904:./Library/stm32f4xx_flash.c ****  *
 905:./Library/stm32f4xx_flash.c **** @verbatim   
 906:./Library/stm32f4xx_flash.c ****  ===============================================================================
 907:./Library/stm32f4xx_flash.c ****                 ##### Option Bytes Programming functions #####
 908:./Library/stm32f4xx_flash.c ****  ===============================================================================  
 909:./Library/stm32f4xx_flash.c ****     [..]
 910:./Library/stm32f4xx_flash.c ****       This group includes the following functions:
 911:./Library/stm32f4xx_flash.c ****       (+) void FLASH_OB_Unlock(void)
 912:./Library/stm32f4xx_flash.c ****       (+) void FLASH_OB_Lock(void)
 913:./Library/stm32f4xx_flash.c ****       (+) void FLASH_OB_WRPConfig(uint32_t OB_WRP, FunctionalState NewState)
 914:./Library/stm32f4xx_flash.c ****       (+) void FLASH_OB_WRP1Config(uint32_t OB_WRP, FunctionalState NewState)  
 915:./Library/stm32f4xx_flash.c ****       (+) void FLASH_OB_PCROPSelectionConfig(uint8_t OB_PCROPSelect)
 916:./Library/stm32f4xx_flash.c ****       (+) void FLASH_OB_PCROPConfig(uint32_t OB_PCROP, FunctionalState NewState)
 917:./Library/stm32f4xx_flash.c ****       (+) void FLASH_OB_PCROP1Config(uint32_t OB_PCROP, FunctionalState NewState) 
 918:./Library/stm32f4xx_flash.c ****       (+) void FLASH_OB_RDPConfig(uint8_t OB_RDP)
 919:./Library/stm32f4xx_flash.c ****       (+) void FLASH_OB_UserConfig(uint8_t OB_IWDG, uint8_t OB_STOP, uint8_t OB_STDBY)
 920:./Library/stm32f4xx_flash.c ****       (+) void FLASH_OB_BORConfig(uint8_t OB_BOR)
 921:./Library/stm32f4xx_flash.c ****       (+) FLASH_Status FLASH_ProgramOTP(uint32_t Address, uint32_t Data)
 922:./Library/stm32f4xx_flash.c ****       (+) FLASH_Status FLASH_OB_Launch(void)
 923:./Library/stm32f4xx_flash.c ****       (+) uint32_t FLASH_OB_GetUser(void)
 924:./Library/stm32f4xx_flash.c ****       (+) uint8_t FLASH_OB_GetWRP(void)
 925:./Library/stm32f4xx_flash.c ****       (+) uint8_t FLASH_OB_GetWRP1(void)
 926:./Library/stm32f4xx_flash.c ****       (+) uint8_t FLASH_OB_GetPCROP(void)
 927:./Library/stm32f4xx_flash.c ****       (+) uint8_t FLASH_OB_GetPCROP1(void)
 928:./Library/stm32f4xx_flash.c ****       (+) uint8_t FLASH_OB_GetRDP(void)
 929:./Library/stm32f4xx_flash.c ****       (+) uint8_t FLASH_OB_GetBOR(void)
 930:./Library/stm32f4xx_flash.c ****     [..]  
 931:./Library/stm32f4xx_flash.c ****       The following function can be used only for STM32F42xxx/43xxx devices. 
 932:./Library/stm32f4xx_flash.c ****       (+) void FLASH_OB_BootConfig(uint8_t OB_BOOT)
 933:./Library/stm32f4xx_flash.c ****     [..]   
 934:./Library/stm32f4xx_flash.c ****      Any operation of erase or program should follow these steps:
 935:./Library/stm32f4xx_flash.c ****       (#) Call the FLASH_OB_Unlock() function to enable the FLASH option control 
 936:./Library/stm32f4xx_flash.c ****           register access
 937:./Library/stm32f4xx_flash.c **** 
 938:./Library/stm32f4xx_flash.c ****       (#) Call one or several functions to program the desired Option Bytes:
 939:./Library/stm32f4xx_flash.c ****         (++) void FLASH_OB_WRPConfig(uint32_t OB_WRP, FunctionalState NewState) 
 940:./Library/stm32f4xx_flash.c ****              => to Enable/Disable the desired sector write protection
 941:./Library/stm32f4xx_flash.c ****         (++) void FLASH_OB_RDPConfig(uint8_t OB_RDP) => to set the desired read 
ARM GAS  /tmp/ccwx2lab.s 			page 23


 942:./Library/stm32f4xx_flash.c ****              Protection Level
 943:./Library/stm32f4xx_flash.c ****         (++) void FLASH_OB_UserConfig(uint8_t OB_IWDG, uint8_t OB_STOP, uint8_t OB_STDBY) 
 944:./Library/stm32f4xx_flash.c ****              => to configure the user Option Bytes.
 945:./Library/stm32f4xx_flash.c ****         (++) void FLASH_OB_BORConfig(uint8_t OB_BOR) => to set the BOR Level 			 
 946:./Library/stm32f4xx_flash.c **** 
 947:./Library/stm32f4xx_flash.c ****       (#) Once all needed Option Bytes to be programmed are correctly written, 
 948:./Library/stm32f4xx_flash.c ****           call the FLASH_OB_Launch() function to launch the Option Bytes 
 949:./Library/stm32f4xx_flash.c ****           programming process.
 950:./Library/stm32f4xx_flash.c ****      
 951:./Library/stm32f4xx_flash.c ****       -@- When changing the IWDG mode from HW to SW or from SW to HW, a system 
 952:./Library/stm32f4xx_flash.c ****           reset is needed to make the change effective.  
 953:./Library/stm32f4xx_flash.c **** 
 954:./Library/stm32f4xx_flash.c ****       (#) Call the FLASH_OB_Lock() function to disable the FLASH option control 
 955:./Library/stm32f4xx_flash.c ****           register access (recommended to protect the Option Bytes against 
 956:./Library/stm32f4xx_flash.c ****           possible unwanted operations)
 957:./Library/stm32f4xx_flash.c ****     
 958:./Library/stm32f4xx_flash.c **** @endverbatim
 959:./Library/stm32f4xx_flash.c ****   * @{
 960:./Library/stm32f4xx_flash.c ****   */
 961:./Library/stm32f4xx_flash.c **** 
 962:./Library/stm32f4xx_flash.c **** /**
 963:./Library/stm32f4xx_flash.c ****   * @brief  Unlocks the FLASH Option Control Registers access.
 964:./Library/stm32f4xx_flash.c ****   * @param  None
 965:./Library/stm32f4xx_flash.c ****   * @retval None
 966:./Library/stm32f4xx_flash.c ****   */
 967:./Library/stm32f4xx_flash.c **** void FLASH_OB_Unlock(void)
 968:./Library/stm32f4xx_flash.c **** {
 327              		.loc 1 968 1 is_stmt 1 view -0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331              		@ link register save eliminated.
 969:./Library/stm32f4xx_flash.c ****   if((FLASH->OPTCR & FLASH_OPTCR_OPTLOCK) != RESET)
 332              		.loc 1 969 3 view .LVU65
 333              		.loc 1 969 12 is_stmt 0 view .LVU66
 334 0000 054B     		ldr	r3, .L35
 335 0002 5B69     		ldr	r3, [r3, #20]
 336              		.loc 1 969 5 view .LVU67
 337 0004 13F0010F 		tst	r3, #1
 338 0008 05D0     		beq	.L33
 970:./Library/stm32f4xx_flash.c ****   {
 971:./Library/stm32f4xx_flash.c ****     /* Authorizes the Option Byte register programming */
 972:./Library/stm32f4xx_flash.c ****     FLASH->OPTKEYR = FLASH_OPT_KEY1;
 339              		.loc 1 972 5 is_stmt 1 view .LVU68
 340              		.loc 1 972 20 is_stmt 0 view .LVU69
 341 000a 034B     		ldr	r3, .L35
 342 000c 034A     		ldr	r2, .L35+4
 343 000e 9A60     		str	r2, [r3, #8]
 973:./Library/stm32f4xx_flash.c ****     FLASH->OPTKEYR = FLASH_OPT_KEY2;
 344              		.loc 1 973 5 is_stmt 1 view .LVU70
 345              		.loc 1 973 20 is_stmt 0 view .LVU71
 346 0010 02F14432 		add	r2, r2, #1145324612
 347 0014 9A60     		str	r2, [r3, #8]
 348              	.L33:
 974:./Library/stm32f4xx_flash.c ****   }  
 975:./Library/stm32f4xx_flash.c **** }
 349              		.loc 1 975 1 view .LVU72
ARM GAS  /tmp/ccwx2lab.s 			page 24


 350 0016 7047     		bx	lr
 351              	.L36:
 352              		.align	2
 353              	.L35:
 354 0018 003C0240 		.word	1073888256
 355 001c 3B2A1908 		.word	135866939
 356              		.cfi_endproc
 357              	.LFE139:
 359              		.section	.text.FLASH_OB_Lock,"ax",%progbits
 360              		.align	1
 361              		.global	FLASH_OB_Lock
 362              		.syntax unified
 363              		.thumb
 364              		.thumb_func
 366              	FLASH_OB_Lock:
 367              	.LFB140:
 976:./Library/stm32f4xx_flash.c **** 
 977:./Library/stm32f4xx_flash.c **** /**
 978:./Library/stm32f4xx_flash.c ****   * @brief  Locks the FLASH Option Control Registers access.
 979:./Library/stm32f4xx_flash.c ****   * @param  None
 980:./Library/stm32f4xx_flash.c ****   * @retval None
 981:./Library/stm32f4xx_flash.c ****   */
 982:./Library/stm32f4xx_flash.c **** void FLASH_OB_Lock(void)
 983:./Library/stm32f4xx_flash.c **** {
 368              		.loc 1 983 1 is_stmt 1 view -0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372              		@ link register save eliminated.
 984:./Library/stm32f4xx_flash.c ****   /* Set the OPTLOCK Bit to lock the FLASH Option Byte Registers access */
 985:./Library/stm32f4xx_flash.c ****   FLASH->OPTCR |= FLASH_OPTCR_OPTLOCK;
 373              		.loc 1 985 3 view .LVU74
 374              		.loc 1 985 8 is_stmt 0 view .LVU75
 375 0000 024A     		ldr	r2, .L38
 376 0002 5369     		ldr	r3, [r2, #20]
 377              		.loc 1 985 16 view .LVU76
 378 0004 43F00103 		orr	r3, r3, #1
 379 0008 5361     		str	r3, [r2, #20]
 986:./Library/stm32f4xx_flash.c **** }
 380              		.loc 1 986 1 view .LVU77
 381 000a 7047     		bx	lr
 382              	.L39:
 383              		.align	2
 384              	.L38:
 385 000c 003C0240 		.word	1073888256
 386              		.cfi_endproc
 387              	.LFE140:
 389              		.section	.text.FLASH_OB_PCROPSelectionConfig,"ax",%progbits
 390              		.align	1
 391              		.global	FLASH_OB_PCROPSelectionConfig
 392              		.syntax unified
 393              		.thumb
 394              		.thumb_func
 396              	FLASH_OB_PCROPSelectionConfig:
 397              	.LVL5:
 398              	.LFB143:
 987:./Library/stm32f4xx_flash.c **** 
ARM GAS  /tmp/ccwx2lab.s 			page 25


 988:./Library/stm32f4xx_flash.c **** /**
 989:./Library/stm32f4xx_flash.c ****   * @brief  Enables or disables the write protection of the desired sectors, for the first
 990:./Library/stm32f4xx_flash.c ****   *         1 Mb of the Flash  
 991:./Library/stm32f4xx_flash.c ****   *
 992:./Library/stm32f4xx_flash.c ****   * @note   When the memory read protection level is selected (RDP level = 1), 
 993:./Library/stm32f4xx_flash.c ****   *         it is not possible to program or erase the flash sector i if CortexM4  
 994:./Library/stm32f4xx_flash.c ****   *         debug features are connected or boot code is executed in RAM, even if nWRPi = 1 
 995:./Library/stm32f4xx_flash.c ****   * @note   Active value of nWRPi bits is inverted when PCROP mode is active (SPRMOD =1).   
 996:./Library/stm32f4xx_flash.c ****   * 
 997:./Library/stm32f4xx_flash.c ****   * @param  OB_WRP: specifies the sector(s) to be write protected or unprotected.
 998:./Library/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 999:./Library/stm32f4xx_flash.c ****   *            @arg OB_WRP: A value between OB_WRP_Sector0 and OB_WRP_Sector11                     
1000:./Library/stm32f4xx_flash.c ****   *            @arg OB_WRP_Sector_All
1001:./Library/stm32f4xx_flash.c ****   * @param  Newstate: new state of the Write Protection.
1002:./Library/stm32f4xx_flash.c ****   *          This parameter can be: ENABLE or DISABLE.
1003:./Library/stm32f4xx_flash.c ****   * @retval None  
1004:./Library/stm32f4xx_flash.c ****   */
1005:./Library/stm32f4xx_flash.c **** void FLASH_OB_WRPConfig(uint32_t OB_WRP, FunctionalState NewState)
1006:./Library/stm32f4xx_flash.c **** { 
1007:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
1008:./Library/stm32f4xx_flash.c ****   
1009:./Library/stm32f4xx_flash.c ****   /* Check the parameters */
1010:./Library/stm32f4xx_flash.c ****   assert_param(IS_OB_WRP(OB_WRP));
1011:./Library/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1012:./Library/stm32f4xx_flash.c ****     
1013:./Library/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
1014:./Library/stm32f4xx_flash.c **** 
1015:./Library/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
1016:./Library/stm32f4xx_flash.c ****   { 
1017:./Library/stm32f4xx_flash.c ****     if(NewState != DISABLE)
1018:./Library/stm32f4xx_flash.c ****     {
1019:./Library/stm32f4xx_flash.c ****       *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS &= (~OB_WRP);
1020:./Library/stm32f4xx_flash.c ****     }
1021:./Library/stm32f4xx_flash.c ****     else
1022:./Library/stm32f4xx_flash.c ****     {
1023:./Library/stm32f4xx_flash.c ****       *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS |= (uint16_t)OB_WRP;
1024:./Library/stm32f4xx_flash.c ****     }
1025:./Library/stm32f4xx_flash.c ****   }
1026:./Library/stm32f4xx_flash.c **** }
1027:./Library/stm32f4xx_flash.c **** 
1028:./Library/stm32f4xx_flash.c **** /**
1029:./Library/stm32f4xx_flash.c ****   * @brief  Enables or disables the write protection of the desired sectors, for the second
1030:./Library/stm32f4xx_flash.c ****   *         1 Mb of the Flash  
1031:./Library/stm32f4xx_flash.c ****   *           
1032:./Library/stm32f4xx_flash.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices.
1033:./Library/stm32f4xx_flash.c ****   *   
1034:./Library/stm32f4xx_flash.c ****   * @note   When the memory read out protection is selected (RDP level = 1), 
1035:./Library/stm32f4xx_flash.c ****   *         it is not possible to program or erase the flash sector i if CortexM4  
1036:./Library/stm32f4xx_flash.c ****   *         debug features are connected or boot code is executed in RAM, even if nWRPi = 1 
1037:./Library/stm32f4xx_flash.c ****   * @note   Active value of nWRPi bits is inverted when PCROP mode is active (SPRMOD =1).      
1038:./Library/stm32f4xx_flash.c ****   * 
1039:./Library/stm32f4xx_flash.c ****   * @param  OB_WRP: specifies the sector(s) to be write protected or unprotected.
1040:./Library/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
1041:./Library/stm32f4xx_flash.c ****   *            @arg OB_WRP: A value between OB_WRP_Sector12 and OB_WRP_Sector23
1042:./Library/stm32f4xx_flash.c ****   *            @arg OB_WRP_Sector_All                        
1043:./Library/stm32f4xx_flash.c ****   * @param  Newstate: new state of the Write Protection.
1044:./Library/stm32f4xx_flash.c ****   *          This parameter can be: ENABLE or DISABLE.
ARM GAS  /tmp/ccwx2lab.s 			page 26


1045:./Library/stm32f4xx_flash.c ****   * @retval None  
1046:./Library/stm32f4xx_flash.c ****   */
1047:./Library/stm32f4xx_flash.c **** void FLASH_OB_WRP1Config(uint32_t OB_WRP, FunctionalState NewState)
1048:./Library/stm32f4xx_flash.c **** { 
1049:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
1050:./Library/stm32f4xx_flash.c ****   
1051:./Library/stm32f4xx_flash.c ****   /* Check the parameters */
1052:./Library/stm32f4xx_flash.c ****   assert_param(IS_OB_WRP(OB_WRP));
1053:./Library/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1054:./Library/stm32f4xx_flash.c ****     
1055:./Library/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
1056:./Library/stm32f4xx_flash.c **** 
1057:./Library/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
1058:./Library/stm32f4xx_flash.c ****   { 
1059:./Library/stm32f4xx_flash.c ****     if(NewState != DISABLE)
1060:./Library/stm32f4xx_flash.c ****     {
1061:./Library/stm32f4xx_flash.c ****       *(__IO uint16_t*)OPTCR1_BYTE2_ADDRESS &= (~OB_WRP);
1062:./Library/stm32f4xx_flash.c ****     }
1063:./Library/stm32f4xx_flash.c ****     else
1064:./Library/stm32f4xx_flash.c ****     {
1065:./Library/stm32f4xx_flash.c ****       *(__IO uint16_t*)OPTCR1_BYTE2_ADDRESS |= (uint16_t)OB_WRP;
1066:./Library/stm32f4xx_flash.c ****     }
1067:./Library/stm32f4xx_flash.c ****   }
1068:./Library/stm32f4xx_flash.c **** }
1069:./Library/stm32f4xx_flash.c **** 
1070:./Library/stm32f4xx_flash.c **** /**
1071:./Library/stm32f4xx_flash.c ****   * @brief  Select the Protection Mode (SPRMOD). 
1072:./Library/stm32f4xx_flash.c ****   * 
1073:./Library/stm32f4xx_flash.c ****   * @note   This function can be used only for STM32F42xxx/43xxx and STM32F401xx/411xE devices.    
1074:./Library/stm32f4xx_flash.c ****   * 
1075:./Library/stm32f4xx_flash.c ****   * @note   After PCROP activation, Option Byte modification is not possible. 
1076:./Library/stm32f4xx_flash.c ****   *         Exception made for the global Read Out Protection modification level (level1 to level0)
1077:./Library/stm32f4xx_flash.c ****   * @note   Once SPRMOD bit is active unprotection of a protected sector is not possible 
1078:./Library/stm32f4xx_flash.c ****   *   
1079:./Library/stm32f4xx_flash.c ****   * @note   Read a protected sector will set RDERR Flag and write a protected sector will set WRPER
1080:./Library/stm32f4xx_flash.c ****   *   
1081:./Library/stm32f4xx_flash.c ****   * @note   Some Precautions should be taken when activating the PCROP feature :
1082:./Library/stm32f4xx_flash.c ****   *         The active value of nWRPi bits is inverted when PCROP mode is active, this means if SPR
1083:./Library/stm32f4xx_flash.c ****   *         and WRPi = 1 (default value), then the user sector i is read/write protected.
1084:./Library/stm32f4xx_flash.c ****   *         In order to avoid activation of PCROP Mode for undesired sectors, please follow the
1085:./Library/stm32f4xx_flash.c ****   *         below safety sequence :       
1086:./Library/stm32f4xx_flash.c ****   *         - Disable PCROP for all Sectors using FLASH_OB_PCROPConfig(OB_PCROP_Sector_All, DISABLE
1087:./Library/stm32f4xx_flash.c ****   *           for Bank1 or FLASH_OB_PCROP1Config(OB_PCROP_Sector_All, DISABLE) function for Bank2  
1088:./Library/stm32f4xx_flash.c ****   *         - Enable PCROP for the desired Sector i using FLASH_OB_PCROPConfig(Sector i, ENABLE) fu
1089:./Library/stm32f4xx_flash.c ****   *         - Activate the PCROP Mode FLASH_OB_PCROPSelectionConfig() function. 
1090:./Library/stm32f4xx_flash.c ****   * 
1091:./Library/stm32f4xx_flash.c ****   * @param  OB_PCROP:  Select the Protection Mode of nWPRi bits 
1092:./Library/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
1093:./Library/stm32f4xx_flash.c ****   *            @arg OB_PcROP_Disable: nWRPi control the write protection of respective user sectors
1094:./Library/stm32f4xx_flash.c ****   *            @arg OB_PcROP_Enable: nWRPi control the  read&write protection (PCROP) of respective
1095:./Library/stm32f4xx_flash.c ****   * @retval None
1096:./Library/stm32f4xx_flash.c ****   */
1097:./Library/stm32f4xx_flash.c **** void FLASH_OB_PCROPSelectionConfig(uint8_t OB_PcROP)
1098:./Library/stm32f4xx_flash.c **** {  
 399              		.loc 1 1098 1 is_stmt 1 view -0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccwx2lab.s 			page 27


 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		@ link register save eliminated.
1099:./Library/stm32f4xx_flash.c ****   uint8_t optiontmp = 0xFF;
 404              		.loc 1 1099 3 view .LVU79
1100:./Library/stm32f4xx_flash.c ****       
1101:./Library/stm32f4xx_flash.c ****   /* Check the parameters */
1102:./Library/stm32f4xx_flash.c ****   assert_param(IS_OB_PCROP_SELECT(OB_PcROP));
 405              		.loc 1 1102 3 view .LVU80
1103:./Library/stm32f4xx_flash.c ****   
1104:./Library/stm32f4xx_flash.c ****   /* Mask SPRMOD bit */
1105:./Library/stm32f4xx_flash.c ****   optiontmp =  (uint8_t)((*(__IO uint8_t *)OPTCR_BYTE3_ADDRESS) & (uint8_t)0x7F); 
 406              		.loc 1 1105 3 view .LVU81
 407              		.loc 1 1105 65 is_stmt 0 view .LVU82
 408 0000 034A     		ldr	r2, .L41
 409 0002 D37D     		ldrb	r3, [r2, #23]	@ zero_extendqisi2
 410              		.loc 1 1105 13 view .LVU83
 411 0004 03F07F03 		and	r3, r3, #127
 412              	.LVL6:
1106:./Library/stm32f4xx_flash.c ****   /* Update Option Byte */
1107:./Library/stm32f4xx_flash.c ****   *(__IO uint8_t *)OPTCR_BYTE3_ADDRESS = (uint8_t)(OB_PcROP | optiontmp); 
 413              		.loc 1 1107 3 is_stmt 1 view .LVU84
 414              		.loc 1 1107 42 is_stmt 0 view .LVU85
 415 0008 0343     		orrs	r3, r3, r0
 416              	.LVL7:
 417              		.loc 1 1107 40 view .LVU86
 418 000a D375     		strb	r3, [r2, #23]
1108:./Library/stm32f4xx_flash.c ****     
1109:./Library/stm32f4xx_flash.c **** }
 419              		.loc 1 1109 1 view .LVU87
 420 000c 7047     		bx	lr
 421              	.L42:
 422 000e 00BF     		.align	2
 423              	.L41:
 424 0010 003C0240 		.word	1073888256
 425              		.cfi_endproc
 426              	.LFE143:
 428              		.section	.text.FLASH_OB_BootConfig,"ax",%progbits
 429              		.align	1
 430              		.global	FLASH_OB_BootConfig
 431              		.syntax unified
 432              		.thumb
 433              		.thumb_func
 435              	FLASH_OB_BootConfig:
 436              	.LVL8:
 437              	.LFB148:
1110:./Library/stm32f4xx_flash.c **** 
1111:./Library/stm32f4xx_flash.c **** /**
1112:./Library/stm32f4xx_flash.c ****   * @brief  Enables or disables the read/write protection (PCROP) of the desired 
1113:./Library/stm32f4xx_flash.c ****   *         sectors, for the first 1 MB of the Flash.
1114:./Library/stm32f4xx_flash.c ****   *           
1115:./Library/stm32f4xx_flash.c ****   * @note   This function can be used only for STM32F42xxx/43xxx , STM32F401xx/411xE 
1116:./Library/stm32f4xx_flash.c ****   *         STM32F412xG and STM32F413_423xx devices.
1117:./Library/stm32f4xx_flash.c ****   *   
1118:./Library/stm32f4xx_flash.c ****   * @param  OB_PCROP: specifies the sector(s) to be read/write protected or unprotected.
1119:./Library/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
1120:./Library/stm32f4xx_flash.c ****   *            @arg OB_PCROP: A value between OB_PCROP_Sector0 and OB_PCROP_Sector11 for 
1121:./Library/stm32f4xx_flash.c ****   *                           STM32F42xxx/43xxx devices and between OB_PCROP_Sector0 and 
ARM GAS  /tmp/ccwx2lab.s 			page 28


1122:./Library/stm32f4xx_flash.c ****   *                           OB_PCROP_Sector5 for STM32F401xx/411xE devices.
1123:./Library/stm32f4xx_flash.c ****   *            @arg OB_PCROP_Sector_All
1124:./Library/stm32f4xx_flash.c ****   * @param  Newstate: new state of the Write Protection.
1125:./Library/stm32f4xx_flash.c ****   *          This parameter can be: ENABLE or DISABLE.
1126:./Library/stm32f4xx_flash.c ****   * @retval None  
1127:./Library/stm32f4xx_flash.c ****   */
1128:./Library/stm32f4xx_flash.c **** void FLASH_OB_PCROPConfig(uint32_t OB_PCROP, FunctionalState NewState)
1129:./Library/stm32f4xx_flash.c **** { 
1130:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
1131:./Library/stm32f4xx_flash.c ****   
1132:./Library/stm32f4xx_flash.c ****   /* Check the parameters */
1133:./Library/stm32f4xx_flash.c ****   assert_param(IS_OB_PCROP(OB_PCROP));
1134:./Library/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1135:./Library/stm32f4xx_flash.c ****     
1136:./Library/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
1137:./Library/stm32f4xx_flash.c **** 
1138:./Library/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
1139:./Library/stm32f4xx_flash.c ****   { 
1140:./Library/stm32f4xx_flash.c ****     if(NewState != DISABLE)
1141:./Library/stm32f4xx_flash.c ****     {
1142:./Library/stm32f4xx_flash.c ****       *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS |= (uint16_t)OB_PCROP;    
1143:./Library/stm32f4xx_flash.c ****     }
1144:./Library/stm32f4xx_flash.c ****     else
1145:./Library/stm32f4xx_flash.c ****     {
1146:./Library/stm32f4xx_flash.c ****       *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS &= (~OB_PCROP);
1147:./Library/stm32f4xx_flash.c ****     }
1148:./Library/stm32f4xx_flash.c ****   }
1149:./Library/stm32f4xx_flash.c **** }
1150:./Library/stm32f4xx_flash.c **** 
1151:./Library/stm32f4xx_flash.c **** /**
1152:./Library/stm32f4xx_flash.c ****    * @brief Enables or disables the read/write protection (PCROP) of the desired 
1153:./Library/stm32f4xx_flash.c ****   *         sectors
1154:./Library/stm32f4xx_flash.c ****   *           
1155:./Library/stm32f4xx_flash.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices.
1156:./Library/stm32f4xx_flash.c ****   *   
1157:./Library/stm32f4xx_flash.c ****   * @param  OB_PCROP: specifies the sector(s) to be read/write protected or unprotected.
1158:./Library/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
1159:./Library/stm32f4xx_flash.c ****   *            @arg OB_PCROP: A value between OB_PCROP_Sector12 and OB_PCROP_Sector23 
1160:./Library/stm32f4xx_flash.c ****   *            @arg OB_PCROP_Sector_All
1161:./Library/stm32f4xx_flash.c ****   * @param  Newstate: new state of the Write Protection.
1162:./Library/stm32f4xx_flash.c ****   *          This parameter can be: ENABLE or DISABLE.
1163:./Library/stm32f4xx_flash.c ****   * @retval None  
1164:./Library/stm32f4xx_flash.c ****   */
1165:./Library/stm32f4xx_flash.c **** void FLASH_OB_PCROP1Config(uint32_t OB_PCROP, FunctionalState NewState)
1166:./Library/stm32f4xx_flash.c **** { 
1167:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
1168:./Library/stm32f4xx_flash.c ****   
1169:./Library/stm32f4xx_flash.c ****   /* Check the parameters */
1170:./Library/stm32f4xx_flash.c ****   assert_param(IS_OB_PCROP(OB_PCROP));
1171:./Library/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1172:./Library/stm32f4xx_flash.c ****     
1173:./Library/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
1174:./Library/stm32f4xx_flash.c **** 
1175:./Library/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
1176:./Library/stm32f4xx_flash.c ****   { 
1177:./Library/stm32f4xx_flash.c ****     if(NewState != DISABLE)
1178:./Library/stm32f4xx_flash.c ****     {
ARM GAS  /tmp/ccwx2lab.s 			page 29


1179:./Library/stm32f4xx_flash.c ****       *(__IO uint16_t*)OPTCR1_BYTE2_ADDRESS |= (uint16_t)OB_PCROP;
1180:./Library/stm32f4xx_flash.c ****     }
1181:./Library/stm32f4xx_flash.c ****     else
1182:./Library/stm32f4xx_flash.c ****     {
1183:./Library/stm32f4xx_flash.c ****       *(__IO uint16_t*)OPTCR1_BYTE2_ADDRESS &= (~OB_PCROP);
1184:./Library/stm32f4xx_flash.c ****     }
1185:./Library/stm32f4xx_flash.c ****   }
1186:./Library/stm32f4xx_flash.c **** }
1187:./Library/stm32f4xx_flash.c **** 
1188:./Library/stm32f4xx_flash.c **** 
1189:./Library/stm32f4xx_flash.c **** /**
1190:./Library/stm32f4xx_flash.c ****   * @brief  Sets the read protection level.
1191:./Library/stm32f4xx_flash.c ****   * @param  OB_RDP: specifies the read protection level.
1192:./Library/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
1193:./Library/stm32f4xx_flash.c ****   *            @arg OB_RDP_Level_0: No protection
1194:./Library/stm32f4xx_flash.c ****   *            @arg OB_RDP_Level_1: Read protection of the memory
1195:./Library/stm32f4xx_flash.c ****   *            @arg OB_RDP_Level_2: Full chip protection
1196:./Library/stm32f4xx_flash.c ****   *   
1197:./Library/stm32f4xx_flash.c ****   * /!\ Warning /!\ When enabling OB_RDP level 2 it's no more possible to go back to level 1 or 0
1198:./Library/stm32f4xx_flash.c ****   *    
1199:./Library/stm32f4xx_flash.c ****   * @retval None
1200:./Library/stm32f4xx_flash.c ****   */
1201:./Library/stm32f4xx_flash.c **** void FLASH_OB_RDPConfig(uint8_t OB_RDP)
1202:./Library/stm32f4xx_flash.c **** {
1203:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
1204:./Library/stm32f4xx_flash.c **** 
1205:./Library/stm32f4xx_flash.c ****   /* Check the parameters */
1206:./Library/stm32f4xx_flash.c ****   assert_param(IS_OB_RDP(OB_RDP));
1207:./Library/stm32f4xx_flash.c **** 
1208:./Library/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
1209:./Library/stm32f4xx_flash.c **** 
1210:./Library/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
1211:./Library/stm32f4xx_flash.c ****   {
1212:./Library/stm32f4xx_flash.c ****     *(__IO uint8_t*)OPTCR_BYTE1_ADDRESS = OB_RDP;
1213:./Library/stm32f4xx_flash.c **** 
1214:./Library/stm32f4xx_flash.c ****   }
1215:./Library/stm32f4xx_flash.c **** }
1216:./Library/stm32f4xx_flash.c **** 
1217:./Library/stm32f4xx_flash.c **** /**
1218:./Library/stm32f4xx_flash.c ****   * @brief  Programs the FLASH User Option Byte: IWDG_SW / RST_STOP / RST_STDBY.    
1219:./Library/stm32f4xx_flash.c ****   * @param  OB_IWDG: Selects the IWDG mode
1220:./Library/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
1221:./Library/stm32f4xx_flash.c ****   *            @arg OB_IWDG_SW: Software IWDG selected
1222:./Library/stm32f4xx_flash.c ****   *            @arg OB_IWDG_HW: Hardware IWDG selected
1223:./Library/stm32f4xx_flash.c ****   * @param  OB_STOP: Reset event when entering STOP mode.
1224:./Library/stm32f4xx_flash.c ****   *          This parameter  can be one of the following values:
1225:./Library/stm32f4xx_flash.c ****   *            @arg OB_STOP_NoRST: No reset generated when entering in STOP
1226:./Library/stm32f4xx_flash.c ****   *            @arg OB_STOP_RST: Reset generated when entering in STOP
1227:./Library/stm32f4xx_flash.c ****   * @param  OB_STDBY: Reset event when entering Standby mode.
1228:./Library/stm32f4xx_flash.c ****   *          This parameter  can be one of the following values:
1229:./Library/stm32f4xx_flash.c ****   *            @arg OB_STDBY_NoRST: No reset generated when entering in STANDBY
1230:./Library/stm32f4xx_flash.c ****   *            @arg OB_STDBY_RST: Reset generated when entering in STANDBY
1231:./Library/stm32f4xx_flash.c ****   * @retval None
1232:./Library/stm32f4xx_flash.c ****   */
1233:./Library/stm32f4xx_flash.c **** void FLASH_OB_UserConfig(uint8_t OB_IWDG, uint8_t OB_STOP, uint8_t OB_STDBY)
1234:./Library/stm32f4xx_flash.c **** {
1235:./Library/stm32f4xx_flash.c ****   uint8_t optiontmp = 0xFF;
ARM GAS  /tmp/ccwx2lab.s 			page 30


1236:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE; 
1237:./Library/stm32f4xx_flash.c **** 
1238:./Library/stm32f4xx_flash.c ****   /* Check the parameters */
1239:./Library/stm32f4xx_flash.c ****   assert_param(IS_OB_IWDG_SOURCE(OB_IWDG));
1240:./Library/stm32f4xx_flash.c ****   assert_param(IS_OB_STOP_SOURCE(OB_STOP));
1241:./Library/stm32f4xx_flash.c ****   assert_param(IS_OB_STDBY_SOURCE(OB_STDBY));
1242:./Library/stm32f4xx_flash.c **** 
1243:./Library/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
1244:./Library/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
1245:./Library/stm32f4xx_flash.c ****   
1246:./Library/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
1247:./Library/stm32f4xx_flash.c ****   { 
1248:./Library/stm32f4xx_flash.c **** #if defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM32F469_479xx)
1249:./Library/stm32f4xx_flash.c ****     /* Mask OPTLOCK, OPTSTRT, BOR_LEV and BFB2 bits */
1250:./Library/stm32f4xx_flash.c ****     optiontmp =  (uint8_t)((*(__IO uint8_t *)OPTCR_BYTE0_ADDRESS) & (uint8_t)0x1F);
1251:./Library/stm32f4xx_flash.c **** #endif /* STM32F427_437xx ||  STM32F429_439xx ||  STM32F469_479xx */
1252:./Library/stm32f4xx_flash.c **** 
1253:./Library/stm32f4xx_flash.c **** #if defined(STM32F40_41xxx) || defined(STM32F401xx) || defined(STM32F410xx) || defined(STM32F411xE)
1254:./Library/stm32f4xx_flash.c ****     /* Mask OPTLOCK, OPTSTRT and BOR_LEV bits */
1255:./Library/stm32f4xx_flash.c ****     optiontmp =  (uint8_t)((*(__IO uint8_t *)OPTCR_BYTE0_ADDRESS) & (uint8_t)0x0F); 
1256:./Library/stm32f4xx_flash.c **** #endif /* STM32F40_41xxx || STM32F401xx || STM32F410xx || STM32F411xE || STM32F446xx */ 
1257:./Library/stm32f4xx_flash.c **** 
1258:./Library/stm32f4xx_flash.c ****     /* Update User Option Byte */
1259:./Library/stm32f4xx_flash.c ****     *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS = OB_IWDG | (uint8_t)(OB_STDBY | (uint8_t)(OB_STOP | ((uin
1260:./Library/stm32f4xx_flash.c ****   }  
1261:./Library/stm32f4xx_flash.c **** }
1262:./Library/stm32f4xx_flash.c **** 
1263:./Library/stm32f4xx_flash.c **** /**
1264:./Library/stm32f4xx_flash.c ****   * @brief  Configure the Dual Bank Boot.
1265:./Library/stm32f4xx_flash.c ****   *   
1266:./Library/stm32f4xx_flash.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices.
1267:./Library/stm32f4xx_flash.c ****   *      
1268:./Library/stm32f4xx_flash.c ****   * @param  OB_BOOT: specifies the Dual Bank Boot Option byte.
1269:./Library/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
1270:./Library/stm32f4xx_flash.c ****   *            @arg OB_Dual_BootEnabled: Dual Bank Boot Enable
1271:./Library/stm32f4xx_flash.c ****   *            @arg OB_Dual_BootDisabled: Dual Bank Boot Disabled
1272:./Library/stm32f4xx_flash.c ****   * @retval None
1273:./Library/stm32f4xx_flash.c ****   */
1274:./Library/stm32f4xx_flash.c **** void FLASH_OB_BootConfig(uint8_t OB_BOOT)
1275:./Library/stm32f4xx_flash.c **** {
 438              		.loc 1 1275 1 is_stmt 1 view -0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 442              		@ link register save eliminated.
1276:./Library/stm32f4xx_flash.c ****   /* Check the parameters */
1277:./Library/stm32f4xx_flash.c ****   assert_param(IS_OB_BOOT(OB_BOOT));
 443              		.loc 1 1277 3 view .LVU89
1278:./Library/stm32f4xx_flash.c **** 
1279:./Library/stm32f4xx_flash.c ****   /* Set Dual Bank Boot */
1280:./Library/stm32f4xx_flash.c ****   *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS &= (~FLASH_OPTCR_BFB2);
 444              		.loc 1 1280 3 view .LVU90
 445 0000 044B     		ldr	r3, .L44
 446 0002 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 447              		.loc 1 1280 40 is_stmt 0 view .LVU91
 448 0004 02F0EF02 		and	r2, r2, #239
 449 0008 1A75     		strb	r2, [r3, #20]
ARM GAS  /tmp/ccwx2lab.s 			page 31


1281:./Library/stm32f4xx_flash.c ****   *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS |= OB_BOOT;
 450              		.loc 1 1281 3 is_stmt 1 view .LVU92
 451 000a 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 452              		.loc 1 1281 40 is_stmt 0 view .LVU93
 453 000c 0243     		orrs	r2, r2, r0
 454 000e 1A75     		strb	r2, [r3, #20]
1282:./Library/stm32f4xx_flash.c **** 
1283:./Library/stm32f4xx_flash.c **** }
 455              		.loc 1 1283 1 view .LVU94
 456 0010 7047     		bx	lr
 457              	.L45:
 458 0012 00BF     		.align	2
 459              	.L44:
 460 0014 003C0240 		.word	1073888256
 461              		.cfi_endproc
 462              	.LFE148:
 464              		.section	.text.FLASH_OB_BORConfig,"ax",%progbits
 465              		.align	1
 466              		.global	FLASH_OB_BORConfig
 467              		.syntax unified
 468              		.thumb
 469              		.thumb_func
 471              	FLASH_OB_BORConfig:
 472              	.LVL9:
 473              	.LFB149:
1284:./Library/stm32f4xx_flash.c **** 
1285:./Library/stm32f4xx_flash.c **** /**
1286:./Library/stm32f4xx_flash.c ****   * @brief  Sets the BOR Level. 
1287:./Library/stm32f4xx_flash.c ****   * @param  OB_BOR: specifies the Option Bytes BOR Reset Level.
1288:./Library/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
1289:./Library/stm32f4xx_flash.c ****   *            @arg OB_BOR_LEVEL3: Supply voltage ranges from 2.7 to 3.6 V
1290:./Library/stm32f4xx_flash.c ****   *            @arg OB_BOR_LEVEL2: Supply voltage ranges from 2.4 to 2.7 V
1291:./Library/stm32f4xx_flash.c ****   *            @arg OB_BOR_LEVEL1: Supply voltage ranges from 2.1 to 2.4 V
1292:./Library/stm32f4xx_flash.c ****   *            @arg OB_BOR_OFF: Supply voltage ranges from 1.62 to 2.1 V
1293:./Library/stm32f4xx_flash.c ****   * @retval None
1294:./Library/stm32f4xx_flash.c ****   */
1295:./Library/stm32f4xx_flash.c **** void FLASH_OB_BORConfig(uint8_t OB_BOR)
1296:./Library/stm32f4xx_flash.c **** {
 474              		.loc 1 1296 1 is_stmt 1 view -0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478              		@ link register save eliminated.
1297:./Library/stm32f4xx_flash.c ****   /* Check the parameters */
1298:./Library/stm32f4xx_flash.c ****   assert_param(IS_OB_BOR(OB_BOR));
 479              		.loc 1 1298 3 view .LVU96
1299:./Library/stm32f4xx_flash.c **** 
1300:./Library/stm32f4xx_flash.c ****   /* Set the BOR Level */
1301:./Library/stm32f4xx_flash.c ****   *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS &= (~FLASH_OPTCR_BOR_LEV);
 480              		.loc 1 1301 3 view .LVU97
 481 0000 044B     		ldr	r3, .L47
 482 0002 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 483              		.loc 1 1301 40 is_stmt 0 view .LVU98
 484 0004 02F0F302 		and	r2, r2, #243
 485 0008 1A75     		strb	r2, [r3, #20]
1302:./Library/stm32f4xx_flash.c ****   *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS |= OB_BOR;
 486              		.loc 1 1302 3 is_stmt 1 view .LVU99
ARM GAS  /tmp/ccwx2lab.s 			page 32


 487 000a 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 488              		.loc 1 1302 40 is_stmt 0 view .LVU100
 489 000c 0243     		orrs	r2, r2, r0
 490 000e 1A75     		strb	r2, [r3, #20]
1303:./Library/stm32f4xx_flash.c **** 
1304:./Library/stm32f4xx_flash.c **** }
 491              		.loc 1 1304 1 view .LVU101
 492 0010 7047     		bx	lr
 493              	.L48:
 494 0012 00BF     		.align	2
 495              	.L47:
 496 0014 003C0240 		.word	1073888256
 497              		.cfi_endproc
 498              	.LFE149:
 500              		.section	.text.FLASH_OB_GetUser,"ax",%progbits
 501              		.align	1
 502              		.global	FLASH_OB_GetUser
 503              		.syntax unified
 504              		.thumb
 505              		.thumb_func
 507              	FLASH_OB_GetUser:
 508              	.LFB151:
1305:./Library/stm32f4xx_flash.c **** 
1306:./Library/stm32f4xx_flash.c **** /**
1307:./Library/stm32f4xx_flash.c ****   * @brief  Launch the option byte loading.
1308:./Library/stm32f4xx_flash.c ****   * @param  None
1309:./Library/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
1310:./Library/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
1311:./Library/stm32f4xx_flash.c ****   */
1312:./Library/stm32f4xx_flash.c **** FLASH_Status FLASH_OB_Launch(void)
1313:./Library/stm32f4xx_flash.c **** {
1314:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
1315:./Library/stm32f4xx_flash.c **** 
1316:./Library/stm32f4xx_flash.c ****   /* Set the OPTSTRT bit in OPTCR register */
1317:./Library/stm32f4xx_flash.c ****   *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS |= FLASH_OPTCR_OPTSTRT;
1318:./Library/stm32f4xx_flash.c **** 
1319:./Library/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
1320:./Library/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
1321:./Library/stm32f4xx_flash.c **** 
1322:./Library/stm32f4xx_flash.c ****   return status;
1323:./Library/stm32f4xx_flash.c **** }
1324:./Library/stm32f4xx_flash.c **** 
1325:./Library/stm32f4xx_flash.c **** /**
1326:./Library/stm32f4xx_flash.c ****   * @brief  Returns the FLASH User Option Bytes values.
1327:./Library/stm32f4xx_flash.c ****   * @param  None
1328:./Library/stm32f4xx_flash.c ****   * @retval The FLASH User Option Bytes values: IWDG_SW(Bit0), RST_STOP(Bit1)
1329:./Library/stm32f4xx_flash.c ****   *         and RST_STDBY(Bit2).
1330:./Library/stm32f4xx_flash.c ****   */
1331:./Library/stm32f4xx_flash.c **** uint8_t FLASH_OB_GetUser(void)
1332:./Library/stm32f4xx_flash.c **** {
 509              		.loc 1 1332 1 is_stmt 1 view -0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 0, uses_anonymous_args = 0
 513              		@ link register save eliminated.
1333:./Library/stm32f4xx_flash.c ****   /* Return the User Option Byte */
1334:./Library/stm32f4xx_flash.c ****   return (uint8_t)(FLASH->OPTCR >> 5);
ARM GAS  /tmp/ccwx2lab.s 			page 33


 514              		.loc 1 1334 3 view .LVU103
 515              		.loc 1 1334 25 is_stmt 0 view .LVU104
 516 0000 024B     		ldr	r3, .L50
 517 0002 5869     		ldr	r0, [r3, #20]
1335:./Library/stm32f4xx_flash.c **** }
 518              		.loc 1 1335 1 view .LVU105
 519 0004 C0F34710 		ubfx	r0, r0, #5, #8
 520 0008 7047     		bx	lr
 521              	.L51:
 522 000a 00BF     		.align	2
 523              	.L50:
 524 000c 003C0240 		.word	1073888256
 525              		.cfi_endproc
 526              	.LFE151:
 528              		.section	.text.FLASH_OB_GetWRP,"ax",%progbits
 529              		.align	1
 530              		.global	FLASH_OB_GetWRP
 531              		.syntax unified
 532              		.thumb
 533              		.thumb_func
 535              	FLASH_OB_GetWRP:
 536              	.LFB152:
1336:./Library/stm32f4xx_flash.c **** 
1337:./Library/stm32f4xx_flash.c **** /**
1338:./Library/stm32f4xx_flash.c ****   * @brief  Returns the FLASH Write Protection Option Bytes value.
1339:./Library/stm32f4xx_flash.c ****   * @param  None
1340:./Library/stm32f4xx_flash.c ****   * @retval The FLASH Write Protection  Option Bytes value
1341:./Library/stm32f4xx_flash.c ****   */
1342:./Library/stm32f4xx_flash.c **** uint16_t FLASH_OB_GetWRP(void)
1343:./Library/stm32f4xx_flash.c **** {
 537              		.loc 1 1343 1 is_stmt 1 view -0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 0
 540              		@ frame_needed = 0, uses_anonymous_args = 0
 541              		@ link register save eliminated.
1344:./Library/stm32f4xx_flash.c ****   /* Return the FLASH write protection Register value */
1345:./Library/stm32f4xx_flash.c ****   return (*(__IO uint16_t *)(OPTCR_BYTE2_ADDRESS));
 542              		.loc 1 1345 3 view .LVU107
 543              		.loc 1 1345 11 is_stmt 0 view .LVU108
 544 0000 014B     		ldr	r3, .L53
 545 0002 D88A     		ldrh	r0, [r3, #22]
1346:./Library/stm32f4xx_flash.c **** }
 546              		.loc 1 1346 1 view .LVU109
 547 0004 80B2     		uxth	r0, r0
 548 0006 7047     		bx	lr
 549              	.L54:
 550              		.align	2
 551              	.L53:
 552 0008 003C0240 		.word	1073888256
 553              		.cfi_endproc
 554              	.LFE152:
 556              		.section	.text.FLASH_OB_GetWRP1,"ax",%progbits
 557              		.align	1
 558              		.global	FLASH_OB_GetWRP1
 559              		.syntax unified
 560              		.thumb
 561              		.thumb_func
ARM GAS  /tmp/ccwx2lab.s 			page 34


 563              	FLASH_OB_GetWRP1:
 564              	.LFB153:
1347:./Library/stm32f4xx_flash.c **** 
1348:./Library/stm32f4xx_flash.c **** /**
1349:./Library/stm32f4xx_flash.c ****   * @brief  Returns the FLASH Write Protection Option Bytes value.
1350:./Library/stm32f4xx_flash.c ****   *   
1351:./Library/stm32f4xx_flash.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices.
1352:./Library/stm32f4xx_flash.c ****   *   
1353:./Library/stm32f4xx_flash.c ****   * @param  None
1354:./Library/stm32f4xx_flash.c ****   * @retval The FLASH Write Protection  Option Bytes value
1355:./Library/stm32f4xx_flash.c ****   */
1356:./Library/stm32f4xx_flash.c **** uint16_t FLASH_OB_GetWRP1(void)
1357:./Library/stm32f4xx_flash.c **** {
 565              		.loc 1 1357 1 is_stmt 1 view -0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569              		@ link register save eliminated.
1358:./Library/stm32f4xx_flash.c ****   /* Return the FLASH write protection Register value */
1359:./Library/stm32f4xx_flash.c ****   return (*(__IO uint16_t *)(OPTCR1_BYTE2_ADDRESS));
 570              		.loc 1 1359 3 view .LVU111
 571              		.loc 1 1359 11 is_stmt 0 view .LVU112
 572 0000 014B     		ldr	r3, .L56
 573 0002 588B     		ldrh	r0, [r3, #26]
1360:./Library/stm32f4xx_flash.c **** }
 574              		.loc 1 1360 1 view .LVU113
 575 0004 80B2     		uxth	r0, r0
 576 0006 7047     		bx	lr
 577              	.L57:
 578              		.align	2
 579              	.L56:
 580 0008 003C0240 		.word	1073888256
 581              		.cfi_endproc
 582              	.LFE153:
 584              		.section	.text.FLASH_OB_GetPCROP,"ax",%progbits
 585              		.align	1
 586              		.global	FLASH_OB_GetPCROP
 587              		.syntax unified
 588              		.thumb
 589              		.thumb_func
 591              	FLASH_OB_GetPCROP:
 592              	.LFB154:
1361:./Library/stm32f4xx_flash.c **** 
1362:./Library/stm32f4xx_flash.c **** /**
1363:./Library/stm32f4xx_flash.c ****   * @brief  Returns the FLASH PC Read/Write Protection Option Bytes value.
1364:./Library/stm32f4xx_flash.c ****   *   
1365:./Library/stm32f4xx_flash.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices and STM32F401xx/411xE devi
1366:./Library/stm32f4xx_flash.c ****   *   
1367:./Library/stm32f4xx_flash.c ****   * @param  None
1368:./Library/stm32f4xx_flash.c ****   * @retval The FLASH PC Read/Write Protection Option Bytes value
1369:./Library/stm32f4xx_flash.c ****   */
1370:./Library/stm32f4xx_flash.c **** uint16_t FLASH_OB_GetPCROP(void)
1371:./Library/stm32f4xx_flash.c **** {
 593              		.loc 1 1371 1 is_stmt 1 view -0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 0
 596              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccwx2lab.s 			page 35


 597              		@ link register save eliminated.
1372:./Library/stm32f4xx_flash.c ****   /* Return the FLASH PC Read/write protection Register value */
1373:./Library/stm32f4xx_flash.c ****   return (*(__IO uint16_t *)(OPTCR_BYTE2_ADDRESS));
 598              		.loc 1 1373 3 view .LVU115
 599              		.loc 1 1373 11 is_stmt 0 view .LVU116
 600 0000 014B     		ldr	r3, .L59
 601 0002 D88A     		ldrh	r0, [r3, #22]
1374:./Library/stm32f4xx_flash.c **** }
 602              		.loc 1 1374 1 view .LVU117
 603 0004 80B2     		uxth	r0, r0
 604 0006 7047     		bx	lr
 605              	.L60:
 606              		.align	2
 607              	.L59:
 608 0008 003C0240 		.word	1073888256
 609              		.cfi_endproc
 610              	.LFE154:
 612              		.section	.text.FLASH_OB_GetPCROP1,"ax",%progbits
 613              		.align	1
 614              		.global	FLASH_OB_GetPCROP1
 615              		.syntax unified
 616              		.thumb
 617              		.thumb_func
 619              	FLASH_OB_GetPCROP1:
 620              	.LFB155:
1375:./Library/stm32f4xx_flash.c **** 
1376:./Library/stm32f4xx_flash.c **** /**
1377:./Library/stm32f4xx_flash.c ****   * @brief  Returns the FLASH PC Read/Write Protection Option Bytes value.
1378:./Library/stm32f4xx_flash.c ****   *   
1379:./Library/stm32f4xx_flash.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices. 
1380:./Library/stm32f4xx_flash.c ****   *     
1381:./Library/stm32f4xx_flash.c ****   * @param  None
1382:./Library/stm32f4xx_flash.c ****   * @retval The FLASH PC Read/Write Protection Option Bytes value
1383:./Library/stm32f4xx_flash.c ****   */
1384:./Library/stm32f4xx_flash.c **** uint16_t FLASH_OB_GetPCROP1(void)
1385:./Library/stm32f4xx_flash.c **** {
 621              		.loc 1 1385 1 is_stmt 1 view -0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 0
 624              		@ frame_needed = 0, uses_anonymous_args = 0
 625              		@ link register save eliminated.
1386:./Library/stm32f4xx_flash.c ****   /* Return the FLASH write protection Register value */
1387:./Library/stm32f4xx_flash.c ****   return (*(__IO uint16_t *)(OPTCR1_BYTE2_ADDRESS));
 626              		.loc 1 1387 3 view .LVU119
 627              		.loc 1 1387 11 is_stmt 0 view .LVU120
 628 0000 014B     		ldr	r3, .L62
 629 0002 588B     		ldrh	r0, [r3, #26]
1388:./Library/stm32f4xx_flash.c **** }
 630              		.loc 1 1388 1 view .LVU121
 631 0004 80B2     		uxth	r0, r0
 632 0006 7047     		bx	lr
 633              	.L63:
 634              		.align	2
 635              	.L62:
 636 0008 003C0240 		.word	1073888256
 637              		.cfi_endproc
 638              	.LFE155:
ARM GAS  /tmp/ccwx2lab.s 			page 36


 640              		.section	.text.FLASH_OB_GetRDP,"ax",%progbits
 641              		.align	1
 642              		.global	FLASH_OB_GetRDP
 643              		.syntax unified
 644              		.thumb
 645              		.thumb_func
 647              	FLASH_OB_GetRDP:
 648              	.LFB156:
1389:./Library/stm32f4xx_flash.c **** 
1390:./Library/stm32f4xx_flash.c **** /**
1391:./Library/stm32f4xx_flash.c ****   * @brief  Returns the FLASH Read Protection level.
1392:./Library/stm32f4xx_flash.c ****   * @param  None
1393:./Library/stm32f4xx_flash.c ****   * @retval FLASH ReadOut Protection Status:
1394:./Library/stm32f4xx_flash.c ****   *           - SET, when OB_RDP_Level_1 or OB_RDP_Level_2 is set
1395:./Library/stm32f4xx_flash.c ****   *           - RESET, when OB_RDP_Level_0 is set
1396:./Library/stm32f4xx_flash.c ****   */
1397:./Library/stm32f4xx_flash.c **** FlagStatus FLASH_OB_GetRDP(void)
1398:./Library/stm32f4xx_flash.c **** {
 649              		.loc 1 1398 1 is_stmt 1 view -0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 0
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 653              		@ link register save eliminated.
1399:./Library/stm32f4xx_flash.c ****   FlagStatus readstatus = RESET;
 654              		.loc 1 1399 3 view .LVU123
 655              	.LVL10:
1400:./Library/stm32f4xx_flash.c **** 
1401:./Library/stm32f4xx_flash.c ****   if ((*(__IO uint8_t*)(OPTCR_BYTE1_ADDRESS) != (uint8_t)OB_RDP_Level_0))
 656              		.loc 1 1401 3 view .LVU124
 657              		.loc 1 1401 8 is_stmt 0 view .LVU125
 658 0000 044B     		ldr	r3, .L67
 659 0002 5B7D     		ldrb	r3, [r3, #21]	@ zero_extendqisi2
 660 0004 DBB2     		uxtb	r3, r3
 661              		.loc 1 1401 6 view .LVU126
 662 0006 AA2B     		cmp	r3, #170
 663 0008 01D0     		beq	.L66
1402:./Library/stm32f4xx_flash.c ****   {
1403:./Library/stm32f4xx_flash.c ****     readstatus = SET;
 664              		.loc 1 1403 16 view .LVU127
 665 000a 0120     		movs	r0, #1
 666 000c 7047     		bx	lr
 667              	.L66:
1404:./Library/stm32f4xx_flash.c ****   }
1405:./Library/stm32f4xx_flash.c ****   else
1406:./Library/stm32f4xx_flash.c ****   {
1407:./Library/stm32f4xx_flash.c ****     readstatus = RESET;
 668              		.loc 1 1407 16 view .LVU128
 669 000e 0020     		movs	r0, #0
 670              	.LVL11:
1408:./Library/stm32f4xx_flash.c ****   }
1409:./Library/stm32f4xx_flash.c ****   return readstatus;
 671              		.loc 1 1409 3 is_stmt 1 view .LVU129
1410:./Library/stm32f4xx_flash.c **** }
 672              		.loc 1 1410 1 is_stmt 0 view .LVU130
 673 0010 7047     		bx	lr
 674              	.L68:
 675 0012 00BF     		.align	2
ARM GAS  /tmp/ccwx2lab.s 			page 37


 676              	.L67:
 677 0014 003C0240 		.word	1073888256
 678              		.cfi_endproc
 679              	.LFE156:
 681              		.section	.text.FLASH_OB_GetBOR,"ax",%progbits
 682              		.align	1
 683              		.global	FLASH_OB_GetBOR
 684              		.syntax unified
 685              		.thumb
 686              		.thumb_func
 688              	FLASH_OB_GetBOR:
 689              	.LFB157:
1411:./Library/stm32f4xx_flash.c **** 
1412:./Library/stm32f4xx_flash.c **** /**
1413:./Library/stm32f4xx_flash.c ****   * @brief  Returns the FLASH BOR level.
1414:./Library/stm32f4xx_flash.c ****   * @param  None
1415:./Library/stm32f4xx_flash.c ****   * @retval The FLASH BOR level:
1416:./Library/stm32f4xx_flash.c ****   *           - OB_BOR_LEVEL3: Supply voltage ranges from 2.7 to 3.6 V
1417:./Library/stm32f4xx_flash.c ****   *           - OB_BOR_LEVEL2: Supply voltage ranges from 2.4 to 2.7 V
1418:./Library/stm32f4xx_flash.c ****   *           - OB_BOR_LEVEL1: Supply voltage ranges from 2.1 to 2.4 V
1419:./Library/stm32f4xx_flash.c ****   *           - OB_BOR_OFF   : Supply voltage ranges from 1.62 to 2.1 V  
1420:./Library/stm32f4xx_flash.c ****   */
1421:./Library/stm32f4xx_flash.c **** uint8_t FLASH_OB_GetBOR(void)
1422:./Library/stm32f4xx_flash.c **** {
 690              		.loc 1 1422 1 is_stmt 1 view -0
 691              		.cfi_startproc
 692              		@ args = 0, pretend = 0, frame = 0
 693              		@ frame_needed = 0, uses_anonymous_args = 0
 694              		@ link register save eliminated.
1423:./Library/stm32f4xx_flash.c ****   /* Return the FLASH BOR level */
1424:./Library/stm32f4xx_flash.c ****   return (uint8_t)(*(__IO uint8_t *)(OPTCR_BYTE0_ADDRESS) & (uint8_t)0x0C);
 695              		.loc 1 1424 3 view .LVU132
 696              		.loc 1 1424 10 is_stmt 0 view .LVU133
 697 0000 024B     		ldr	r3, .L70
 698 0002 187D     		ldrb	r0, [r3, #20]	@ zero_extendqisi2
1425:./Library/stm32f4xx_flash.c **** }
 699              		.loc 1 1425 1 view .LVU134
 700 0004 00F00C00 		and	r0, r0, #12
 701 0008 7047     		bx	lr
 702              	.L71:
 703 000a 00BF     		.align	2
 704              	.L70:
 705 000c 003C0240 		.word	1073888256
 706              		.cfi_endproc
 707              	.LFE157:
 709              		.section	.text.FLASH_ITConfig,"ax",%progbits
 710              		.align	1
 711              		.global	FLASH_ITConfig
 712              		.syntax unified
 713              		.thumb
 714              		.thumb_func
 716              	FLASH_ITConfig:
 717              	.LVL12:
 718              	.LFB158:
1426:./Library/stm32f4xx_flash.c **** 
1427:./Library/stm32f4xx_flash.c **** /**
1428:./Library/stm32f4xx_flash.c ****   * @}
ARM GAS  /tmp/ccwx2lab.s 			page 38


1429:./Library/stm32f4xx_flash.c ****   */
1430:./Library/stm32f4xx_flash.c **** 
1431:./Library/stm32f4xx_flash.c **** /** @defgroup FLASH_Group4 Interrupts and flags management functions
1432:./Library/stm32f4xx_flash.c ****  *  @brief   Interrupts and flags management functions
1433:./Library/stm32f4xx_flash.c ****  *
1434:./Library/stm32f4xx_flash.c **** @verbatim   
1435:./Library/stm32f4xx_flash.c ****  ===============================================================================
1436:./Library/stm32f4xx_flash.c ****               ##### Interrupts and flags management functions #####
1437:./Library/stm32f4xx_flash.c ****  ===============================================================================  
1438:./Library/stm32f4xx_flash.c **** @endverbatim
1439:./Library/stm32f4xx_flash.c ****   * @{
1440:./Library/stm32f4xx_flash.c ****   */
1441:./Library/stm32f4xx_flash.c **** 
1442:./Library/stm32f4xx_flash.c **** /**
1443:./Library/stm32f4xx_flash.c ****   * @brief  Enables or disables the specified FLASH interrupts.
1444:./Library/stm32f4xx_flash.c ****   * @param  FLASH_IT: specifies the FLASH interrupt sources to be enabled or disabled.
1445:./Library/stm32f4xx_flash.c ****   *          This parameter can be any combination of the following values:
1446:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_IT_ERR: FLASH Error Interrupt
1447:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_IT_EOP: FLASH end of operation Interrupt
1448:./Library/stm32f4xx_flash.c ****   * @retval None 
1449:./Library/stm32f4xx_flash.c ****   */
1450:./Library/stm32f4xx_flash.c **** void FLASH_ITConfig(uint32_t FLASH_IT, FunctionalState NewState)
1451:./Library/stm32f4xx_flash.c **** {
 719              		.loc 1 1451 1 is_stmt 1 view -0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 0
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 723              		@ link register save eliminated.
1452:./Library/stm32f4xx_flash.c ****   /* Check the parameters */
1453:./Library/stm32f4xx_flash.c ****   assert_param(IS_FLASH_IT(FLASH_IT)); 
 724              		.loc 1 1453 3 view .LVU136
1454:./Library/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 725              		.loc 1 1454 3 view .LVU137
1455:./Library/stm32f4xx_flash.c **** 
1456:./Library/stm32f4xx_flash.c ****   if(NewState != DISABLE)
 726              		.loc 1 1456 3 view .LVU138
 727              		.loc 1 1456 5 is_stmt 0 view .LVU139
 728 0000 21B1     		cbz	r1, .L73
1457:./Library/stm32f4xx_flash.c ****   {
1458:./Library/stm32f4xx_flash.c ****     /* Enable the interrupt sources */
1459:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_IT;
 729              		.loc 1 1459 5 is_stmt 1 view .LVU140
 730              		.loc 1 1459 10 is_stmt 0 view .LVU141
 731 0002 054A     		ldr	r2, .L75
 732 0004 1369     		ldr	r3, [r2, #16]
 733              		.loc 1 1459 15 view .LVU142
 734 0006 0343     		orrs	r3, r3, r0
 735 0008 1361     		str	r3, [r2, #16]
 736 000a 7047     		bx	lr
 737              	.L73:
1460:./Library/stm32f4xx_flash.c ****   }
1461:./Library/stm32f4xx_flash.c ****   else
1462:./Library/stm32f4xx_flash.c ****   {
1463:./Library/stm32f4xx_flash.c ****     /* Disable the interrupt sources */
1464:./Library/stm32f4xx_flash.c ****     FLASH->CR &= ~(uint32_t)FLASH_IT;
 738              		.loc 1 1464 5 is_stmt 1 view .LVU143
 739              		.loc 1 1464 10 is_stmt 0 view .LVU144
ARM GAS  /tmp/ccwx2lab.s 			page 39


 740 000c 024A     		ldr	r2, .L75
 741 000e 1369     		ldr	r3, [r2, #16]
 742              		.loc 1 1464 15 view .LVU145
 743 0010 23EA0003 		bic	r3, r3, r0
 744 0014 1361     		str	r3, [r2, #16]
1465:./Library/stm32f4xx_flash.c ****   }
1466:./Library/stm32f4xx_flash.c **** }
 745              		.loc 1 1466 1 view .LVU146
 746 0016 7047     		bx	lr
 747              	.L76:
 748              		.align	2
 749              	.L75:
 750 0018 003C0240 		.word	1073888256
 751              		.cfi_endproc
 752              	.LFE158:
 754              		.section	.text.FLASH_GetFlagStatus,"ax",%progbits
 755              		.align	1
 756              		.global	FLASH_GetFlagStatus
 757              		.syntax unified
 758              		.thumb
 759              		.thumb_func
 761              	FLASH_GetFlagStatus:
 762              	.LVL13:
 763              	.LFB159:
1467:./Library/stm32f4xx_flash.c **** 
1468:./Library/stm32f4xx_flash.c **** /**
1469:./Library/stm32f4xx_flash.c ****   * @brief  Checks whether the specified FLASH flag is set or not.
1470:./Library/stm32f4xx_flash.c ****   * @param  FLASH_FLAG: specifies the FLASH flag to check.
1471:./Library/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
1472:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_EOP: FLASH End of Operation flag 
1473:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_OPERR: FLASH operation Error flag 
1474:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_WRPERR: FLASH Write protected error flag 
1475:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_PGAERR: FLASH Programming Alignment error flag
1476:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_PGPERR: FLASH Programming Parallelism error flag
1477:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_PGSERR: FLASH Programming Sequence error flag
1478:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_RDERR: FLASH (PCROP) Read Protection error flag (STM32F42xx/43xxx an
1479:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_BSY: FLASH Busy flag
1480:./Library/stm32f4xx_flash.c ****   * @retval The new state of FLASH_FLAG (SET or RESET).
1481:./Library/stm32f4xx_flash.c ****   */
1482:./Library/stm32f4xx_flash.c **** FlagStatus FLASH_GetFlagStatus(uint32_t FLASH_FLAG)
1483:./Library/stm32f4xx_flash.c **** {
 764              		.loc 1 1483 1 is_stmt 1 view -0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 0
 767              		@ frame_needed = 0, uses_anonymous_args = 0
 768              		@ link register save eliminated.
1484:./Library/stm32f4xx_flash.c ****   FlagStatus bitstatus = RESET;
 769              		.loc 1 1484 3 view .LVU148
1485:./Library/stm32f4xx_flash.c ****   /* Check the parameters */
1486:./Library/stm32f4xx_flash.c ****   assert_param(IS_FLASH_GET_FLAG(FLASH_FLAG));
 770              		.loc 1 1486 3 view .LVU149
1487:./Library/stm32f4xx_flash.c **** 
1488:./Library/stm32f4xx_flash.c ****   if((FLASH->SR & FLASH_FLAG) != (uint32_t)RESET)
 771              		.loc 1 1488 3 view .LVU150
 772              		.loc 1 1488 12 is_stmt 0 view .LVU151
 773 0000 034B     		ldr	r3, .L80
 774 0002 DB68     		ldr	r3, [r3, #12]
ARM GAS  /tmp/ccwx2lab.s 			page 40


 775              		.loc 1 1488 5 view .LVU152
 776 0004 0342     		tst	r3, r0
 777 0006 01D0     		beq	.L79
1489:./Library/stm32f4xx_flash.c ****   {
1490:./Library/stm32f4xx_flash.c ****     bitstatus = SET;
 778              		.loc 1 1490 15 view .LVU153
 779 0008 0120     		movs	r0, #1
 780              	.LVL14:
 781              		.loc 1 1490 15 view .LVU154
 782 000a 7047     		bx	lr
 783              	.LVL15:
 784              	.L79:
1491:./Library/stm32f4xx_flash.c ****   }
1492:./Library/stm32f4xx_flash.c ****   else
1493:./Library/stm32f4xx_flash.c ****   {
1494:./Library/stm32f4xx_flash.c ****     bitstatus = RESET;
 785              		.loc 1 1494 15 view .LVU155
 786 000c 0020     		movs	r0, #0
 787              	.LVL16:
1495:./Library/stm32f4xx_flash.c ****   }
1496:./Library/stm32f4xx_flash.c ****   /* Return the new state of FLASH_FLAG (SET or RESET) */
1497:./Library/stm32f4xx_flash.c ****   return bitstatus; 
 788              		.loc 1 1497 3 is_stmt 1 view .LVU156
1498:./Library/stm32f4xx_flash.c **** }
 789              		.loc 1 1498 1 is_stmt 0 view .LVU157
 790 000e 7047     		bx	lr
 791              	.L81:
 792              		.align	2
 793              	.L80:
 794 0010 003C0240 		.word	1073888256
 795              		.cfi_endproc
 796              	.LFE159:
 798              		.section	.text.FLASH_ClearFlag,"ax",%progbits
 799              		.align	1
 800              		.global	FLASH_ClearFlag
 801              		.syntax unified
 802              		.thumb
 803              		.thumb_func
 805              	FLASH_ClearFlag:
 806              	.LVL17:
 807              	.LFB160:
1499:./Library/stm32f4xx_flash.c **** 
1500:./Library/stm32f4xx_flash.c **** /**
1501:./Library/stm32f4xx_flash.c ****   * @brief  Clears the FLASH's pending flags.
1502:./Library/stm32f4xx_flash.c ****   * @param  FLASH_FLAG: specifies the FLASH flags to clear.
1503:./Library/stm32f4xx_flash.c ****   *          This parameter can be any combination of the following values:
1504:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_EOP: FLASH End of Operation flag 
1505:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_OPERR: FLASH operation Error flag 
1506:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_WRPERR: FLASH Write protected error flag 
1507:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_PGAERR: FLASH Programming Alignment error flag 
1508:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_PGPERR: FLASH Programming Parallelism error flag
1509:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_PGSERR: FLASH Programming Sequence error flag
1510:./Library/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_RDERR: FLASH Read Protection error flag (STM32F42xx/43xxx and STM32F
1511:./Library/stm32f4xx_flash.c ****   * @retval None
1512:./Library/stm32f4xx_flash.c ****   */
1513:./Library/stm32f4xx_flash.c **** void FLASH_ClearFlag(uint32_t FLASH_FLAG)
1514:./Library/stm32f4xx_flash.c **** {
ARM GAS  /tmp/ccwx2lab.s 			page 41


 808              		.loc 1 1514 1 is_stmt 1 view -0
 809              		.cfi_startproc
 810              		@ args = 0, pretend = 0, frame = 0
 811              		@ frame_needed = 0, uses_anonymous_args = 0
 812              		@ link register save eliminated.
1515:./Library/stm32f4xx_flash.c ****   /* Check the parameters */
1516:./Library/stm32f4xx_flash.c ****   assert_param(IS_FLASH_CLEAR_FLAG(FLASH_FLAG));
 813              		.loc 1 1516 3 view .LVU159
1517:./Library/stm32f4xx_flash.c ****   
1518:./Library/stm32f4xx_flash.c ****   /* Clear the flags */
1519:./Library/stm32f4xx_flash.c ****   FLASH->SR = FLASH_FLAG;
 814              		.loc 1 1519 3 view .LVU160
 815              		.loc 1 1519 13 is_stmt 0 view .LVU161
 816 0000 014B     		ldr	r3, .L83
 817 0002 D860     		str	r0, [r3, #12]
1520:./Library/stm32f4xx_flash.c **** }
 818              		.loc 1 1520 1 view .LVU162
 819 0004 7047     		bx	lr
 820              	.L84:
 821 0006 00BF     		.align	2
 822              	.L83:
 823 0008 003C0240 		.word	1073888256
 824              		.cfi_endproc
 825              	.LFE160:
 827              		.section	.text.FLASH_GetStatus,"ax",%progbits
 828              		.align	1
 829              		.global	FLASH_GetStatus
 830              		.syntax unified
 831              		.thumb
 832              		.thumb_func
 834              	FLASH_GetStatus:
 835              	.LFB161:
1521:./Library/stm32f4xx_flash.c **** 
1522:./Library/stm32f4xx_flash.c **** /**
1523:./Library/stm32f4xx_flash.c ****   * @brief  Returns the FLASH Status.
1524:./Library/stm32f4xx_flash.c ****   * @param  None
1525:./Library/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
1526:./Library/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_RD, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
1527:./Library/stm32f4xx_flash.c ****   */
1528:./Library/stm32f4xx_flash.c **** FLASH_Status FLASH_GetStatus(void)
1529:./Library/stm32f4xx_flash.c **** {
 836              		.loc 1 1529 1 is_stmt 1 view -0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 0
 839              		@ frame_needed = 0, uses_anonymous_args = 0
 840              		@ link register save eliminated.
1530:./Library/stm32f4xx_flash.c ****   FLASH_Status flashstatus = FLASH_COMPLETE;
 841              		.loc 1 1530 3 view .LVU164
 842              	.LVL18:
1531:./Library/stm32f4xx_flash.c ****   
1532:./Library/stm32f4xx_flash.c ****   if((FLASH->SR & FLASH_FLAG_BSY) == FLASH_FLAG_BSY) 
 843              		.loc 1 1532 3 view .LVU165
 844              		.loc 1 1532 12 is_stmt 0 view .LVU166
 845 0000 124B     		ldr	r3, .L92
 846 0002 DB68     		ldr	r3, [r3, #12]
 847              		.loc 1 1532 5 view .LVU167
 848 0004 13F4803F 		tst	r3, #65536
ARM GAS  /tmp/ccwx2lab.s 			page 42


 849 0008 15D1     		bne	.L87
1533:./Library/stm32f4xx_flash.c ****   {
1534:./Library/stm32f4xx_flash.c ****     flashstatus = FLASH_BUSY;
1535:./Library/stm32f4xx_flash.c ****   }
1536:./Library/stm32f4xx_flash.c ****   else 
1537:./Library/stm32f4xx_flash.c ****   {  
1538:./Library/stm32f4xx_flash.c ****     if((FLASH->SR & FLASH_FLAG_WRPERR) != (uint32_t)0x00)
 850              		.loc 1 1538 5 is_stmt 1 view .LVU168
 851              		.loc 1 1538 14 is_stmt 0 view .LVU169
 852 000a 104B     		ldr	r3, .L92
 853 000c DB68     		ldr	r3, [r3, #12]
 854              		.loc 1 1538 7 view .LVU170
 855 000e 13F0100F 		tst	r3, #16
 856 0012 12D1     		bne	.L88
1539:./Library/stm32f4xx_flash.c ****     { 
1540:./Library/stm32f4xx_flash.c ****       flashstatus = FLASH_ERROR_WRP;
1541:./Library/stm32f4xx_flash.c ****     }
1542:./Library/stm32f4xx_flash.c ****     else
1543:./Library/stm32f4xx_flash.c ****     {
1544:./Library/stm32f4xx_flash.c ****       if((FLASH->SR & FLASH_FLAG_RDERR) != (uint32_t)0x00)
 857              		.loc 1 1544 7 is_stmt 1 view .LVU171
 858              		.loc 1 1544 16 is_stmt 0 view .LVU172
 859 0014 0D4B     		ldr	r3, .L92
 860 0016 DB68     		ldr	r3, [r3, #12]
 861              		.loc 1 1544 9 view .LVU173
 862 0018 13F4807F 		tst	r3, #256
 863 001c 0FD1     		bne	.L89
1545:./Library/stm32f4xx_flash.c ****       { 
1546:./Library/stm32f4xx_flash.c ****         flashstatus = FLASH_ERROR_RD;
1547:./Library/stm32f4xx_flash.c ****       } 
1548:./Library/stm32f4xx_flash.c ****       else 
1549:./Library/stm32f4xx_flash.c ****       {
1550:./Library/stm32f4xx_flash.c ****         if((FLASH->SR & (uint32_t)0xE0) != (uint32_t)0x00)
 864              		.loc 1 1550 9 is_stmt 1 view .LVU174
 865              		.loc 1 1550 18 is_stmt 0 view .LVU175
 866 001e 0B4B     		ldr	r3, .L92
 867 0020 DB68     		ldr	r3, [r3, #12]
 868              		.loc 1 1550 11 view .LVU176
 869 0022 13F0E00F 		tst	r3, #224
 870 0026 0CD1     		bne	.L90
1551:./Library/stm32f4xx_flash.c ****         {
1552:./Library/stm32f4xx_flash.c ****           flashstatus = FLASH_ERROR_PROGRAM; 
1553:./Library/stm32f4xx_flash.c ****         }
1554:./Library/stm32f4xx_flash.c ****         else
1555:./Library/stm32f4xx_flash.c ****         {
1556:./Library/stm32f4xx_flash.c ****           if((FLASH->SR & FLASH_FLAG_OPERR) != (uint32_t)0x00)
 871              		.loc 1 1556 11 is_stmt 1 view .LVU177
 872              		.loc 1 1556 20 is_stmt 0 view .LVU178
 873 0028 084B     		ldr	r3, .L92
 874 002a DB68     		ldr	r3, [r3, #12]
 875              		.loc 1 1556 13 view .LVU179
 876 002c 13F0020F 		tst	r3, #2
 877 0030 09D0     		beq	.L91
1557:./Library/stm32f4xx_flash.c ****           {
1558:./Library/stm32f4xx_flash.c ****             flashstatus = FLASH_ERROR_OPERATION;
 878              		.loc 1 1558 25 view .LVU180
 879 0032 0820     		movs	r0, #8
ARM GAS  /tmp/ccwx2lab.s 			page 43


 880 0034 7047     		bx	lr
 881              	.L87:
1534:./Library/stm32f4xx_flash.c ****   }
 882              		.loc 1 1534 17 view .LVU181
 883 0036 0120     		movs	r0, #1
 884 0038 7047     		bx	lr
 885              	.L88:
1540:./Library/stm32f4xx_flash.c ****     }
 886              		.loc 1 1540 19 view .LVU182
 887 003a 0620     		movs	r0, #6
 888 003c 7047     		bx	lr
 889              	.L89:
1546:./Library/stm32f4xx_flash.c ****       } 
 890              		.loc 1 1546 21 view .LVU183
 891 003e 0220     		movs	r0, #2
 892 0040 7047     		bx	lr
 893              	.L90:
1552:./Library/stm32f4xx_flash.c ****         }
 894              		.loc 1 1552 23 view .LVU184
 895 0042 0720     		movs	r0, #7
 896 0044 7047     		bx	lr
 897              	.L91:
1559:./Library/stm32f4xx_flash.c ****           }
1560:./Library/stm32f4xx_flash.c ****           else
1561:./Library/stm32f4xx_flash.c ****           {
1562:./Library/stm32f4xx_flash.c ****             flashstatus = FLASH_COMPLETE;
 898              		.loc 1 1562 25 view .LVU185
 899 0046 0920     		movs	r0, #9
 900              	.LVL19:
1563:./Library/stm32f4xx_flash.c ****           }
1564:./Library/stm32f4xx_flash.c ****         }
1565:./Library/stm32f4xx_flash.c ****       }
1566:./Library/stm32f4xx_flash.c ****     }
1567:./Library/stm32f4xx_flash.c ****   }
1568:./Library/stm32f4xx_flash.c ****   /* Return the FLASH Status */
1569:./Library/stm32f4xx_flash.c ****   return flashstatus;
 901              		.loc 1 1569 3 is_stmt 1 view .LVU186
1570:./Library/stm32f4xx_flash.c **** }
 902              		.loc 1 1570 1 is_stmt 0 view .LVU187
 903 0048 7047     		bx	lr
 904              	.L93:
 905 004a 00BF     		.align	2
 906              	.L92:
 907 004c 003C0240 		.word	1073888256
 908              		.cfi_endproc
 909              	.LFE161:
 911              		.section	.text.FLASH_WaitForLastOperation,"ax",%progbits
 912              		.align	1
 913              		.global	FLASH_WaitForLastOperation
 914              		.syntax unified
 915              		.thumb
 916              		.thumb_func
 918              	FLASH_WaitForLastOperation:
 919              	.LFB162:
1571:./Library/stm32f4xx_flash.c **** 
1572:./Library/stm32f4xx_flash.c **** /**
1573:./Library/stm32f4xx_flash.c ****   * @brief  Waits for a FLASH operation to complete.
ARM GAS  /tmp/ccwx2lab.s 			page 44


1574:./Library/stm32f4xx_flash.c ****   * @param  None
1575:./Library/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
1576:./Library/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
1577:./Library/stm32f4xx_flash.c ****   */
1578:./Library/stm32f4xx_flash.c **** FLASH_Status FLASH_WaitForLastOperation(void)
1579:./Library/stm32f4xx_flash.c **** { 
 920              		.loc 1 1579 1 is_stmt 1 view -0
 921              		.cfi_startproc
 922              		@ args = 0, pretend = 0, frame = 8
 923              		@ frame_needed = 0, uses_anonymous_args = 0
 924 0000 00B5     		push	{lr}
 925              	.LCFI0:
 926              		.cfi_def_cfa_offset 4
 927              		.cfi_offset 14, -4
 928 0002 83B0     		sub	sp, sp, #12
 929              	.LCFI1:
 930              		.cfi_def_cfa_offset 16
1580:./Library/stm32f4xx_flash.c ****   __IO FLASH_Status status = FLASH_COMPLETE;
 931              		.loc 1 1580 3 view .LVU189
 932              		.loc 1 1580 21 is_stmt 0 view .LVU190
 933 0004 0923     		movs	r3, #9
 934 0006 8DF80730 		strb	r3, [sp, #7]
1581:./Library/stm32f4xx_flash.c ****    
1582:./Library/stm32f4xx_flash.c ****   /* Check for the FLASH Status */
1583:./Library/stm32f4xx_flash.c ****   status = FLASH_GetStatus();
 935              		.loc 1 1583 3 is_stmt 1 view .LVU191
 936              		.loc 1 1583 12 is_stmt 0 view .LVU192
 937 000a FFF7FEFF 		bl	FLASH_GetStatus
 938              	.LVL20:
 939              		.loc 1 1583 10 view .LVU193
 940 000e 8DF80700 		strb	r0, [sp, #7]
1584:./Library/stm32f4xx_flash.c **** 
1585:./Library/stm32f4xx_flash.c ****   /* Wait for the FLASH operation to complete by polling on BUSY flag to be reset.
1586:./Library/stm32f4xx_flash.c ****      Even if the FLASH operation fails, the BUSY flag will be reset and an error
1587:./Library/stm32f4xx_flash.c ****      flag will be set */
1588:./Library/stm32f4xx_flash.c ****   while(status == FLASH_BUSY)
 941              		.loc 1 1588 3 is_stmt 1 view .LVU194
 942              		.loc 1 1588 8 is_stmt 0 view .LVU195
 943 0012 03E0     		b	.L95
 944              	.L96:
1589:./Library/stm32f4xx_flash.c ****   {
1590:./Library/stm32f4xx_flash.c ****     status = FLASH_GetStatus();
 945              		.loc 1 1590 5 is_stmt 1 view .LVU196
 946              		.loc 1 1590 14 is_stmt 0 view .LVU197
 947 0014 FFF7FEFF 		bl	FLASH_GetStatus
 948              	.LVL21:
 949              		.loc 1 1590 12 view .LVU198
 950 0018 8DF80700 		strb	r0, [sp, #7]
 951              	.L95:
1588:./Library/stm32f4xx_flash.c ****   {
 952              		.loc 1 1588 16 is_stmt 1 view .LVU199
 953 001c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 954 0020 DBB2     		uxtb	r3, r3
 955 0022 012B     		cmp	r3, #1
 956 0024 F6D0     		beq	.L96
1591:./Library/stm32f4xx_flash.c ****   }
1592:./Library/stm32f4xx_flash.c ****   /* Return the operation status */
ARM GAS  /tmp/ccwx2lab.s 			page 45


1593:./Library/stm32f4xx_flash.c ****   return status;
 957              		.loc 1 1593 3 view .LVU200
 958              		.loc 1 1593 10 is_stmt 0 view .LVU201
 959 0026 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
1594:./Library/stm32f4xx_flash.c **** }
 960              		.loc 1 1594 1 view .LVU202
 961 002a 03B0     		add	sp, sp, #12
 962              	.LCFI2:
 963              		.cfi_def_cfa_offset 4
 964              		@ sp needed
 965 002c 5DF804FB 		ldr	pc, [sp], #4
 966              		.cfi_endproc
 967              	.LFE162:
 969              		.section	.text.FLASH_EraseSector,"ax",%progbits
 970              		.align	1
 971              		.global	FLASH_EraseSector
 972              		.syntax unified
 973              		.thumb
 974              		.thumb_func
 976              	FLASH_EraseSector:
 977              	.LVL22:
 978              	.LFB131:
 469:./Library/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 979              		.loc 1 469 1 is_stmt 1 view -0
 980              		.cfi_startproc
 981              		@ args = 0, pretend = 0, frame = 0
 982              		@ frame_needed = 0, uses_anonymous_args = 0
 469:./Library/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 983              		.loc 1 469 1 is_stmt 0 view .LVU204
 984 0000 70B5     		push	{r4, r5, r6, lr}
 985              	.LCFI3:
 986              		.cfi_def_cfa_offset 16
 987              		.cfi_offset 4, -16
 988              		.cfi_offset 5, -12
 989              		.cfi_offset 6, -8
 990              		.cfi_offset 14, -4
 991 0002 0446     		mov	r4, r0
 470:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 992              		.loc 1 470 3 is_stmt 1 view .LVU205
 993              	.LVL23:
 471:./Library/stm32f4xx_flash.c **** 
 994              		.loc 1 471 3 view .LVU206
 474:./Library/stm32f4xx_flash.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 995              		.loc 1 474 3 view .LVU207
 475:./Library/stm32f4xx_flash.c ****   
 996              		.loc 1 475 3 view .LVU208
 477:./Library/stm32f4xx_flash.c ****   {
 997              		.loc 1 477 3 view .LVU209
 998 0004 0129     		cmp	r1, #1
 999 0006 0BD0     		beq	.L101
 1000 0008 0229     		cmp	r1, #2
 1001 000a 0CD0     		beq	.L102
 1002 000c 31B1     		cbz	r1, .L105
 469:./Library/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 1003              		.loc 1 469 1 is_stmt 0 view .LVU210
 1004 000e 4FF44076 		mov	r6, #768
 1005              	.L99:
ARM GAS  /tmp/ccwx2lab.s 			page 46


 1006              	.LVL24:
 494:./Library/stm32f4xx_flash.c ****   
 1007              		.loc 1 494 3 is_stmt 1 view .LVU211
 494:./Library/stm32f4xx_flash.c ****   
 1008              		.loc 1 494 12 is_stmt 0 view .LVU212
 1009 0012 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1010              	.LVL25:
 496:./Library/stm32f4xx_flash.c ****   { 
 1011              		.loc 1 496 3 is_stmt 1 view .LVU213
 496:./Library/stm32f4xx_flash.c ****   { 
 1012              		.loc 1 496 5 is_stmt 0 view .LVU214
 1013 0016 0928     		cmp	r0, #9
 1014 0018 08D0     		beq	.L106
 1015              	.L100:
 513:./Library/stm32f4xx_flash.c **** }
 1016              		.loc 1 513 3 is_stmt 1 view .LVU215
 514:./Library/stm32f4xx_flash.c **** 
 1017              		.loc 1 514 1 is_stmt 0 view .LVU216
 1018 001a 70BD     		pop	{r4, r5, r6, pc}
 1019              	.LVL26:
 1020              	.L105:
 469:./Library/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 1021              		.loc 1 469 1 view .LVU217
 1022 001c 0026     		movs	r6, #0
 1023 001e F8E7     		b	.L99
 1024              	.L101:
 1025 0020 4FF48076 		mov	r6, #256
 1026 0024 F5E7     		b	.L99
 1027              	.L102:
 1028 0026 4FF40076 		mov	r6, #512
 1029 002a F2E7     		b	.L99
 1030              	.LVL27:
 1031              	.L106:
 499:./Library/stm32f4xx_flash.c ****     FLASH->CR |= tmp_psize;
 1032              		.loc 1 499 5 is_stmt 1 view .LVU218
 499:./Library/stm32f4xx_flash.c ****     FLASH->CR |= tmp_psize;
 1033              		.loc 1 499 10 is_stmt 0 view .LVU219
 1034 002c 0F4D     		ldr	r5, .L107
 1035 002e 2B69     		ldr	r3, [r5, #16]
 499:./Library/stm32f4xx_flash.c ****     FLASH->CR |= tmp_psize;
 1036              		.loc 1 499 15 view .LVU220
 1037 0030 23F44073 		bic	r3, r3, #768
 1038 0034 2B61     		str	r3, [r5, #16]
 500:./Library/stm32f4xx_flash.c ****     FLASH->CR &= SECTOR_MASK;
 1039              		.loc 1 500 5 is_stmt 1 view .LVU221
 500:./Library/stm32f4xx_flash.c ****     FLASH->CR &= SECTOR_MASK;
 1040              		.loc 1 500 10 is_stmt 0 view .LVU222
 1041 0036 2B69     		ldr	r3, [r5, #16]
 500:./Library/stm32f4xx_flash.c ****     FLASH->CR &= SECTOR_MASK;
 1042              		.loc 1 500 15 view .LVU223
 1043 0038 3343     		orrs	r3, r3, r6
 1044 003a 2B61     		str	r3, [r5, #16]
 501:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_SER | FLASH_Sector;
 1045              		.loc 1 501 5 is_stmt 1 view .LVU224
 501:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_SER | FLASH_Sector;
 1046              		.loc 1 501 10 is_stmt 0 view .LVU225
 1047 003c 2B69     		ldr	r3, [r5, #16]
ARM GAS  /tmp/ccwx2lab.s 			page 47


 501:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_SER | FLASH_Sector;
 1048              		.loc 1 501 15 view .LVU226
 1049 003e 23F0F803 		bic	r3, r3, #248
 1050 0042 2B61     		str	r3, [r5, #16]
 502:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_STRT;
 1051              		.loc 1 502 5 is_stmt 1 view .LVU227
 502:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_STRT;
 1052              		.loc 1 502 10 is_stmt 0 view .LVU228
 1053 0044 2B69     		ldr	r3, [r5, #16]
 502:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_STRT;
 1054              		.loc 1 502 15 view .LVU229
 1055 0046 2343     		orrs	r3, r3, r4
 1056 0048 43F00203 		orr	r3, r3, #2
 1057 004c 2B61     		str	r3, [r5, #16]
 503:./Library/stm32f4xx_flash.c ****     
 1058              		.loc 1 503 5 is_stmt 1 view .LVU230
 503:./Library/stm32f4xx_flash.c ****     
 1059              		.loc 1 503 10 is_stmt 0 view .LVU231
 1060 004e 2B69     		ldr	r3, [r5, #16]
 503:./Library/stm32f4xx_flash.c ****     
 1061              		.loc 1 503 15 view .LVU232
 1062 0050 43F48033 		orr	r3, r3, #65536
 1063 0054 2B61     		str	r3, [r5, #16]
 506:./Library/stm32f4xx_flash.c ****     
 1064              		.loc 1 506 5 is_stmt 1 view .LVU233
 506:./Library/stm32f4xx_flash.c ****     
 1065              		.loc 1 506 14 is_stmt 0 view .LVU234
 1066 0056 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1067              	.LVL28:
 509:./Library/stm32f4xx_flash.c ****     FLASH->CR &= SECTOR_MASK; 
 1068              		.loc 1 509 5 is_stmt 1 view .LVU235
 509:./Library/stm32f4xx_flash.c ****     FLASH->CR &= SECTOR_MASK; 
 1069              		.loc 1 509 10 is_stmt 0 view .LVU236
 1070 005a 2B69     		ldr	r3, [r5, #16]
 509:./Library/stm32f4xx_flash.c ****     FLASH->CR &= SECTOR_MASK; 
 1071              		.loc 1 509 15 view .LVU237
 1072 005c 23F00203 		bic	r3, r3, #2
 1073 0060 2B61     		str	r3, [r5, #16]
 510:./Library/stm32f4xx_flash.c ****   }
 1074              		.loc 1 510 5 is_stmt 1 view .LVU238
 510:./Library/stm32f4xx_flash.c ****   }
 1075              		.loc 1 510 10 is_stmt 0 view .LVU239
 1076 0062 2B69     		ldr	r3, [r5, #16]
 510:./Library/stm32f4xx_flash.c ****   }
 1077              		.loc 1 510 15 view .LVU240
 1078 0064 23F0F803 		bic	r3, r3, #248
 1079 0068 2B61     		str	r3, [r5, #16]
 1080 006a D6E7     		b	.L100
 1081              	.L108:
 1082              		.align	2
 1083              	.L107:
 1084 006c 003C0240 		.word	1073888256
 1085              		.cfi_endproc
 1086              	.LFE131:
 1088              		.section	.text.FLASH_EraseAllSectors,"ax",%progbits
 1089              		.align	1
 1090              		.global	FLASH_EraseAllSectors
ARM GAS  /tmp/ccwx2lab.s 			page 48


 1091              		.syntax unified
 1092              		.thumb
 1093              		.thumb_func
 1095              	FLASH_EraseAllSectors:
 1096              	.LVL29:
 1097              	.LFB132:
 537:./Library/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 1098              		.loc 1 537 1 is_stmt 1 view -0
 1099              		.cfi_startproc
 1100              		@ args = 0, pretend = 0, frame = 0
 1101              		@ frame_needed = 0, uses_anonymous_args = 0
 537:./Library/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 1102              		.loc 1 537 1 is_stmt 0 view .LVU242
 1103 0000 10B5     		push	{r4, lr}
 1104              	.LCFI4:
 1105              		.cfi_def_cfa_offset 8
 1106              		.cfi_offset 4, -8
 1107              		.cfi_offset 14, -4
 1108 0002 0446     		mov	r4, r0
 538:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1109              		.loc 1 538 3 is_stmt 1 view .LVU243
 1110              	.LVL30:
 539:./Library/stm32f4xx_flash.c ****   
 1111              		.loc 1 539 3 view .LVU244
 542:./Library/stm32f4xx_flash.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 1112              		.loc 1 542 3 view .LVU245
 542:./Library/stm32f4xx_flash.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 1113              		.loc 1 542 12 is_stmt 0 view .LVU246
 1114 0004 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1115              	.LVL31:
 543:./Library/stm32f4xx_flash.c ****   
 1116              		.loc 1 543 3 is_stmt 1 view .LVU247
 545:./Library/stm32f4xx_flash.c ****   {
 1117              		.loc 1 545 3 view .LVU248
 545:./Library/stm32f4xx_flash.c ****   {
 1118              		.loc 1 545 5 is_stmt 0 view .LVU249
 1119 0008 4CB1     		cbz	r4, .L112
 549:./Library/stm32f4xx_flash.c ****   {
 1120              		.loc 1 549 8 is_stmt 1 view .LVU250
 549:./Library/stm32f4xx_flash.c ****   {
 1121              		.loc 1 549 10 is_stmt 0 view .LVU251
 1122 000a 012C     		cmp	r4, #1
 1123 000c 0BD0     		beq	.L113
 553:./Library/stm32f4xx_flash.c ****   {
 1124              		.loc 1 553 8 is_stmt 1 view .LVU252
 553:./Library/stm32f4xx_flash.c ****   {
 1125              		.loc 1 553 10 is_stmt 0 view .LVU253
 1126 000e 022C     		cmp	r4, #2
 1127 0010 02D0     		beq	.L116
 559:./Library/stm32f4xx_flash.c ****   }  
 1128              		.loc 1 559 15 view .LVU254
 1129 0012 4FF44073 		mov	r3, #768
 1130 0016 03E0     		b	.L110
 1131              	.L116:
 555:./Library/stm32f4xx_flash.c ****   }
 1132              		.loc 1 555 15 view .LVU255
 1133 0018 4FF40073 		mov	r3, #512
ARM GAS  /tmp/ccwx2lab.s 			page 49


 1134 001c 00E0     		b	.L110
 1135              	.L112:
 547:./Library/stm32f4xx_flash.c ****   }
 1136              		.loc 1 547 16 view .LVU256
 1137 001e 0023     		movs	r3, #0
 1138              	.L110:
 1139              	.LVL32:
 561:./Library/stm32f4xx_flash.c ****   {
 1140              		.loc 1 561 3 is_stmt 1 view .LVU257
 561:./Library/stm32f4xx_flash.c ****   {
 1141              		.loc 1 561 5 is_stmt 0 view .LVU258
 1142 0020 0928     		cmp	r0, #9
 1143 0022 03D0     		beq	.L117
 1144              	.LVL33:
 1145              	.L111:
 592:./Library/stm32f4xx_flash.c **** }
 1146              		.loc 1 592 3 is_stmt 1 view .LVU259
 593:./Library/stm32f4xx_flash.c **** 
 1147              		.loc 1 593 1 is_stmt 0 view .LVU260
 1148 0024 10BD     		pop	{r4, pc}
 1149              	.LVL34:
 1150              	.L113:
 551:./Library/stm32f4xx_flash.c ****   }
 1151              		.loc 1 551 15 view .LVU261
 1152 0026 4FF48073 		mov	r3, #256
 1153 002a F9E7     		b	.L110
 1154              	.LVL35:
 1155              	.L117:
 578:./Library/stm32f4xx_flash.c ****     FLASH->CR |= tmp_psize;
 1156              		.loc 1 578 5 is_stmt 1 view .LVU262
 578:./Library/stm32f4xx_flash.c ****     FLASH->CR |= tmp_psize;
 1157              		.loc 1 578 10 is_stmt 0 view .LVU263
 1158 002c 0B4C     		ldr	r4, .L118
 1159 002e 2269     		ldr	r2, [r4, #16]
 578:./Library/stm32f4xx_flash.c ****     FLASH->CR |= tmp_psize;
 1160              		.loc 1 578 15 view .LVU264
 1161 0030 22F44072 		bic	r2, r2, #768
 1162 0034 2261     		str	r2, [r4, #16]
 579:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_MER;
 1163              		.loc 1 579 5 is_stmt 1 view .LVU265
 579:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_MER;
 1164              		.loc 1 579 10 is_stmt 0 view .LVU266
 1165 0036 2269     		ldr	r2, [r4, #16]
 579:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_MER;
 1166              		.loc 1 579 15 view .LVU267
 1167 0038 1343     		orrs	r3, r3, r2
 1168              	.LVL36:
 579:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_MER;
 1169              		.loc 1 579 15 view .LVU268
 1170 003a 2361     		str	r3, [r4, #16]
 580:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_STRT;
 1171              		.loc 1 580 5 is_stmt 1 view .LVU269
 580:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_STRT;
 1172              		.loc 1 580 10 is_stmt 0 view .LVU270
 1173 003c 2369     		ldr	r3, [r4, #16]
 580:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_STRT;
 1174              		.loc 1 580 15 view .LVU271
ARM GAS  /tmp/ccwx2lab.s 			page 50


 1175 003e 43F00403 		orr	r3, r3, #4
 1176 0042 2361     		str	r3, [r4, #16]
 581:./Library/stm32f4xx_flash.c ****     
 1177              		.loc 1 581 5 is_stmt 1 view .LVU272
 581:./Library/stm32f4xx_flash.c ****     
 1178              		.loc 1 581 10 is_stmt 0 view .LVU273
 1179 0044 2369     		ldr	r3, [r4, #16]
 581:./Library/stm32f4xx_flash.c ****     
 1180              		.loc 1 581 15 view .LVU274
 1181 0046 43F48033 		orr	r3, r3, #65536
 1182 004a 2361     		str	r3, [r4, #16]
 584:./Library/stm32f4xx_flash.c **** 
 1183              		.loc 1 584 5 is_stmt 1 view .LVU275
 584:./Library/stm32f4xx_flash.c **** 
 1184              		.loc 1 584 14 is_stmt 0 view .LVU276
 1185 004c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1186              	.LVL37:
 587:./Library/stm32f4xx_flash.c **** #endif /* STM32F40_41xxx || STM32F401xx || STM32F410xx || STM32F411xE || STM32F412xG || STM32F413_4
 1187              		.loc 1 587 5 is_stmt 1 view .LVU277
 587:./Library/stm32f4xx_flash.c **** #endif /* STM32F40_41xxx || STM32F401xx || STM32F410xx || STM32F411xE || STM32F412xG || STM32F413_4
 1188              		.loc 1 587 10 is_stmt 0 view .LVU278
 1189 0050 2369     		ldr	r3, [r4, #16]
 587:./Library/stm32f4xx_flash.c **** #endif /* STM32F40_41xxx || STM32F401xx || STM32F410xx || STM32F411xE || STM32F412xG || STM32F413_4
 1190              		.loc 1 587 15 view .LVU279
 1191 0052 23F00403 		bic	r3, r3, #4
 1192 0056 2361     		str	r3, [r4, #16]
 1193 0058 E4E7     		b	.L111
 1194              	.L119:
 1195 005a 00BF     		.align	2
 1196              	.L118:
 1197 005c 003C0240 		.word	1073888256
 1198              		.cfi_endproc
 1199              	.LFE132:
 1201              		.section	.text.FLASH_EraseAllBank1Sectors,"ax",%progbits
 1202              		.align	1
 1203              		.global	FLASH_EraseAllBank1Sectors
 1204              		.syntax unified
 1205              		.thumb
 1206              		.thumb_func
 1208              	FLASH_EraseAllBank1Sectors:
 1209              	.LVL38:
 1210              	.LFB133:
 618:./Library/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 1211              		.loc 1 618 1 is_stmt 1 view -0
 1212              		.cfi_startproc
 1213              		@ args = 0, pretend = 0, frame = 0
 1214              		@ frame_needed = 0, uses_anonymous_args = 0
 618:./Library/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 1215              		.loc 1 618 1 is_stmt 0 view .LVU281
 1216 0000 10B5     		push	{r4, lr}
 1217              	.LCFI5:
 1218              		.cfi_def_cfa_offset 8
 1219              		.cfi_offset 4, -8
 1220              		.cfi_offset 14, -4
 1221 0002 0446     		mov	r4, r0
 619:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1222              		.loc 1 619 3 is_stmt 1 view .LVU282
ARM GAS  /tmp/ccwx2lab.s 			page 51


 1223              	.LVL39:
 620:./Library/stm32f4xx_flash.c ****   
 1224              		.loc 1 620 3 view .LVU283
 623:./Library/stm32f4xx_flash.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 1225              		.loc 1 623 3 view .LVU284
 623:./Library/stm32f4xx_flash.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 1226              		.loc 1 623 12 is_stmt 0 view .LVU285
 1227 0004 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1228              	.LVL40:
 624:./Library/stm32f4xx_flash.c ****   
 1229              		.loc 1 624 3 is_stmt 1 view .LVU286
 626:./Library/stm32f4xx_flash.c ****   {
 1230              		.loc 1 626 3 view .LVU287
 626:./Library/stm32f4xx_flash.c ****   {
 1231              		.loc 1 626 5 is_stmt 0 view .LVU288
 1232 0008 4CB1     		cbz	r4, .L123
 630:./Library/stm32f4xx_flash.c ****   {
 1233              		.loc 1 630 8 is_stmt 1 view .LVU289
 630:./Library/stm32f4xx_flash.c ****   {
 1234              		.loc 1 630 10 is_stmt 0 view .LVU290
 1235 000a 012C     		cmp	r4, #1
 1236 000c 0BD0     		beq	.L124
 634:./Library/stm32f4xx_flash.c ****   {
 1237              		.loc 1 634 8 is_stmt 1 view .LVU291
 634:./Library/stm32f4xx_flash.c ****   {
 1238              		.loc 1 634 10 is_stmt 0 view .LVU292
 1239 000e 022C     		cmp	r4, #2
 1240 0010 02D0     		beq	.L127
 640:./Library/stm32f4xx_flash.c ****   }  
 1241              		.loc 1 640 15 view .LVU293
 1242 0012 4FF44073 		mov	r3, #768
 1243 0016 03E0     		b	.L121
 1244              	.L127:
 636:./Library/stm32f4xx_flash.c ****   }
 1245              		.loc 1 636 15 view .LVU294
 1246 0018 4FF40073 		mov	r3, #512
 1247 001c 00E0     		b	.L121
 1248              	.L123:
 628:./Library/stm32f4xx_flash.c ****   }
 1249              		.loc 1 628 16 view .LVU295
 1250 001e 0023     		movs	r3, #0
 1251              	.L121:
 1252              	.LVL41:
 642:./Library/stm32f4xx_flash.c ****   {
 1253              		.loc 1 642 3 is_stmt 1 view .LVU296
 642:./Library/stm32f4xx_flash.c ****   {
 1254              		.loc 1 642 5 is_stmt 0 view .LVU297
 1255 0020 0928     		cmp	r0, #9
 1256 0022 03D0     		beq	.L128
 1257              	.LVL42:
 1258              	.L122:
 658:./Library/stm32f4xx_flash.c **** }
 1259              		.loc 1 658 3 is_stmt 1 view .LVU298
 659:./Library/stm32f4xx_flash.c **** 
 1260              		.loc 1 659 1 is_stmt 0 view .LVU299
 1261 0024 10BD     		pop	{r4, pc}
 1262              	.LVL43:
ARM GAS  /tmp/ccwx2lab.s 			page 52


 1263              	.L124:
 632:./Library/stm32f4xx_flash.c ****   }
 1264              		.loc 1 632 15 view .LVU300
 1265 0026 4FF48073 		mov	r3, #256
 1266 002a F9E7     		b	.L121
 1267              	.LVL44:
 1268              	.L128:
 645:./Library/stm32f4xx_flash.c ****      FLASH->CR |= tmp_psize;
 1269              		.loc 1 645 6 is_stmt 1 view .LVU301
 645:./Library/stm32f4xx_flash.c ****      FLASH->CR |= tmp_psize;
 1270              		.loc 1 645 11 is_stmt 0 view .LVU302
 1271 002c 0B4C     		ldr	r4, .L129
 1272 002e 2269     		ldr	r2, [r4, #16]
 645:./Library/stm32f4xx_flash.c ****      FLASH->CR |= tmp_psize;
 1273              		.loc 1 645 16 view .LVU303
 1274 0030 22F44072 		bic	r2, r2, #768
 1275 0034 2261     		str	r2, [r4, #16]
 646:./Library/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_MER1;
 1276              		.loc 1 646 6 is_stmt 1 view .LVU304
 646:./Library/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_MER1;
 1277              		.loc 1 646 11 is_stmt 0 view .LVU305
 1278 0036 2269     		ldr	r2, [r4, #16]
 646:./Library/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_MER1;
 1279              		.loc 1 646 16 view .LVU306
 1280 0038 1343     		orrs	r3, r3, r2
 1281              	.LVL45:
 646:./Library/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_MER1;
 1282              		.loc 1 646 16 view .LVU307
 1283 003a 2361     		str	r3, [r4, #16]
 647:./Library/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_STRT;
 1284              		.loc 1 647 6 is_stmt 1 view .LVU308
 647:./Library/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_STRT;
 1285              		.loc 1 647 11 is_stmt 0 view .LVU309
 1286 003c 2369     		ldr	r3, [r4, #16]
 647:./Library/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_STRT;
 1287              		.loc 1 647 16 view .LVU310
 1288 003e 43F00403 		orr	r3, r3, #4
 1289 0042 2361     		str	r3, [r4, #16]
 648:./Library/stm32f4xx_flash.c ****     
 1290              		.loc 1 648 6 is_stmt 1 view .LVU311
 648:./Library/stm32f4xx_flash.c ****     
 1291              		.loc 1 648 11 is_stmt 0 view .LVU312
 1292 0044 2369     		ldr	r3, [r4, #16]
 648:./Library/stm32f4xx_flash.c ****     
 1293              		.loc 1 648 16 view .LVU313
 1294 0046 43F48033 		orr	r3, r3, #65536
 1295 004a 2361     		str	r3, [r4, #16]
 651:./Library/stm32f4xx_flash.c **** 
 1296              		.loc 1 651 5 is_stmt 1 view .LVU314
 651:./Library/stm32f4xx_flash.c **** 
 1297              		.loc 1 651 14 is_stmt 0 view .LVU315
 1298 004c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1299              	.LVL46:
 654:./Library/stm32f4xx_flash.c **** 
 1300              		.loc 1 654 5 is_stmt 1 view .LVU316
 654:./Library/stm32f4xx_flash.c **** 
 1301              		.loc 1 654 10 is_stmt 0 view .LVU317
ARM GAS  /tmp/ccwx2lab.s 			page 53


 1302 0050 2369     		ldr	r3, [r4, #16]
 654:./Library/stm32f4xx_flash.c **** 
 1303              		.loc 1 654 15 view .LVU318
 1304 0052 23F00403 		bic	r3, r3, #4
 1305 0056 2361     		str	r3, [r4, #16]
 1306 0058 E4E7     		b	.L122
 1307              	.L130:
 1308 005a 00BF     		.align	2
 1309              	.L129:
 1310 005c 003C0240 		.word	1073888256
 1311              		.cfi_endproc
 1312              	.LFE133:
 1314              		.section	.text.FLASH_EraseAllBank2Sectors,"ax",%progbits
 1315              		.align	1
 1316              		.global	FLASH_EraseAllBank2Sectors
 1317              		.syntax unified
 1318              		.thumb
 1319              		.thumb_func
 1321              	FLASH_EraseAllBank2Sectors:
 1322              	.LVL47:
 1323              	.LFB134:
 685:./Library/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 1324              		.loc 1 685 1 is_stmt 1 view -0
 1325              		.cfi_startproc
 1326              		@ args = 0, pretend = 0, frame = 0
 1327              		@ frame_needed = 0, uses_anonymous_args = 0
 685:./Library/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 1328              		.loc 1 685 1 is_stmt 0 view .LVU320
 1329 0000 10B5     		push	{r4, lr}
 1330              	.LCFI6:
 1331              		.cfi_def_cfa_offset 8
 1332              		.cfi_offset 4, -8
 1333              		.cfi_offset 14, -4
 1334 0002 0446     		mov	r4, r0
 686:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1335              		.loc 1 686 3 is_stmt 1 view .LVU321
 1336              	.LVL48:
 687:./Library/stm32f4xx_flash.c ****   
 1337              		.loc 1 687 3 view .LVU322
 690:./Library/stm32f4xx_flash.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 1338              		.loc 1 690 3 view .LVU323
 690:./Library/stm32f4xx_flash.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 1339              		.loc 1 690 12 is_stmt 0 view .LVU324
 1340 0004 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1341              	.LVL49:
 691:./Library/stm32f4xx_flash.c ****   
 1342              		.loc 1 691 3 is_stmt 1 view .LVU325
 693:./Library/stm32f4xx_flash.c ****   {
 1343              		.loc 1 693 3 view .LVU326
 693:./Library/stm32f4xx_flash.c ****   {
 1344              		.loc 1 693 5 is_stmt 0 view .LVU327
 1345 0008 4CB1     		cbz	r4, .L134
 697:./Library/stm32f4xx_flash.c ****   {
 1346              		.loc 1 697 8 is_stmt 1 view .LVU328
 697:./Library/stm32f4xx_flash.c ****   {
 1347              		.loc 1 697 10 is_stmt 0 view .LVU329
 1348 000a 012C     		cmp	r4, #1
ARM GAS  /tmp/ccwx2lab.s 			page 54


 1349 000c 0BD0     		beq	.L135
 701:./Library/stm32f4xx_flash.c ****   {
 1350              		.loc 1 701 8 is_stmt 1 view .LVU330
 701:./Library/stm32f4xx_flash.c ****   {
 1351              		.loc 1 701 10 is_stmt 0 view .LVU331
 1352 000e 022C     		cmp	r4, #2
 1353 0010 02D0     		beq	.L138
 707:./Library/stm32f4xx_flash.c ****   }  
 1354              		.loc 1 707 15 view .LVU332
 1355 0012 4FF44073 		mov	r3, #768
 1356 0016 03E0     		b	.L132
 1357              	.L138:
 703:./Library/stm32f4xx_flash.c ****   }
 1358              		.loc 1 703 15 view .LVU333
 1359 0018 4FF40073 		mov	r3, #512
 1360 001c 00E0     		b	.L132
 1361              	.L134:
 695:./Library/stm32f4xx_flash.c ****   }
 1362              		.loc 1 695 16 view .LVU334
 1363 001e 0023     		movs	r3, #0
 1364              	.L132:
 1365              	.LVL50:
 709:./Library/stm32f4xx_flash.c ****   {
 1366              		.loc 1 709 3 is_stmt 1 view .LVU335
 709:./Library/stm32f4xx_flash.c ****   {
 1367              		.loc 1 709 5 is_stmt 0 view .LVU336
 1368 0020 0928     		cmp	r0, #9
 1369 0022 03D0     		beq	.L139
 1370              	.LVL51:
 1371              	.L133:
 725:./Library/stm32f4xx_flash.c **** }
 1372              		.loc 1 725 3 is_stmt 1 view .LVU337
 726:./Library/stm32f4xx_flash.c **** 
 1373              		.loc 1 726 1 is_stmt 0 view .LVU338
 1374 0024 10BD     		pop	{r4, pc}
 1375              	.LVL52:
 1376              	.L135:
 699:./Library/stm32f4xx_flash.c ****   }
 1377              		.loc 1 699 15 view .LVU339
 1378 0026 4FF48073 		mov	r3, #256
 1379 002a F9E7     		b	.L132
 1380              	.LVL53:
 1381              	.L139:
 712:./Library/stm32f4xx_flash.c ****      FLASH->CR |= tmp_psize;
 1382              		.loc 1 712 6 is_stmt 1 view .LVU340
 712:./Library/stm32f4xx_flash.c ****      FLASH->CR |= tmp_psize;
 1383              		.loc 1 712 11 is_stmt 0 view .LVU341
 1384 002c 0B4C     		ldr	r4, .L140
 1385 002e 2269     		ldr	r2, [r4, #16]
 712:./Library/stm32f4xx_flash.c ****      FLASH->CR |= tmp_psize;
 1386              		.loc 1 712 16 view .LVU342
 1387 0030 22F44072 		bic	r2, r2, #768
 1388 0034 2261     		str	r2, [r4, #16]
 713:./Library/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_MER2;
 1389              		.loc 1 713 6 is_stmt 1 view .LVU343
 713:./Library/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_MER2;
 1390              		.loc 1 713 11 is_stmt 0 view .LVU344
ARM GAS  /tmp/ccwx2lab.s 			page 55


 1391 0036 2269     		ldr	r2, [r4, #16]
 713:./Library/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_MER2;
 1392              		.loc 1 713 16 view .LVU345
 1393 0038 1343     		orrs	r3, r3, r2
 1394              	.LVL54:
 713:./Library/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_MER2;
 1395              		.loc 1 713 16 view .LVU346
 1396 003a 2361     		str	r3, [r4, #16]
 714:./Library/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_STRT;
 1397              		.loc 1 714 6 is_stmt 1 view .LVU347
 714:./Library/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_STRT;
 1398              		.loc 1 714 11 is_stmt 0 view .LVU348
 1399 003c 2369     		ldr	r3, [r4, #16]
 714:./Library/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_STRT;
 1400              		.loc 1 714 16 view .LVU349
 1401 003e 43F40043 		orr	r3, r3, #32768
 1402 0042 2361     		str	r3, [r4, #16]
 715:./Library/stm32f4xx_flash.c ****     
 1403              		.loc 1 715 6 is_stmt 1 view .LVU350
 715:./Library/stm32f4xx_flash.c ****     
 1404              		.loc 1 715 11 is_stmt 0 view .LVU351
 1405 0044 2369     		ldr	r3, [r4, #16]
 715:./Library/stm32f4xx_flash.c ****     
 1406              		.loc 1 715 16 view .LVU352
 1407 0046 43F48033 		orr	r3, r3, #65536
 1408 004a 2361     		str	r3, [r4, #16]
 718:./Library/stm32f4xx_flash.c **** 
 1409              		.loc 1 718 5 is_stmt 1 view .LVU353
 718:./Library/stm32f4xx_flash.c **** 
 1410              		.loc 1 718 14 is_stmt 0 view .LVU354
 1411 004c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1412              	.LVL55:
 721:./Library/stm32f4xx_flash.c **** 
 1413              		.loc 1 721 5 is_stmt 1 view .LVU355
 721:./Library/stm32f4xx_flash.c **** 
 1414              		.loc 1 721 10 is_stmt 0 view .LVU356
 1415 0050 2369     		ldr	r3, [r4, #16]
 721:./Library/stm32f4xx_flash.c **** 
 1416              		.loc 1 721 15 view .LVU357
 1417 0052 23F40043 		bic	r3, r3, #32768
 1418 0056 2361     		str	r3, [r4, #16]
 1419 0058 E4E7     		b	.L133
 1420              	.L141:
 1421 005a 00BF     		.align	2
 1422              	.L140:
 1423 005c 003C0240 		.word	1073888256
 1424              		.cfi_endproc
 1425              	.LFE134:
 1427              		.section	.text.FLASH_ProgramDoubleWord,"ax",%progbits
 1428              		.align	1
 1429              		.global	FLASH_ProgramDoubleWord
 1430              		.syntax unified
 1431              		.thumb
 1432              		.thumb_func
 1434              	FLASH_ProgramDoubleWord:
 1435              	.LVL56:
 1436              	.LFB135:
ARM GAS  /tmp/ccwx2lab.s 			page 56


 742:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1437              		.loc 1 742 1 is_stmt 1 view -0
 1438              		.cfi_startproc
 1439              		@ args = 0, pretend = 0, frame = 0
 1440              		@ frame_needed = 0, uses_anonymous_args = 0
 742:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1441              		.loc 1 742 1 is_stmt 0 view .LVU359
 1442 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1443              	.LCFI7:
 1444              		.cfi_def_cfa_offset 24
 1445              		.cfi_offset 3, -24
 1446              		.cfi_offset 4, -20
 1447              		.cfi_offset 5, -16
 1448              		.cfi_offset 6, -12
 1449              		.cfi_offset 7, -8
 1450              		.cfi_offset 14, -4
 1451 0002 0646     		mov	r6, r0
 1452 0004 1446     		mov	r4, r2
 1453 0006 1D46     		mov	r5, r3
 743:./Library/stm32f4xx_flash.c **** 
 1454              		.loc 1 743 3 is_stmt 1 view .LVU360
 1455              	.LVL57:
 746:./Library/stm32f4xx_flash.c **** 
 1456              		.loc 1 746 3 view .LVU361
 749:./Library/stm32f4xx_flash.c ****   
 1457              		.loc 1 749 3 view .LVU362
 749:./Library/stm32f4xx_flash.c ****   
 1458              		.loc 1 749 12 is_stmt 0 view .LVU363
 1459 0008 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1460              	.LVL58:
 751:./Library/stm32f4xx_flash.c ****   {
 1461              		.loc 1 751 3 is_stmt 1 view .LVU364
 751:./Library/stm32f4xx_flash.c ****   {
 1462              		.loc 1 751 5 is_stmt 0 view .LVU365
 1463 000c 0928     		cmp	r0, #9
 1464 000e 00D0     		beq	.L145
 1465              	.L143:
 767:./Library/stm32f4xx_flash.c **** }
 1466              		.loc 1 767 3 is_stmt 1 view .LVU366
 768:./Library/stm32f4xx_flash.c **** 
 1467              		.loc 1 768 1 is_stmt 0 view .LVU367
 1468 0010 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1469              	.LVL59:
 1470              	.L145:
 754:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 1471              		.loc 1 754 5 is_stmt 1 view .LVU368
 754:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 1472              		.loc 1 754 10 is_stmt 0 view .LVU369
 1473 0012 0B4F     		ldr	r7, .L146
 1474 0014 3B69     		ldr	r3, [r7, #16]
 754:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 1475              		.loc 1 754 15 view .LVU370
 1476 0016 23F44073 		bic	r3, r3, #768
 1477 001a 3B61     		str	r3, [r7, #16]
 755:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 1478              		.loc 1 755 5 is_stmt 1 view .LVU371
 755:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
ARM GAS  /tmp/ccwx2lab.s 			page 57


 1479              		.loc 1 755 10 is_stmt 0 view .LVU372
 1480 001c 3B69     		ldr	r3, [r7, #16]
 755:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 1481              		.loc 1 755 15 view .LVU373
 1482 001e 43F44073 		orr	r3, r3, #768
 1483 0022 3B61     		str	r3, [r7, #16]
 756:./Library/stm32f4xx_flash.c ****   
 1484              		.loc 1 756 5 is_stmt 1 view .LVU374
 756:./Library/stm32f4xx_flash.c ****   
 1485              		.loc 1 756 10 is_stmt 0 view .LVU375
 1486 0024 3B69     		ldr	r3, [r7, #16]
 756:./Library/stm32f4xx_flash.c ****   
 1487              		.loc 1 756 15 view .LVU376
 1488 0026 43F00103 		orr	r3, r3, #1
 1489 002a 3B61     		str	r3, [r7, #16]
 758:./Library/stm32f4xx_flash.c ****         
 1490              		.loc 1 758 5 is_stmt 1 view .LVU377
 758:./Library/stm32f4xx_flash.c ****         
 1491              		.loc 1 758 30 is_stmt 0 view .LVU378
 1492 002c C6E90045 		strd	r4, [r6]
 761:./Library/stm32f4xx_flash.c **** 
 1493              		.loc 1 761 5 is_stmt 1 view .LVU379
 761:./Library/stm32f4xx_flash.c **** 
 1494              		.loc 1 761 14 is_stmt 0 view .LVU380
 1495 0030 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1496              	.LVL60:
 764:./Library/stm32f4xx_flash.c ****   } 
 1497              		.loc 1 764 5 is_stmt 1 view .LVU381
 764:./Library/stm32f4xx_flash.c ****   } 
 1498              		.loc 1 764 10 is_stmt 0 view .LVU382
 1499 0034 3B69     		ldr	r3, [r7, #16]
 764:./Library/stm32f4xx_flash.c ****   } 
 1500              		.loc 1 764 15 view .LVU383
 1501 0036 23F00103 		bic	r3, r3, #1
 1502 003a 3B61     		str	r3, [r7, #16]
 1503 003c E8E7     		b	.L143
 1504              	.L147:
 1505 003e 00BF     		.align	2
 1506              	.L146:
 1507 0040 003C0240 		.word	1073888256
 1508              		.cfi_endproc
 1509              	.LFE135:
 1511              		.section	.text.FLASH_ProgramWord,"ax",%progbits
 1512              		.align	1
 1513              		.global	FLASH_ProgramWord
 1514              		.syntax unified
 1515              		.thumb
 1516              		.thumb_func
 1518              	FLASH_ProgramWord:
 1519              	.LVL61:
 1520              	.LFB136:
 785:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1521              		.loc 1 785 1 is_stmt 1 view -0
 1522              		.cfi_startproc
 1523              		@ args = 0, pretend = 0, frame = 0
 1524              		@ frame_needed = 0, uses_anonymous_args = 0
 785:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
ARM GAS  /tmp/ccwx2lab.s 			page 58


 1525              		.loc 1 785 1 is_stmt 0 view .LVU385
 1526 0000 70B5     		push	{r4, r5, r6, lr}
 1527              	.LCFI8:
 1528              		.cfi_def_cfa_offset 16
 1529              		.cfi_offset 4, -16
 1530              		.cfi_offset 5, -12
 1531              		.cfi_offset 6, -8
 1532              		.cfi_offset 14, -4
 1533 0002 0546     		mov	r5, r0
 1534 0004 0C46     		mov	r4, r1
 786:./Library/stm32f4xx_flash.c **** 
 1535              		.loc 1 786 3 is_stmt 1 view .LVU386
 1536              	.LVL62:
 789:./Library/stm32f4xx_flash.c **** 
 1537              		.loc 1 789 3 view .LVU387
 792:./Library/stm32f4xx_flash.c ****   
 1538              		.loc 1 792 3 view .LVU388
 792:./Library/stm32f4xx_flash.c ****   
 1539              		.loc 1 792 12 is_stmt 0 view .LVU389
 1540 0006 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1541              	.LVL63:
 794:./Library/stm32f4xx_flash.c ****   {
 1542              		.loc 1 794 3 is_stmt 1 view .LVU390
 794:./Library/stm32f4xx_flash.c ****   {
 1543              		.loc 1 794 5 is_stmt 0 view .LVU391
 1544 000a 0928     		cmp	r0, #9
 1545 000c 00D0     		beq	.L151
 1546              	.L149:
 810:./Library/stm32f4xx_flash.c **** }
 1547              		.loc 1 810 3 is_stmt 1 view .LVU392
 811:./Library/stm32f4xx_flash.c **** 
 1548              		.loc 1 811 1 is_stmt 0 view .LVU393
 1549 000e 70BD     		pop	{r4, r5, r6, pc}
 1550              	.LVL64:
 1551              	.L151:
 797:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_WORD;
 1552              		.loc 1 797 5 is_stmt 1 view .LVU394
 797:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_WORD;
 1553              		.loc 1 797 10 is_stmt 0 view .LVU395
 1554 0010 0A4E     		ldr	r6, .L152
 1555 0012 3369     		ldr	r3, [r6, #16]
 797:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_WORD;
 1556              		.loc 1 797 15 view .LVU396
 1557 0014 23F44073 		bic	r3, r3, #768
 1558 0018 3361     		str	r3, [r6, #16]
 798:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 1559              		.loc 1 798 5 is_stmt 1 view .LVU397
 798:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 1560              		.loc 1 798 10 is_stmt 0 view .LVU398
 1561 001a 3369     		ldr	r3, [r6, #16]
 798:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 1562              		.loc 1 798 15 view .LVU399
 1563 001c 43F40073 		orr	r3, r3, #512
 1564 0020 3361     		str	r3, [r6, #16]
 799:./Library/stm32f4xx_flash.c ****   
 1565              		.loc 1 799 5 is_stmt 1 view .LVU400
 799:./Library/stm32f4xx_flash.c ****   
ARM GAS  /tmp/ccwx2lab.s 			page 59


 1566              		.loc 1 799 10 is_stmt 0 view .LVU401
 1567 0022 3369     		ldr	r3, [r6, #16]
 799:./Library/stm32f4xx_flash.c ****   
 1568              		.loc 1 799 15 view .LVU402
 1569 0024 43F00103 		orr	r3, r3, #1
 1570 0028 3361     		str	r3, [r6, #16]
 801:./Library/stm32f4xx_flash.c ****         
 1571              		.loc 1 801 5 is_stmt 1 view .LVU403
 801:./Library/stm32f4xx_flash.c ****         
 1572              		.loc 1 801 30 is_stmt 0 view .LVU404
 1573 002a 2C60     		str	r4, [r5]
 804:./Library/stm32f4xx_flash.c **** 
 1574              		.loc 1 804 5 is_stmt 1 view .LVU405
 804:./Library/stm32f4xx_flash.c **** 
 1575              		.loc 1 804 14 is_stmt 0 view .LVU406
 1576 002c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1577              	.LVL65:
 807:./Library/stm32f4xx_flash.c ****   } 
 1578              		.loc 1 807 5 is_stmt 1 view .LVU407
 807:./Library/stm32f4xx_flash.c ****   } 
 1579              		.loc 1 807 10 is_stmt 0 view .LVU408
 1580 0030 3369     		ldr	r3, [r6, #16]
 807:./Library/stm32f4xx_flash.c ****   } 
 1581              		.loc 1 807 15 view .LVU409
 1582 0032 23F00103 		bic	r3, r3, #1
 1583 0036 3361     		str	r3, [r6, #16]
 1584 0038 E9E7     		b	.L149
 1585              	.L153:
 1586 003a 00BF     		.align	2
 1587              	.L152:
 1588 003c 003C0240 		.word	1073888256
 1589              		.cfi_endproc
 1590              	.LFE136:
 1592              		.section	.text.FLASH_ProgramHalfWord,"ax",%progbits
 1593              		.align	1
 1594              		.global	FLASH_ProgramHalfWord
 1595              		.syntax unified
 1596              		.thumb
 1597              		.thumb_func
 1599              	FLASH_ProgramHalfWord:
 1600              	.LVL66:
 1601              	.LFB137:
 827:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1602              		.loc 1 827 1 is_stmt 1 view -0
 1603              		.cfi_startproc
 1604              		@ args = 0, pretend = 0, frame = 0
 1605              		@ frame_needed = 0, uses_anonymous_args = 0
 827:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1606              		.loc 1 827 1 is_stmt 0 view .LVU411
 1607 0000 70B5     		push	{r4, r5, r6, lr}
 1608              	.LCFI9:
 1609              		.cfi_def_cfa_offset 16
 1610              		.cfi_offset 4, -16
 1611              		.cfi_offset 5, -12
 1612              		.cfi_offset 6, -8
 1613              		.cfi_offset 14, -4
 1614 0002 0546     		mov	r5, r0
ARM GAS  /tmp/ccwx2lab.s 			page 60


 1615 0004 0C46     		mov	r4, r1
 828:./Library/stm32f4xx_flash.c **** 
 1616              		.loc 1 828 3 is_stmt 1 view .LVU412
 1617              	.LVL67:
 831:./Library/stm32f4xx_flash.c **** 
 1618              		.loc 1 831 3 view .LVU413
 834:./Library/stm32f4xx_flash.c ****   
 1619              		.loc 1 834 3 view .LVU414
 834:./Library/stm32f4xx_flash.c ****   
 1620              		.loc 1 834 12 is_stmt 0 view .LVU415
 1621 0006 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1622              	.LVL68:
 836:./Library/stm32f4xx_flash.c ****   {
 1623              		.loc 1 836 3 is_stmt 1 view .LVU416
 836:./Library/stm32f4xx_flash.c ****   {
 1624              		.loc 1 836 5 is_stmt 0 view .LVU417
 1625 000a 0928     		cmp	r0, #9
 1626 000c 00D0     		beq	.L157
 1627              	.L155:
 852:./Library/stm32f4xx_flash.c **** }
 1628              		.loc 1 852 3 is_stmt 1 view .LVU418
 853:./Library/stm32f4xx_flash.c **** 
 1629              		.loc 1 853 1 is_stmt 0 view .LVU419
 1630 000e 70BD     		pop	{r4, r5, r6, pc}
 1631              	.LVL69:
 1632              	.L157:
 839:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 1633              		.loc 1 839 5 is_stmt 1 view .LVU420
 839:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 1634              		.loc 1 839 10 is_stmt 0 view .LVU421
 1635 0010 0A4E     		ldr	r6, .L158
 1636 0012 3369     		ldr	r3, [r6, #16]
 839:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 1637              		.loc 1 839 15 view .LVU422
 1638 0014 23F44073 		bic	r3, r3, #768
 1639 0018 3361     		str	r3, [r6, #16]
 840:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 1640              		.loc 1 840 5 is_stmt 1 view .LVU423
 840:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 1641              		.loc 1 840 10 is_stmt 0 view .LVU424
 1642 001a 3369     		ldr	r3, [r6, #16]
 840:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 1643              		.loc 1 840 15 view .LVU425
 1644 001c 43F48073 		orr	r3, r3, #256
 1645 0020 3361     		str	r3, [r6, #16]
 841:./Library/stm32f4xx_flash.c ****   
 1646              		.loc 1 841 5 is_stmt 1 view .LVU426
 841:./Library/stm32f4xx_flash.c ****   
 1647              		.loc 1 841 10 is_stmt 0 view .LVU427
 1648 0022 3369     		ldr	r3, [r6, #16]
 841:./Library/stm32f4xx_flash.c ****   
 1649              		.loc 1 841 15 view .LVU428
 1650 0024 43F00103 		orr	r3, r3, #1
 1651 0028 3361     		str	r3, [r6, #16]
 843:./Library/stm32f4xx_flash.c ****         
 1652              		.loc 1 843 5 is_stmt 1 view .LVU429
 843:./Library/stm32f4xx_flash.c ****         
ARM GAS  /tmp/ccwx2lab.s 			page 61


 1653              		.loc 1 843 30 is_stmt 0 view .LVU430
 1654 002a 2C80     		strh	r4, [r5]	@ movhi
 846:./Library/stm32f4xx_flash.c **** 
 1655              		.loc 1 846 5 is_stmt 1 view .LVU431
 846:./Library/stm32f4xx_flash.c **** 
 1656              		.loc 1 846 14 is_stmt 0 view .LVU432
 1657 002c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1658              	.LVL70:
 849:./Library/stm32f4xx_flash.c ****   } 
 1659              		.loc 1 849 5 is_stmt 1 view .LVU433
 849:./Library/stm32f4xx_flash.c ****   } 
 1660              		.loc 1 849 10 is_stmt 0 view .LVU434
 1661 0030 3369     		ldr	r3, [r6, #16]
 849:./Library/stm32f4xx_flash.c ****   } 
 1662              		.loc 1 849 15 view .LVU435
 1663 0032 23F00103 		bic	r3, r3, #1
 1664 0036 3361     		str	r3, [r6, #16]
 1665 0038 E9E7     		b	.L155
 1666              	.L159:
 1667 003a 00BF     		.align	2
 1668              	.L158:
 1669 003c 003C0240 		.word	1073888256
 1670              		.cfi_endproc
 1671              	.LFE137:
 1673              		.section	.text.FLASH_ProgramByte,"ax",%progbits
 1674              		.align	1
 1675              		.global	FLASH_ProgramByte
 1676              		.syntax unified
 1677              		.thumb
 1678              		.thumb_func
 1680              	FLASH_ProgramByte:
 1681              	.LVL71:
 1682              	.LFB138:
 869:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1683              		.loc 1 869 1 is_stmt 1 view -0
 1684              		.cfi_startproc
 1685              		@ args = 0, pretend = 0, frame = 0
 1686              		@ frame_needed = 0, uses_anonymous_args = 0
 869:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1687              		.loc 1 869 1 is_stmt 0 view .LVU437
 1688 0000 70B5     		push	{r4, r5, r6, lr}
 1689              	.LCFI10:
 1690              		.cfi_def_cfa_offset 16
 1691              		.cfi_offset 4, -16
 1692              		.cfi_offset 5, -12
 1693              		.cfi_offset 6, -8
 1694              		.cfi_offset 14, -4
 1695 0002 0546     		mov	r5, r0
 1696 0004 0C46     		mov	r4, r1
 870:./Library/stm32f4xx_flash.c **** 
 1697              		.loc 1 870 3 is_stmt 1 view .LVU438
 1698              	.LVL72:
 873:./Library/stm32f4xx_flash.c **** 
 1699              		.loc 1 873 3 view .LVU439
 876:./Library/stm32f4xx_flash.c ****   
 1700              		.loc 1 876 3 view .LVU440
 876:./Library/stm32f4xx_flash.c ****   
ARM GAS  /tmp/ccwx2lab.s 			page 62


 1701              		.loc 1 876 12 is_stmt 0 view .LVU441
 1702 0006 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1703              	.LVL73:
 878:./Library/stm32f4xx_flash.c ****   {
 1704              		.loc 1 878 3 is_stmt 1 view .LVU442
 878:./Library/stm32f4xx_flash.c ****   {
 1705              		.loc 1 878 5 is_stmt 0 view .LVU443
 1706 000a 0928     		cmp	r0, #9
 1707 000c 00D0     		beq	.L163
 1708              	.L161:
 895:./Library/stm32f4xx_flash.c **** }
 1709              		.loc 1 895 3 is_stmt 1 view .LVU444
 896:./Library/stm32f4xx_flash.c **** 
 1710              		.loc 1 896 1 is_stmt 0 view .LVU445
 1711 000e 70BD     		pop	{r4, r5, r6, pc}
 1712              	.LVL74:
 1713              	.L163:
 881:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_BYTE;
 1714              		.loc 1 881 5 is_stmt 1 view .LVU446
 881:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_BYTE;
 1715              		.loc 1 881 10 is_stmt 0 view .LVU447
 1716 0010 094E     		ldr	r6, .L164
 1717 0012 3369     		ldr	r3, [r6, #16]
 881:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_BYTE;
 1718              		.loc 1 881 15 view .LVU448
 1719 0014 23F44073 		bic	r3, r3, #768
 1720 0018 3361     		str	r3, [r6, #16]
 882:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 1721              		.loc 1 882 5 is_stmt 1 view .LVU449
 882:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 1722              		.loc 1 882 10 is_stmt 0 view .LVU450
 1723 001a 3369     		ldr	r3, [r6, #16]
 882:./Library/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 1724              		.loc 1 882 15 view .LVU451
 1725 001c 3361     		str	r3, [r6, #16]
 883:./Library/stm32f4xx_flash.c ****   
 1726              		.loc 1 883 5 is_stmt 1 view .LVU452
 883:./Library/stm32f4xx_flash.c ****   
 1727              		.loc 1 883 10 is_stmt 0 view .LVU453
 1728 001e 3369     		ldr	r3, [r6, #16]
 883:./Library/stm32f4xx_flash.c ****   
 1729              		.loc 1 883 15 view .LVU454
 1730 0020 43F00103 		orr	r3, r3, #1
 1731 0024 3361     		str	r3, [r6, #16]
 885:./Library/stm32f4xx_flash.c ****         
 1732              		.loc 1 885 5 is_stmt 1 view .LVU455
 885:./Library/stm32f4xx_flash.c ****         
 1733              		.loc 1 885 29 is_stmt 0 view .LVU456
 1734 0026 2C70     		strb	r4, [r5]
 888:./Library/stm32f4xx_flash.c **** 
 1735              		.loc 1 888 5 is_stmt 1 view .LVU457
 888:./Library/stm32f4xx_flash.c **** 
 1736              		.loc 1 888 14 is_stmt 0 view .LVU458
 1737 0028 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1738              	.LVL75:
 891:./Library/stm32f4xx_flash.c ****   } 
 1739              		.loc 1 891 5 is_stmt 1 view .LVU459
ARM GAS  /tmp/ccwx2lab.s 			page 63


 891:./Library/stm32f4xx_flash.c ****   } 
 1740              		.loc 1 891 10 is_stmt 0 view .LVU460
 1741 002c 3369     		ldr	r3, [r6, #16]
 891:./Library/stm32f4xx_flash.c ****   } 
 1742              		.loc 1 891 15 view .LVU461
 1743 002e 23F00103 		bic	r3, r3, #1
 1744 0032 3361     		str	r3, [r6, #16]
 1745 0034 EBE7     		b	.L161
 1746              	.L165:
 1747 0036 00BF     		.align	2
 1748              	.L164:
 1749 0038 003C0240 		.word	1073888256
 1750              		.cfi_endproc
 1751              	.LFE138:
 1753              		.section	.text.FLASH_OB_WRPConfig,"ax",%progbits
 1754              		.align	1
 1755              		.global	FLASH_OB_WRPConfig
 1756              		.syntax unified
 1757              		.thumb
 1758              		.thumb_func
 1760              	FLASH_OB_WRPConfig:
 1761              	.LVL76:
 1762              	.LFB141:
1006:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1763              		.loc 1 1006 1 is_stmt 1 view -0
 1764              		.cfi_startproc
 1765              		@ args = 0, pretend = 0, frame = 0
 1766              		@ frame_needed = 0, uses_anonymous_args = 0
1006:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1767              		.loc 1 1006 1 is_stmt 0 view .LVU463
 1768 0000 38B5     		push	{r3, r4, r5, lr}
 1769              	.LCFI11:
 1770              		.cfi_def_cfa_offset 16
 1771              		.cfi_offset 3, -16
 1772              		.cfi_offset 4, -12
 1773              		.cfi_offset 5, -8
 1774              		.cfi_offset 14, -4
 1775 0002 0546     		mov	r5, r0
 1776 0004 0C46     		mov	r4, r1
1007:./Library/stm32f4xx_flash.c ****   
 1777              		.loc 1 1007 3 is_stmt 1 view .LVU464
 1778              	.LVL77:
1010:./Library/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1779              		.loc 1 1010 3 view .LVU465
1011:./Library/stm32f4xx_flash.c ****     
 1780              		.loc 1 1011 3 view .LVU466
1013:./Library/stm32f4xx_flash.c **** 
 1781              		.loc 1 1013 3 view .LVU467
1013:./Library/stm32f4xx_flash.c **** 
 1782              		.loc 1 1013 12 is_stmt 0 view .LVU468
 1783 0006 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1784              	.LVL78:
1015:./Library/stm32f4xx_flash.c ****   { 
 1785              		.loc 1 1015 3 is_stmt 1 view .LVU469
1015:./Library/stm32f4xx_flash.c ****   { 
 1786              		.loc 1 1015 5 is_stmt 0 view .LVU470
 1787 000a 0928     		cmp	r0, #9
ARM GAS  /tmp/ccwx2lab.s 			page 64


 1788 000c 00D0     		beq	.L170
 1789              	.LVL79:
 1790              	.L166:
1026:./Library/stm32f4xx_flash.c **** 
 1791              		.loc 1 1026 1 view .LVU471
 1792 000e 38BD     		pop	{r3, r4, r5, pc}
 1793              	.LVL80:
 1794              	.L170:
1017:./Library/stm32f4xx_flash.c ****     {
 1795              		.loc 1 1017 5 is_stmt 1 view .LVU472
1017:./Library/stm32f4xx_flash.c ****     {
 1796              		.loc 1 1017 7 is_stmt 0 view .LVU473
 1797 0010 34B1     		cbz	r4, .L168
1019:./Library/stm32f4xx_flash.c ****     }
 1798              		.loc 1 1019 7 is_stmt 1 view .LVU474
 1799 0012 074A     		ldr	r2, .L171
 1800 0014 D38A     		ldrh	r3, [r2, #22]
 1801 0016 9BB2     		uxth	r3, r3
1019:./Library/stm32f4xx_flash.c ****     }
 1802              		.loc 1 1019 44 is_stmt 0 view .LVU475
 1803 0018 23EA0503 		bic	r3, r3, r5
 1804 001c D382     		strh	r3, [r2, #22]	@ movhi
 1805 001e F6E7     		b	.L166
 1806              	.L168:
1023:./Library/stm32f4xx_flash.c ****     }
 1807              		.loc 1 1023 7 is_stmt 1 view .LVU476
 1808 0020 034A     		ldr	r2, .L171
 1809 0022 D38A     		ldrh	r3, [r2, #22]
 1810 0024 9BB2     		uxth	r3, r3
1023:./Library/stm32f4xx_flash.c ****     }
 1811              		.loc 1 1023 47 is_stmt 0 view .LVU477
 1812 0026 A8B2     		uxth	r0, r5
 1813              	.LVL81:
1023:./Library/stm32f4xx_flash.c ****     }
 1814              		.loc 1 1023 44 view .LVU478
 1815 0028 0343     		orrs	r3, r3, r0
 1816 002a D382     		strh	r3, [r2, #22]	@ movhi
1026:./Library/stm32f4xx_flash.c **** 
 1817              		.loc 1 1026 1 view .LVU479
 1818 002c EFE7     		b	.L166
 1819              	.L172:
 1820 002e 00BF     		.align	2
 1821              	.L171:
 1822 0030 003C0240 		.word	1073888256
 1823              		.cfi_endproc
 1824              	.LFE141:
 1826              		.section	.text.FLASH_OB_WRP1Config,"ax",%progbits
 1827              		.align	1
 1828              		.global	FLASH_OB_WRP1Config
 1829              		.syntax unified
 1830              		.thumb
 1831              		.thumb_func
 1833              	FLASH_OB_WRP1Config:
 1834              	.LVL82:
 1835              	.LFB142:
1048:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1836              		.loc 1 1048 1 is_stmt 1 view -0
ARM GAS  /tmp/ccwx2lab.s 			page 65


 1837              		.cfi_startproc
 1838              		@ args = 0, pretend = 0, frame = 0
 1839              		@ frame_needed = 0, uses_anonymous_args = 0
1048:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1840              		.loc 1 1048 1 is_stmt 0 view .LVU481
 1841 0000 38B5     		push	{r3, r4, r5, lr}
 1842              	.LCFI12:
 1843              		.cfi_def_cfa_offset 16
 1844              		.cfi_offset 3, -16
 1845              		.cfi_offset 4, -12
 1846              		.cfi_offset 5, -8
 1847              		.cfi_offset 14, -4
 1848 0002 0546     		mov	r5, r0
 1849 0004 0C46     		mov	r4, r1
1049:./Library/stm32f4xx_flash.c ****   
 1850              		.loc 1 1049 3 is_stmt 1 view .LVU482
 1851              	.LVL83:
1052:./Library/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1852              		.loc 1 1052 3 view .LVU483
1053:./Library/stm32f4xx_flash.c ****     
 1853              		.loc 1 1053 3 view .LVU484
1055:./Library/stm32f4xx_flash.c **** 
 1854              		.loc 1 1055 3 view .LVU485
1055:./Library/stm32f4xx_flash.c **** 
 1855              		.loc 1 1055 12 is_stmt 0 view .LVU486
 1856 0006 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1857              	.LVL84:
1057:./Library/stm32f4xx_flash.c ****   { 
 1858              		.loc 1 1057 3 is_stmt 1 view .LVU487
1057:./Library/stm32f4xx_flash.c ****   { 
 1859              		.loc 1 1057 5 is_stmt 0 view .LVU488
 1860 000a 0928     		cmp	r0, #9
 1861 000c 00D0     		beq	.L177
 1862              	.LVL85:
 1863              	.L173:
1068:./Library/stm32f4xx_flash.c **** 
 1864              		.loc 1 1068 1 view .LVU489
 1865 000e 38BD     		pop	{r3, r4, r5, pc}
 1866              	.LVL86:
 1867              	.L177:
1059:./Library/stm32f4xx_flash.c ****     {
 1868              		.loc 1 1059 5 is_stmt 1 view .LVU490
1059:./Library/stm32f4xx_flash.c ****     {
 1869              		.loc 1 1059 7 is_stmt 0 view .LVU491
 1870 0010 34B1     		cbz	r4, .L175
1061:./Library/stm32f4xx_flash.c ****     }
 1871              		.loc 1 1061 7 is_stmt 1 view .LVU492
 1872 0012 074A     		ldr	r2, .L178
 1873 0014 538B     		ldrh	r3, [r2, #26]
 1874 0016 9BB2     		uxth	r3, r3
1061:./Library/stm32f4xx_flash.c ****     }
 1875              		.loc 1 1061 45 is_stmt 0 view .LVU493
 1876 0018 23EA0503 		bic	r3, r3, r5
 1877 001c 5383     		strh	r3, [r2, #26]	@ movhi
 1878 001e F6E7     		b	.L173
 1879              	.L175:
1065:./Library/stm32f4xx_flash.c ****     }
ARM GAS  /tmp/ccwx2lab.s 			page 66


 1880              		.loc 1 1065 7 is_stmt 1 view .LVU494
 1881 0020 034A     		ldr	r2, .L178
 1882 0022 538B     		ldrh	r3, [r2, #26]
 1883 0024 9BB2     		uxth	r3, r3
1065:./Library/stm32f4xx_flash.c ****     }
 1884              		.loc 1 1065 48 is_stmt 0 view .LVU495
 1885 0026 A8B2     		uxth	r0, r5
 1886              	.LVL87:
1065:./Library/stm32f4xx_flash.c ****     }
 1887              		.loc 1 1065 45 view .LVU496
 1888 0028 0343     		orrs	r3, r3, r0
 1889 002a 5383     		strh	r3, [r2, #26]	@ movhi
1068:./Library/stm32f4xx_flash.c **** 
 1890              		.loc 1 1068 1 view .LVU497
 1891 002c EFE7     		b	.L173
 1892              	.L179:
 1893 002e 00BF     		.align	2
 1894              	.L178:
 1895 0030 003C0240 		.word	1073888256
 1896              		.cfi_endproc
 1897              	.LFE142:
 1899              		.section	.text.FLASH_OB_PCROPConfig,"ax",%progbits
 1900              		.align	1
 1901              		.global	FLASH_OB_PCROPConfig
 1902              		.syntax unified
 1903              		.thumb
 1904              		.thumb_func
 1906              	FLASH_OB_PCROPConfig:
 1907              	.LVL88:
 1908              	.LFB144:
1129:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1909              		.loc 1 1129 1 is_stmt 1 view -0
 1910              		.cfi_startproc
 1911              		@ args = 0, pretend = 0, frame = 0
 1912              		@ frame_needed = 0, uses_anonymous_args = 0
1129:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1913              		.loc 1 1129 1 is_stmt 0 view .LVU499
 1914 0000 38B5     		push	{r3, r4, r5, lr}
 1915              	.LCFI13:
 1916              		.cfi_def_cfa_offset 16
 1917              		.cfi_offset 3, -16
 1918              		.cfi_offset 4, -12
 1919              		.cfi_offset 5, -8
 1920              		.cfi_offset 14, -4
 1921 0002 0546     		mov	r5, r0
 1922 0004 0C46     		mov	r4, r1
1130:./Library/stm32f4xx_flash.c ****   
 1923              		.loc 1 1130 3 is_stmt 1 view .LVU500
 1924              	.LVL89:
1133:./Library/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1925              		.loc 1 1133 3 view .LVU501
1134:./Library/stm32f4xx_flash.c ****     
 1926              		.loc 1 1134 3 view .LVU502
1136:./Library/stm32f4xx_flash.c **** 
 1927              		.loc 1 1136 3 view .LVU503
1136:./Library/stm32f4xx_flash.c **** 
 1928              		.loc 1 1136 12 is_stmt 0 view .LVU504
ARM GAS  /tmp/ccwx2lab.s 			page 67


 1929 0006 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1930              	.LVL90:
1138:./Library/stm32f4xx_flash.c ****   { 
 1931              		.loc 1 1138 3 is_stmt 1 view .LVU505
1138:./Library/stm32f4xx_flash.c ****   { 
 1932              		.loc 1 1138 5 is_stmt 0 view .LVU506
 1933 000a 0928     		cmp	r0, #9
 1934 000c 00D0     		beq	.L184
 1935              	.LVL91:
 1936              	.L180:
1149:./Library/stm32f4xx_flash.c **** 
 1937              		.loc 1 1149 1 view .LVU507
 1938 000e 38BD     		pop	{r3, r4, r5, pc}
 1939              	.LVL92:
 1940              	.L184:
1140:./Library/stm32f4xx_flash.c ****     {
 1941              		.loc 1 1140 5 is_stmt 1 view .LVU508
1140:./Library/stm32f4xx_flash.c ****     {
 1942              		.loc 1 1140 7 is_stmt 0 view .LVU509
 1943 0010 34B1     		cbz	r4, .L182
1142:./Library/stm32f4xx_flash.c ****     }
 1944              		.loc 1 1142 7 is_stmt 1 view .LVU510
 1945 0012 074A     		ldr	r2, .L185
 1946 0014 D38A     		ldrh	r3, [r2, #22]
 1947 0016 9BB2     		uxth	r3, r3
1142:./Library/stm32f4xx_flash.c ****     }
 1948              		.loc 1 1142 47 is_stmt 0 view .LVU511
 1949 0018 A8B2     		uxth	r0, r5
 1950              	.LVL93:
1142:./Library/stm32f4xx_flash.c ****     }
 1951              		.loc 1 1142 44 view .LVU512
 1952 001a 0343     		orrs	r3, r3, r0
 1953 001c D382     		strh	r3, [r2, #22]	@ movhi
 1954 001e F6E7     		b	.L180
 1955              	.LVL94:
 1956              	.L182:
1146:./Library/stm32f4xx_flash.c ****     }
 1957              		.loc 1 1146 7 is_stmt 1 view .LVU513
 1958 0020 034A     		ldr	r2, .L185
 1959 0022 D38A     		ldrh	r3, [r2, #22]
 1960 0024 9BB2     		uxth	r3, r3
1146:./Library/stm32f4xx_flash.c ****     }
 1961              		.loc 1 1146 44 is_stmt 0 view .LVU514
 1962 0026 23EA0503 		bic	r3, r3, r5
 1963 002a D382     		strh	r3, [r2, #22]	@ movhi
1149:./Library/stm32f4xx_flash.c **** 
 1964              		.loc 1 1149 1 view .LVU515
 1965 002c EFE7     		b	.L180
 1966              	.L186:
 1967 002e 00BF     		.align	2
 1968              	.L185:
 1969 0030 003C0240 		.word	1073888256
 1970              		.cfi_endproc
 1971              	.LFE144:
 1973              		.section	.text.FLASH_OB_PCROP1Config,"ax",%progbits
 1974              		.align	1
 1975              		.global	FLASH_OB_PCROP1Config
ARM GAS  /tmp/ccwx2lab.s 			page 68


 1976              		.syntax unified
 1977              		.thumb
 1978              		.thumb_func
 1980              	FLASH_OB_PCROP1Config:
 1981              	.LVL95:
 1982              	.LFB145:
1166:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1983              		.loc 1 1166 1 is_stmt 1 view -0
 1984              		.cfi_startproc
 1985              		@ args = 0, pretend = 0, frame = 0
 1986              		@ frame_needed = 0, uses_anonymous_args = 0
1166:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1987              		.loc 1 1166 1 is_stmt 0 view .LVU517
 1988 0000 38B5     		push	{r3, r4, r5, lr}
 1989              	.LCFI14:
 1990              		.cfi_def_cfa_offset 16
 1991              		.cfi_offset 3, -16
 1992              		.cfi_offset 4, -12
 1993              		.cfi_offset 5, -8
 1994              		.cfi_offset 14, -4
 1995 0002 0546     		mov	r5, r0
 1996 0004 0C46     		mov	r4, r1
1167:./Library/stm32f4xx_flash.c ****   
 1997              		.loc 1 1167 3 is_stmt 1 view .LVU518
 1998              	.LVL96:
1170:./Library/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1999              		.loc 1 1170 3 view .LVU519
1171:./Library/stm32f4xx_flash.c ****     
 2000              		.loc 1 1171 3 view .LVU520
1173:./Library/stm32f4xx_flash.c **** 
 2001              		.loc 1 1173 3 view .LVU521
1173:./Library/stm32f4xx_flash.c **** 
 2002              		.loc 1 1173 12 is_stmt 0 view .LVU522
 2003 0006 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 2004              	.LVL97:
1175:./Library/stm32f4xx_flash.c ****   { 
 2005              		.loc 1 1175 3 is_stmt 1 view .LVU523
1175:./Library/stm32f4xx_flash.c ****   { 
 2006              		.loc 1 1175 5 is_stmt 0 view .LVU524
 2007 000a 0928     		cmp	r0, #9
 2008 000c 00D0     		beq	.L191
 2009              	.LVL98:
 2010              	.L187:
1186:./Library/stm32f4xx_flash.c **** 
 2011              		.loc 1 1186 1 view .LVU525
 2012 000e 38BD     		pop	{r3, r4, r5, pc}
 2013              	.LVL99:
 2014              	.L191:
1177:./Library/stm32f4xx_flash.c ****     {
 2015              		.loc 1 1177 5 is_stmt 1 view .LVU526
1177:./Library/stm32f4xx_flash.c ****     {
 2016              		.loc 1 1177 7 is_stmt 0 view .LVU527
 2017 0010 34B1     		cbz	r4, .L189
1179:./Library/stm32f4xx_flash.c ****     }
 2018              		.loc 1 1179 7 is_stmt 1 view .LVU528
 2019 0012 074A     		ldr	r2, .L192
 2020 0014 538B     		ldrh	r3, [r2, #26]
ARM GAS  /tmp/ccwx2lab.s 			page 69


 2021 0016 9BB2     		uxth	r3, r3
1179:./Library/stm32f4xx_flash.c ****     }
 2022              		.loc 1 1179 48 is_stmt 0 view .LVU529
 2023 0018 A8B2     		uxth	r0, r5
 2024              	.LVL100:
1179:./Library/stm32f4xx_flash.c ****     }
 2025              		.loc 1 1179 45 view .LVU530
 2026 001a 0343     		orrs	r3, r3, r0
 2027 001c 5383     		strh	r3, [r2, #26]	@ movhi
 2028 001e F6E7     		b	.L187
 2029              	.LVL101:
 2030              	.L189:
1183:./Library/stm32f4xx_flash.c ****     }
 2031              		.loc 1 1183 7 is_stmt 1 view .LVU531
 2032 0020 034A     		ldr	r2, .L192
 2033 0022 538B     		ldrh	r3, [r2, #26]
 2034 0024 9BB2     		uxth	r3, r3
1183:./Library/stm32f4xx_flash.c ****     }
 2035              		.loc 1 1183 45 is_stmt 0 view .LVU532
 2036 0026 23EA0503 		bic	r3, r3, r5
 2037 002a 5383     		strh	r3, [r2, #26]	@ movhi
1186:./Library/stm32f4xx_flash.c **** 
 2038              		.loc 1 1186 1 view .LVU533
 2039 002c EFE7     		b	.L187
 2040              	.L193:
 2041 002e 00BF     		.align	2
 2042              	.L192:
 2043 0030 003C0240 		.word	1073888256
 2044              		.cfi_endproc
 2045              	.LFE145:
 2047              		.section	.text.FLASH_OB_RDPConfig,"ax",%progbits
 2048              		.align	1
 2049              		.global	FLASH_OB_RDPConfig
 2050              		.syntax unified
 2051              		.thumb
 2052              		.thumb_func
 2054              	FLASH_OB_RDPConfig:
 2055              	.LVL102:
 2056              	.LFB146:
1202:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 2057              		.loc 1 1202 1 is_stmt 1 view -0
 2058              		.cfi_startproc
 2059              		@ args = 0, pretend = 0, frame = 0
 2060              		@ frame_needed = 0, uses_anonymous_args = 0
1202:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 2061              		.loc 1 1202 1 is_stmt 0 view .LVU535
 2062 0000 10B5     		push	{r4, lr}
 2063              	.LCFI15:
 2064              		.cfi_def_cfa_offset 8
 2065              		.cfi_offset 4, -8
 2066              		.cfi_offset 14, -4
 2067 0002 0446     		mov	r4, r0
1203:./Library/stm32f4xx_flash.c **** 
 2068              		.loc 1 1203 3 is_stmt 1 view .LVU536
 2069              	.LVL103:
1206:./Library/stm32f4xx_flash.c **** 
 2070              		.loc 1 1206 3 view .LVU537
ARM GAS  /tmp/ccwx2lab.s 			page 70


1208:./Library/stm32f4xx_flash.c **** 
 2071              		.loc 1 1208 3 view .LVU538
1208:./Library/stm32f4xx_flash.c **** 
 2072              		.loc 1 1208 12 is_stmt 0 view .LVU539
 2073 0004 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 2074              	.LVL104:
1210:./Library/stm32f4xx_flash.c ****   {
 2075              		.loc 1 1210 3 is_stmt 1 view .LVU540
1210:./Library/stm32f4xx_flash.c ****   {
 2076              		.loc 1 1210 5 is_stmt 0 view .LVU541
 2077 0008 0928     		cmp	r0, #9
 2078 000a 00D0     		beq	.L197
 2079              	.L194:
1215:./Library/stm32f4xx_flash.c **** 
 2080              		.loc 1 1215 1 view .LVU542
 2081 000c 10BD     		pop	{r4, pc}
 2082              	.L197:
1212:./Library/stm32f4xx_flash.c **** 
 2083              		.loc 1 1212 5 is_stmt 1 view .LVU543
1212:./Library/stm32f4xx_flash.c **** 
 2084              		.loc 1 1212 41 is_stmt 0 view .LVU544
 2085 000e 014B     		ldr	r3, .L198
 2086 0010 5C75     		strb	r4, [r3, #21]
1215:./Library/stm32f4xx_flash.c **** 
 2087              		.loc 1 1215 1 view .LVU545
 2088 0012 FBE7     		b	.L194
 2089              	.L199:
 2090              		.align	2
 2091              	.L198:
 2092 0014 003C0240 		.word	1073888256
 2093              		.cfi_endproc
 2094              	.LFE146:
 2096              		.section	.text.FLASH_OB_UserConfig,"ax",%progbits
 2097              		.align	1
 2098              		.global	FLASH_OB_UserConfig
 2099              		.syntax unified
 2100              		.thumb
 2101              		.thumb_func
 2103              	FLASH_OB_UserConfig:
 2104              	.LVL105:
 2105              	.LFB147:
1234:./Library/stm32f4xx_flash.c ****   uint8_t optiontmp = 0xFF;
 2106              		.loc 1 1234 1 is_stmt 1 view -0
 2107              		.cfi_startproc
 2108              		@ args = 0, pretend = 0, frame = 0
 2109              		@ frame_needed = 0, uses_anonymous_args = 0
1234:./Library/stm32f4xx_flash.c ****   uint8_t optiontmp = 0xFF;
 2110              		.loc 1 1234 1 is_stmt 0 view .LVU547
 2111 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2112              	.LCFI16:
 2113              		.cfi_def_cfa_offset 24
 2114              		.cfi_offset 3, -24
 2115              		.cfi_offset 4, -20
 2116              		.cfi_offset 5, -16
 2117              		.cfi_offset 6, -12
 2118              		.cfi_offset 7, -8
 2119              		.cfi_offset 14, -4
ARM GAS  /tmp/ccwx2lab.s 			page 71


 2120 0002 0446     		mov	r4, r0
 2121 0004 0E46     		mov	r6, r1
 2122 0006 1546     		mov	r5, r2
1235:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE; 
 2123              		.loc 1 1235 3 is_stmt 1 view .LVU548
 2124              	.LVL106:
1236:./Library/stm32f4xx_flash.c **** 
 2125              		.loc 1 1236 3 view .LVU549
1239:./Library/stm32f4xx_flash.c ****   assert_param(IS_OB_STOP_SOURCE(OB_STOP));
 2126              		.loc 1 1239 3 view .LVU550
1240:./Library/stm32f4xx_flash.c ****   assert_param(IS_OB_STDBY_SOURCE(OB_STDBY));
 2127              		.loc 1 1240 3 view .LVU551
1241:./Library/stm32f4xx_flash.c **** 
 2128              		.loc 1 1241 3 view .LVU552
1244:./Library/stm32f4xx_flash.c ****   
 2129              		.loc 1 1244 3 view .LVU553
1244:./Library/stm32f4xx_flash.c ****   
 2130              		.loc 1 1244 12 is_stmt 0 view .LVU554
 2131 0008 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 2132              	.LVL107:
1246:./Library/stm32f4xx_flash.c ****   { 
 2133              		.loc 1 1246 3 is_stmt 1 view .LVU555
1246:./Library/stm32f4xx_flash.c ****   { 
 2134              		.loc 1 1246 5 is_stmt 0 view .LVU556
 2135 000c 0928     		cmp	r0, #9
 2136 000e 00D0     		beq	.L203
 2137              	.LVL108:
 2138              	.L200:
1261:./Library/stm32f4xx_flash.c **** 
 2139              		.loc 1 1261 1 view .LVU557
 2140 0010 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2141              	.LVL109:
 2142              	.L203:
1255:./Library/stm32f4xx_flash.c **** #endif /* STM32F40_41xxx || STM32F401xx || STM32F410xx || STM32F411xE || STM32F446xx */ 
 2143              		.loc 1 1255 5 is_stmt 1 view .LVU558
1255:./Library/stm32f4xx_flash.c **** #endif /* STM32F40_41xxx || STM32F401xx || STM32F410xx || STM32F411xE || STM32F446xx */ 
 2144              		.loc 1 1255 67 is_stmt 0 view .LVU559
 2145 0012 064F     		ldr	r7, .L204
 2146 0014 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
1255:./Library/stm32f4xx_flash.c **** #endif /* STM32F40_41xxx || STM32F401xx || STM32F410xx || STM32F411xE || STM32F446xx */ 
 2147              		.loc 1 1255 15 view .LVU560
 2148 0016 03F00F03 		and	r3, r3, #15
 2149              	.LVL110:
1259:./Library/stm32f4xx_flash.c ****   }  
 2150              		.loc 1 1259 5 is_stmt 1 view .LVU561
1259:./Library/stm32f4xx_flash.c ****   }  
 2151              		.loc 1 1259 75 is_stmt 0 view .LVU562
 2152 001a 43EA0601 		orr	r1, r3, r6
1259:./Library/stm32f4xx_flash.c ****   }  
 2153              		.loc 1 1259 54 view .LVU563
 2154 001e 41EA0502 		orr	r2, r1, r5
1259:./Library/stm32f4xx_flash.c ****   }  
 2155              		.loc 1 1259 42 view .LVU564
 2156 0022 42EA0400 		orr	r0, r2, r4
 2157              	.LVL111:
1259:./Library/stm32f4xx_flash.c ****   }  
 2158              		.loc 1 1259 42 view .LVU565
ARM GAS  /tmp/ccwx2lab.s 			page 72


 2159 0026 3875     		strb	r0, [r7, #20]
1261:./Library/stm32f4xx_flash.c **** 
 2160              		.loc 1 1261 1 view .LVU566
 2161 0028 F2E7     		b	.L200
 2162              	.L205:
 2163 002a 00BF     		.align	2
 2164              	.L204:
 2165 002c 003C0240 		.word	1073888256
 2166              		.cfi_endproc
 2167              	.LFE147:
 2169              		.section	.text.FLASH_OB_Launch,"ax",%progbits
 2170              		.align	1
 2171              		.global	FLASH_OB_Launch
 2172              		.syntax unified
 2173              		.thumb
 2174              		.thumb_func
 2176              	FLASH_OB_Launch:
 2177              	.LFB150:
1313:./Library/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 2178              		.loc 1 1313 1 is_stmt 1 view -0
 2179              		.cfi_startproc
 2180              		@ args = 0, pretend = 0, frame = 0
 2181              		@ frame_needed = 0, uses_anonymous_args = 0
 2182 0000 08B5     		push	{r3, lr}
 2183              	.LCFI17:
 2184              		.cfi_def_cfa_offset 8
 2185              		.cfi_offset 3, -8
 2186              		.cfi_offset 14, -4
1314:./Library/stm32f4xx_flash.c **** 
 2187              		.loc 1 1314 3 view .LVU568
 2188              	.LVL112:
1317:./Library/stm32f4xx_flash.c **** 
 2189              		.loc 1 1317 3 view .LVU569
 2190 0002 044A     		ldr	r2, .L208
 2191 0004 137D     		ldrb	r3, [r2, #20]	@ zero_extendqisi2
1317:./Library/stm32f4xx_flash.c **** 
 2192              		.loc 1 1317 40 is_stmt 0 view .LVU570
 2193 0006 43F00203 		orr	r3, r3, #2
 2194 000a 1375     		strb	r3, [r2, #20]
1320:./Library/stm32f4xx_flash.c **** 
 2195              		.loc 1 1320 3 is_stmt 1 view .LVU571
1320:./Library/stm32f4xx_flash.c **** 
 2196              		.loc 1 1320 12 is_stmt 0 view .LVU572
 2197 000c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 2198              	.LVL113:
1322:./Library/stm32f4xx_flash.c **** }
 2199              		.loc 1 1322 3 is_stmt 1 view .LVU573
1323:./Library/stm32f4xx_flash.c **** 
 2200              		.loc 1 1323 1 is_stmt 0 view .LVU574
 2201 0010 08BD     		pop	{r3, pc}
 2202              	.L209:
 2203 0012 00BF     		.align	2
 2204              	.L208:
 2205 0014 003C0240 		.word	1073888256
 2206              		.cfi_endproc
 2207              	.LFE150:
 2209              		.text
ARM GAS  /tmp/ccwx2lab.s 			page 73


 2210              	.Letext0:
 2211              		.file 2 "/usr/lib/gcc/arm-none-eabi/12.2.1/include/stdint.h"
 2212              		.file 3 "./CORE/stm32f4xx.h"
 2213              		.file 4 "./Library/stm32f4xx_flash.h"
ARM GAS  /tmp/ccwx2lab.s 			page 74


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_flash.c
     /tmp/ccwx2lab.s:21     .text.FLASH_SetLatency:0000000000000000 $t
     /tmp/ccwx2lab.s:27     .text.FLASH_SetLatency:0000000000000000 FLASH_SetLatency
     /tmp/ccwx2lab.s:48     .text.FLASH_SetLatency:0000000000000008 $d
     /tmp/ccwx2lab.s:53     .text.FLASH_PrefetchBufferCmd:0000000000000000 $t
     /tmp/ccwx2lab.s:59     .text.FLASH_PrefetchBufferCmd:0000000000000000 FLASH_PrefetchBufferCmd
     /tmp/ccwx2lab.s:92     .text.FLASH_PrefetchBufferCmd:000000000000001c $d
     /tmp/ccwx2lab.s:97     .text.FLASH_InstructionCacheCmd:0000000000000000 $t
     /tmp/ccwx2lab.s:103    .text.FLASH_InstructionCacheCmd:0000000000000000 FLASH_InstructionCacheCmd
     /tmp/ccwx2lab.s:136    .text.FLASH_InstructionCacheCmd:000000000000001c $d
     /tmp/ccwx2lab.s:141    .text.FLASH_DataCacheCmd:0000000000000000 $t
     /tmp/ccwx2lab.s:147    .text.FLASH_DataCacheCmd:0000000000000000 FLASH_DataCacheCmd
     /tmp/ccwx2lab.s:180    .text.FLASH_DataCacheCmd:000000000000001c $d
     /tmp/ccwx2lab.s:185    .text.FLASH_InstructionCacheReset:0000000000000000 $t
     /tmp/ccwx2lab.s:191    .text.FLASH_InstructionCacheReset:0000000000000000 FLASH_InstructionCacheReset
     /tmp/ccwx2lab.s:210    .text.FLASH_InstructionCacheReset:000000000000000c $d
     /tmp/ccwx2lab.s:215    .text.FLASH_DataCacheReset:0000000000000000 $t
     /tmp/ccwx2lab.s:221    .text.FLASH_DataCacheReset:0000000000000000 FLASH_DataCacheReset
     /tmp/ccwx2lab.s:240    .text.FLASH_DataCacheReset:000000000000000c $d
     /tmp/ccwx2lab.s:245    .text.FLASH_Unlock:0000000000000000 $t
     /tmp/ccwx2lab.s:251    .text.FLASH_Unlock:0000000000000000 FLASH_Unlock
     /tmp/ccwx2lab.s:283    .text.FLASH_Unlock:0000000000000018 $d
     /tmp/ccwx2lab.s:289    .text.FLASH_Lock:0000000000000000 $t
     /tmp/ccwx2lab.s:295    .text.FLASH_Lock:0000000000000000 FLASH_Lock
     /tmp/ccwx2lab.s:314    .text.FLASH_Lock:000000000000000c $d
     /tmp/ccwx2lab.s:319    .text.FLASH_OB_Unlock:0000000000000000 $t
     /tmp/ccwx2lab.s:325    .text.FLASH_OB_Unlock:0000000000000000 FLASH_OB_Unlock
     /tmp/ccwx2lab.s:354    .text.FLASH_OB_Unlock:0000000000000018 $d
     /tmp/ccwx2lab.s:360    .text.FLASH_OB_Lock:0000000000000000 $t
     /tmp/ccwx2lab.s:366    .text.FLASH_OB_Lock:0000000000000000 FLASH_OB_Lock
     /tmp/ccwx2lab.s:385    .text.FLASH_OB_Lock:000000000000000c $d
     /tmp/ccwx2lab.s:390    .text.FLASH_OB_PCROPSelectionConfig:0000000000000000 $t
     /tmp/ccwx2lab.s:396    .text.FLASH_OB_PCROPSelectionConfig:0000000000000000 FLASH_OB_PCROPSelectionConfig
     /tmp/ccwx2lab.s:424    .text.FLASH_OB_PCROPSelectionConfig:0000000000000010 $d
     /tmp/ccwx2lab.s:429    .text.FLASH_OB_BootConfig:0000000000000000 $t
     /tmp/ccwx2lab.s:435    .text.FLASH_OB_BootConfig:0000000000000000 FLASH_OB_BootConfig
     /tmp/ccwx2lab.s:460    .text.FLASH_OB_BootConfig:0000000000000014 $d
     /tmp/ccwx2lab.s:465    .text.FLASH_OB_BORConfig:0000000000000000 $t
     /tmp/ccwx2lab.s:471    .text.FLASH_OB_BORConfig:0000000000000000 FLASH_OB_BORConfig
     /tmp/ccwx2lab.s:496    .text.FLASH_OB_BORConfig:0000000000000014 $d
     /tmp/ccwx2lab.s:501    .text.FLASH_OB_GetUser:0000000000000000 $t
     /tmp/ccwx2lab.s:507    .text.FLASH_OB_GetUser:0000000000000000 FLASH_OB_GetUser
     /tmp/ccwx2lab.s:524    .text.FLASH_OB_GetUser:000000000000000c $d
     /tmp/ccwx2lab.s:529    .text.FLASH_OB_GetWRP:0000000000000000 $t
     /tmp/ccwx2lab.s:535    .text.FLASH_OB_GetWRP:0000000000000000 FLASH_OB_GetWRP
     /tmp/ccwx2lab.s:552    .text.FLASH_OB_GetWRP:0000000000000008 $d
     /tmp/ccwx2lab.s:557    .text.FLASH_OB_GetWRP1:0000000000000000 $t
     /tmp/ccwx2lab.s:563    .text.FLASH_OB_GetWRP1:0000000000000000 FLASH_OB_GetWRP1
     /tmp/ccwx2lab.s:580    .text.FLASH_OB_GetWRP1:0000000000000008 $d
     /tmp/ccwx2lab.s:585    .text.FLASH_OB_GetPCROP:0000000000000000 $t
     /tmp/ccwx2lab.s:591    .text.FLASH_OB_GetPCROP:0000000000000000 FLASH_OB_GetPCROP
     /tmp/ccwx2lab.s:608    .text.FLASH_OB_GetPCROP:0000000000000008 $d
     /tmp/ccwx2lab.s:613    .text.FLASH_OB_GetPCROP1:0000000000000000 $t
     /tmp/ccwx2lab.s:619    .text.FLASH_OB_GetPCROP1:0000000000000000 FLASH_OB_GetPCROP1
     /tmp/ccwx2lab.s:636    .text.FLASH_OB_GetPCROP1:0000000000000008 $d
     /tmp/ccwx2lab.s:641    .text.FLASH_OB_GetRDP:0000000000000000 $t
ARM GAS  /tmp/ccwx2lab.s 			page 75


     /tmp/ccwx2lab.s:647    .text.FLASH_OB_GetRDP:0000000000000000 FLASH_OB_GetRDP
     /tmp/ccwx2lab.s:677    .text.FLASH_OB_GetRDP:0000000000000014 $d
     /tmp/ccwx2lab.s:682    .text.FLASH_OB_GetBOR:0000000000000000 $t
     /tmp/ccwx2lab.s:688    .text.FLASH_OB_GetBOR:0000000000000000 FLASH_OB_GetBOR
     /tmp/ccwx2lab.s:705    .text.FLASH_OB_GetBOR:000000000000000c $d
     /tmp/ccwx2lab.s:710    .text.FLASH_ITConfig:0000000000000000 $t
     /tmp/ccwx2lab.s:716    .text.FLASH_ITConfig:0000000000000000 FLASH_ITConfig
     /tmp/ccwx2lab.s:750    .text.FLASH_ITConfig:0000000000000018 $d
     /tmp/ccwx2lab.s:755    .text.FLASH_GetFlagStatus:0000000000000000 $t
     /tmp/ccwx2lab.s:761    .text.FLASH_GetFlagStatus:0000000000000000 FLASH_GetFlagStatus
     /tmp/ccwx2lab.s:794    .text.FLASH_GetFlagStatus:0000000000000010 $d
     /tmp/ccwx2lab.s:799    .text.FLASH_ClearFlag:0000000000000000 $t
     /tmp/ccwx2lab.s:805    .text.FLASH_ClearFlag:0000000000000000 FLASH_ClearFlag
     /tmp/ccwx2lab.s:823    .text.FLASH_ClearFlag:0000000000000008 $d
     /tmp/ccwx2lab.s:828    .text.FLASH_GetStatus:0000000000000000 $t
     /tmp/ccwx2lab.s:834    .text.FLASH_GetStatus:0000000000000000 FLASH_GetStatus
     /tmp/ccwx2lab.s:907    .text.FLASH_GetStatus:000000000000004c $d
     /tmp/ccwx2lab.s:912    .text.FLASH_WaitForLastOperation:0000000000000000 $t
     /tmp/ccwx2lab.s:918    .text.FLASH_WaitForLastOperation:0000000000000000 FLASH_WaitForLastOperation
     /tmp/ccwx2lab.s:970    .text.FLASH_EraseSector:0000000000000000 $t
     /tmp/ccwx2lab.s:976    .text.FLASH_EraseSector:0000000000000000 FLASH_EraseSector
     /tmp/ccwx2lab.s:1084   .text.FLASH_EraseSector:000000000000006c $d
     /tmp/ccwx2lab.s:1089   .text.FLASH_EraseAllSectors:0000000000000000 $t
     /tmp/ccwx2lab.s:1095   .text.FLASH_EraseAllSectors:0000000000000000 FLASH_EraseAllSectors
     /tmp/ccwx2lab.s:1197   .text.FLASH_EraseAllSectors:000000000000005c $d
     /tmp/ccwx2lab.s:1202   .text.FLASH_EraseAllBank1Sectors:0000000000000000 $t
     /tmp/ccwx2lab.s:1208   .text.FLASH_EraseAllBank1Sectors:0000000000000000 FLASH_EraseAllBank1Sectors
     /tmp/ccwx2lab.s:1310   .text.FLASH_EraseAllBank1Sectors:000000000000005c $d
     /tmp/ccwx2lab.s:1315   .text.FLASH_EraseAllBank2Sectors:0000000000000000 $t
     /tmp/ccwx2lab.s:1321   .text.FLASH_EraseAllBank2Sectors:0000000000000000 FLASH_EraseAllBank2Sectors
     /tmp/ccwx2lab.s:1423   .text.FLASH_EraseAllBank2Sectors:000000000000005c $d
     /tmp/ccwx2lab.s:1428   .text.FLASH_ProgramDoubleWord:0000000000000000 $t
     /tmp/ccwx2lab.s:1434   .text.FLASH_ProgramDoubleWord:0000000000000000 FLASH_ProgramDoubleWord
     /tmp/ccwx2lab.s:1507   .text.FLASH_ProgramDoubleWord:0000000000000040 $d
     /tmp/ccwx2lab.s:1512   .text.FLASH_ProgramWord:0000000000000000 $t
     /tmp/ccwx2lab.s:1518   .text.FLASH_ProgramWord:0000000000000000 FLASH_ProgramWord
     /tmp/ccwx2lab.s:1588   .text.FLASH_ProgramWord:000000000000003c $d
     /tmp/ccwx2lab.s:1593   .text.FLASH_ProgramHalfWord:0000000000000000 $t
     /tmp/ccwx2lab.s:1599   .text.FLASH_ProgramHalfWord:0000000000000000 FLASH_ProgramHalfWord
     /tmp/ccwx2lab.s:1669   .text.FLASH_ProgramHalfWord:000000000000003c $d
     /tmp/ccwx2lab.s:1674   .text.FLASH_ProgramByte:0000000000000000 $t
     /tmp/ccwx2lab.s:1680   .text.FLASH_ProgramByte:0000000000000000 FLASH_ProgramByte
     /tmp/ccwx2lab.s:1749   .text.FLASH_ProgramByte:0000000000000038 $d
     /tmp/ccwx2lab.s:1754   .text.FLASH_OB_WRPConfig:0000000000000000 $t
     /tmp/ccwx2lab.s:1760   .text.FLASH_OB_WRPConfig:0000000000000000 FLASH_OB_WRPConfig
     /tmp/ccwx2lab.s:1822   .text.FLASH_OB_WRPConfig:0000000000000030 $d
     /tmp/ccwx2lab.s:1827   .text.FLASH_OB_WRP1Config:0000000000000000 $t
     /tmp/ccwx2lab.s:1833   .text.FLASH_OB_WRP1Config:0000000000000000 FLASH_OB_WRP1Config
     /tmp/ccwx2lab.s:1895   .text.FLASH_OB_WRP1Config:0000000000000030 $d
     /tmp/ccwx2lab.s:1900   .text.FLASH_OB_PCROPConfig:0000000000000000 $t
     /tmp/ccwx2lab.s:1906   .text.FLASH_OB_PCROPConfig:0000000000000000 FLASH_OB_PCROPConfig
     /tmp/ccwx2lab.s:1969   .text.FLASH_OB_PCROPConfig:0000000000000030 $d
     /tmp/ccwx2lab.s:1974   .text.FLASH_OB_PCROP1Config:0000000000000000 $t
     /tmp/ccwx2lab.s:1980   .text.FLASH_OB_PCROP1Config:0000000000000000 FLASH_OB_PCROP1Config
     /tmp/ccwx2lab.s:2043   .text.FLASH_OB_PCROP1Config:0000000000000030 $d
     /tmp/ccwx2lab.s:2048   .text.FLASH_OB_RDPConfig:0000000000000000 $t
     /tmp/ccwx2lab.s:2054   .text.FLASH_OB_RDPConfig:0000000000000000 FLASH_OB_RDPConfig
ARM GAS  /tmp/ccwx2lab.s 			page 76


     /tmp/ccwx2lab.s:2092   .text.FLASH_OB_RDPConfig:0000000000000014 $d
     /tmp/ccwx2lab.s:2097   .text.FLASH_OB_UserConfig:0000000000000000 $t
     /tmp/ccwx2lab.s:2103   .text.FLASH_OB_UserConfig:0000000000000000 FLASH_OB_UserConfig
     /tmp/ccwx2lab.s:2165   .text.FLASH_OB_UserConfig:000000000000002c $d
     /tmp/ccwx2lab.s:2170   .text.FLASH_OB_Launch:0000000000000000 $t
     /tmp/ccwx2lab.s:2176   .text.FLASH_OB_Launch:0000000000000000 FLASH_OB_Launch
     /tmp/ccwx2lab.s:2205   .text.FLASH_OB_Launch:0000000000000014 $d

NO UNDEFINED SYMBOLS
