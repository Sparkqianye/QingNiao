ARM GAS  /tmp/ccMwpaqC.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_spi.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "./Library/stm32f4xx_spi.c"
  20              		.section	.text.SPI_I2S_DeInit,"ax",%progbits
  21              		.align	1
  22              		.global	SPI_I2S_DeInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	SPI_I2S_DeInit:
  28              	.LVL0:
  29              	.LFB123:
   1:./Library/stm32f4xx_spi.c **** /**
   2:./Library/stm32f4xx_spi.c ****   ******************************************************************************
   3:./Library/stm32f4xx_spi.c ****   * @file    stm32f4xx_spi.c
   4:./Library/stm32f4xx_spi.c ****   * @author  MCD Application Team
   5:./Library/stm32f4xx_spi.c ****   * @version V1.8.1
   6:./Library/stm32f4xx_spi.c ****   * @date    27-January-2022
   7:./Library/stm32f4xx_spi.c ****   * @brief   This file provides firmware functions to manage the following 
   8:./Library/stm32f4xx_spi.c ****   *          functionalities of the Serial peripheral interface (SPI):
   9:./Library/stm32f4xx_spi.c ****   *           + Initialization and Configuration
  10:./Library/stm32f4xx_spi.c ****   *           + Data transfers functions
  11:./Library/stm32f4xx_spi.c ****   *           + Hardware CRC Calculation
  12:./Library/stm32f4xx_spi.c ****   *           + DMA transfers management
  13:./Library/stm32f4xx_spi.c ****   *           + Interrupts and flags management 
  14:./Library/stm32f4xx_spi.c ****   *           
  15:./Library/stm32f4xx_spi.c **** @verbatim
  16:./Library/stm32f4xx_spi.c **** 
  17:./Library/stm32f4xx_spi.c ****  ===================================================================
  18:./Library/stm32f4xx_spi.c ****                   ##### How to use this driver #####
  19:./Library/stm32f4xx_spi.c ****  ===================================================================
  20:./Library/stm32f4xx_spi.c ****  [..]
  21:./Library/stm32f4xx_spi.c ****    (#) Enable peripheral clock using the following functions 
  22:./Library/stm32f4xx_spi.c ****        RCC_APB2PeriphClockCmd(RCC_APB2Periph_SPI1, ENABLE) for SPI1
  23:./Library/stm32f4xx_spi.c ****        RCC_APB1PeriphClockCmd(RCC_APB1Periph_SPI2, ENABLE) for SPI2
  24:./Library/stm32f4xx_spi.c ****        RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE) for SPI3
  25:./Library/stm32f4xx_spi.c ****        RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE) for SPI4
  26:./Library/stm32f4xx_spi.c ****        RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE) for SPI5
  27:./Library/stm32f4xx_spi.c ****        RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE) for SPI6.
  28:./Library/stm32f4xx_spi.c ****   
  29:./Library/stm32f4xx_spi.c ****    (#) Enable SCK, MOSI, MISO and NSS GPIO clocks using RCC_AHB1PeriphClockCmd()
ARM GAS  /tmp/ccMwpaqC.s 			page 2


  30:./Library/stm32f4xx_spi.c ****        function. In I2S mode, if an external clock source is used then the I2S 
  31:./Library/stm32f4xx_spi.c ****        CKIN pin GPIO clock should also be enabled.
  32:./Library/stm32f4xx_spi.c ****   
  33:./Library/stm32f4xx_spi.c ****    (#) Peripherals alternate function: 
  34:./Library/stm32f4xx_spi.c ****        (++) Connect the pin to the desired peripherals' Alternate Function (AF) 
  35:./Library/stm32f4xx_spi.c ****             using GPIO_PinAFConfig() function
  36:./Library/stm32f4xx_spi.c ****        (++) Configure the desired pin in alternate function by: 
  37:./Library/stm32f4xx_spi.c ****             GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  38:./Library/stm32f4xx_spi.c ****        (++) Select the type, pull-up/pull-down and output speed via GPIO_PuPd, 
  39:./Library/stm32f4xx_spi.c ****             GPIO_OType and GPIO_Speed members
  40:./Library/stm32f4xx_spi.c ****        (++) Call GPIO_Init() function In I2S mode, if an external clock source is 
  41:./Library/stm32f4xx_spi.c ****             used then the I2S CKIN pin should be also configured in Alternate 
  42:./Library/stm32f4xx_spi.c ****             function Push-pull pull-up mode. 
  43:./Library/stm32f4xx_spi.c ****           
  44:./Library/stm32f4xx_spi.c ****    (#) Program the Polarity, Phase, First Data, Baud Rate Prescaler, Slave 
  45:./Library/stm32f4xx_spi.c ****        Management, Peripheral Mode and CRC Polynomial values using the SPI_Init()
  46:./Library/stm32f4xx_spi.c ****        function.
  47:./Library/stm32f4xx_spi.c ****        In I2S mode, program the Mode, Standard, Data Format, MCLK Output, Audio 
  48:./Library/stm32f4xx_spi.c ****        frequency and Polarity using I2S_Init() function. For I2S mode, make sure 
  49:./Library/stm32f4xx_spi.c ****        that either:
  50:./Library/stm32f4xx_spi.c ****        (++) I2S PLL is configured using the functions 
  51:./Library/stm32f4xx_spi.c ****             RCC_I2SCLKConfig(RCC_I2S2CLKSource_PLLI2S), RCC_PLLI2SCmd(ENABLE) and 
  52:./Library/stm32f4xx_spi.c ****             RCC_GetFlagStatus(RCC_FLAG_PLLI2SRDY); or 
  53:./Library/stm32f4xx_spi.c ****        (++) External clock source is configured using the function 
  54:./Library/stm32f4xx_spi.c ****             RCC_I2SCLKConfig(RCC_I2S2CLKSource_Ext) and after setting correctly 
  55:./Library/stm32f4xx_spi.c ****             the define constant I2S_EXTERNAL_CLOCK_VAL in the stm32f4xx_conf.h file. 
  56:./Library/stm32f4xx_spi.c ****   
  57:./Library/stm32f4xx_spi.c ****    (#) Enable the NVIC and the corresponding interrupt using the function 
  58:./Library/stm32f4xx_spi.c ****        SPI_ITConfig() if you need to use interrupt mode. 
  59:./Library/stm32f4xx_spi.c ****   
  60:./Library/stm32f4xx_spi.c ****    (#) When using the DMA mode 
  61:./Library/stm32f4xx_spi.c ****        (++) Configure the DMA using DMA_Init() function
  62:./Library/stm32f4xx_spi.c ****        (++) Active the needed channel Request using SPI_I2S_DMACmd() function
  63:./Library/stm32f4xx_spi.c ****    
  64:./Library/stm32f4xx_spi.c ****    (#) Enable the SPI using the SPI_Cmd() function or enable the I2S using
  65:./Library/stm32f4xx_spi.c ****        I2S_Cmd().
  66:./Library/stm32f4xx_spi.c ****    
  67:./Library/stm32f4xx_spi.c ****    (#) Enable the DMA using the DMA_Cmd() function when using DMA mode. 
  68:./Library/stm32f4xx_spi.c ****   
  69:./Library/stm32f4xx_spi.c ****    (#) Optionally, you can enable/configure the following parameters without
  70:./Library/stm32f4xx_spi.c ****        re-initialization (i.e there is no need to call again SPI_Init() function):
  71:./Library/stm32f4xx_spi.c ****        (++) When bidirectional mode (SPI_Direction_1Line_Rx or SPI_Direction_1Line_Tx)
  72:./Library/stm32f4xx_spi.c ****             is programmed as Data direction parameter using the SPI_Init() function
  73:./Library/stm32f4xx_spi.c ****             it can be possible to switch between SPI_Direction_Tx or SPI_Direction_Rx
  74:./Library/stm32f4xx_spi.c ****             using the SPI_BiDirectionalLineConfig() function.
  75:./Library/stm32f4xx_spi.c ****        (++) When SPI_NSS_Soft is selected as Slave Select Management parameter 
  76:./Library/stm32f4xx_spi.c ****             using the SPI_Init() function it can be possible to manage the 
  77:./Library/stm32f4xx_spi.c ****             NSS internal signal using the SPI_NSSInternalSoftwareConfig() function.
  78:./Library/stm32f4xx_spi.c ****        (++) Reconfigure the data size using the SPI_DataSizeConfig() function  
  79:./Library/stm32f4xx_spi.c ****        (++) Enable or disable the SS output using the SPI_SSOutputCmd() function  
  80:./Library/stm32f4xx_spi.c ****             
  81:./Library/stm32f4xx_spi.c ****     (#) To use the CRC Hardware calculation feature refer to the Peripheral 
  82:./Library/stm32f4xx_spi.c ****         CRC hardware Calculation subsection.
  83:./Library/stm32f4xx_spi.c ****      
  84:./Library/stm32f4xx_spi.c ****   
  85:./Library/stm32f4xx_spi.c ****  [..] It is possible to use SPI in I2S full duplex mode, in this case, each SPI 
  86:./Library/stm32f4xx_spi.c ****       peripheral is able to manage sending and receiving data simultaneously
ARM GAS  /tmp/ccMwpaqC.s 			page 3


  87:./Library/stm32f4xx_spi.c ****       using two data lines. Each SPI peripheral has an extended block called I2Sxext
  88:./Library/stm32f4xx_spi.c ****       (ie. I2S2ext for SPI2 and I2S3ext for SPI3).
  89:./Library/stm32f4xx_spi.c ****       The extension block is not a full SPI IP, it is used only as I2S slave to
  90:./Library/stm32f4xx_spi.c ****       implement full duplex mode. The extension block uses the same clock sources
  91:./Library/stm32f4xx_spi.c ****       as its master.          
  92:./Library/stm32f4xx_spi.c ****       To configure I2S full duplex you have to:
  93:./Library/stm32f4xx_spi.c ****               
  94:./Library/stm32f4xx_spi.c ****       (#) Configure SPIx in I2S mode (I2S_Init() function) as described above. 
  95:./Library/stm32f4xx_spi.c ****              
  96:./Library/stm32f4xx_spi.c ****       (#) Call the I2S_FullDuplexConfig() function using the same structure passed to  
  97:./Library/stm32f4xx_spi.c ****           I2S_Init() function.
  98:./Library/stm32f4xx_spi.c ****               
  99:./Library/stm32f4xx_spi.c ****       (#) Call I2S_Cmd() for SPIx then for its extended block.
 100:./Library/stm32f4xx_spi.c ****             
 101:./Library/stm32f4xx_spi.c ****       (#) To configure interrupts or DMA requests and to get/clear flag status, 
 102:./Library/stm32f4xx_spi.c ****           use I2Sxext instance for the extension block.
 103:./Library/stm32f4xx_spi.c ****                
 104:./Library/stm32f4xx_spi.c ****  [..] Functions that can be called with I2Sxext instances are: I2S_Cmd(), 
 105:./Library/stm32f4xx_spi.c ****       I2S_FullDuplexConfig(), SPI_I2S_ReceiveData(), SPI_I2S_SendData(), 
 106:./Library/stm32f4xx_spi.c ****       SPI_I2S_DMACmd(), SPI_I2S_ITConfig(), SPI_I2S_GetFlagStatus(), 
 107:./Library/stm32f4xx_spi.c ****       SPI_I2S_ClearFlag(), SPI_I2S_GetITStatus() and SPI_I2S_ClearITPendingBit().
 108:./Library/stm32f4xx_spi.c ****                    
 109:./Library/stm32f4xx_spi.c ****       Example: To use SPI3 in Full duplex mode (SPI3 is Master Tx, I2S3ext is Slave Rx):
 110:./Library/stm32f4xx_spi.c ****               
 111:./Library/stm32f4xx_spi.c ****       RCC_APB1PeriphClockCmd(RCC_APB1Periph_SPI3, ENABLE);   
 112:./Library/stm32f4xx_spi.c ****       I2S_StructInit(&I2SInitStruct);
 113:./Library/stm32f4xx_spi.c ****       I2SInitStruct.Mode = I2S_Mode_MasterTx;     
 114:./Library/stm32f4xx_spi.c ****       I2S_Init(SPI3, &I2SInitStruct);
 115:./Library/stm32f4xx_spi.c ****       I2S_FullDuplexConfig(SPI3ext, &I2SInitStruct)
 116:./Library/stm32f4xx_spi.c ****       I2S_Cmd(SPI3, ENABLE);
 117:./Library/stm32f4xx_spi.c ****       I2S_Cmd(SPI3ext, ENABLE);
 118:./Library/stm32f4xx_spi.c ****       ...
 119:./Library/stm32f4xx_spi.c ****       while (SPI_I2S_GetFlagStatus(SPI2, SPI_FLAG_TXE) == RESET)
 120:./Library/stm32f4xx_spi.c ****       {}
 121:./Library/stm32f4xx_spi.c ****       SPI_I2S_SendData(SPI3, txdata[i]);
 122:./Library/stm32f4xx_spi.c ****       ...  
 123:./Library/stm32f4xx_spi.c ****       while (SPI_I2S_GetFlagStatus(I2S3ext, SPI_FLAG_RXNE) == RESET)
 124:./Library/stm32f4xx_spi.c ****       {}
 125:./Library/stm32f4xx_spi.c ****       rxdata[i] = SPI_I2S_ReceiveData(I2S3ext);
 126:./Library/stm32f4xx_spi.c ****       ...          
 127:./Library/stm32f4xx_spi.c ****                 
 128:./Library/stm32f4xx_spi.c ****  [..]       
 129:./Library/stm32f4xx_spi.c ****    (@) In I2S mode: if an external clock is used as source clock for the I2S,  
 130:./Library/stm32f4xx_spi.c ****        then the define I2S_EXTERNAL_CLOCK_VAL in file stm32f4xx_conf.h should 
 131:./Library/stm32f4xx_spi.c ****        be enabled and set to the value of the source clock frequency (in Hz).
 132:./Library/stm32f4xx_spi.c ****    
 133:./Library/stm32f4xx_spi.c ****    (@) In SPI mode: To use the SPI TI mode, call the function SPI_TIModeCmd() 
 134:./Library/stm32f4xx_spi.c ****        just after calling the function SPI_Init().
 135:./Library/stm32f4xx_spi.c ****   
 136:./Library/stm32f4xx_spi.c **** @endverbatim  
 137:./Library/stm32f4xx_spi.c ****   *                                  
 138:./Library/stm32f4xx_spi.c ****   ******************************************************************************
 139:./Library/stm32f4xx_spi.c ****   * @attention
 140:./Library/stm32f4xx_spi.c ****   *
 141:./Library/stm32f4xx_spi.c ****   * Copyright (c) 2016 STMicroelectronics.
 142:./Library/stm32f4xx_spi.c ****   * All rights reserved.
 143:./Library/stm32f4xx_spi.c ****   *
ARM GAS  /tmp/ccMwpaqC.s 			page 4


 144:./Library/stm32f4xx_spi.c ****   * This software is licensed under terms that can be found in the LICENSE file
 145:./Library/stm32f4xx_spi.c ****   * in the root directory of this software component.
 146:./Library/stm32f4xx_spi.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
 147:./Library/stm32f4xx_spi.c ****   *
 148:./Library/stm32f4xx_spi.c ****   ******************************************************************************
 149:./Library/stm32f4xx_spi.c ****   */
 150:./Library/stm32f4xx_spi.c **** 
 151:./Library/stm32f4xx_spi.c **** /* Includes ------------------------------------------------------------------*/
 152:./Library/stm32f4xx_spi.c **** #include "stm32f4xx_spi.h"
 153:./Library/stm32f4xx_spi.c **** #include "stm32f4xx_rcc.h"
 154:./Library/stm32f4xx_spi.c **** 
 155:./Library/stm32f4xx_spi.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 156:./Library/stm32f4xx_spi.c ****   * @{
 157:./Library/stm32f4xx_spi.c ****   */
 158:./Library/stm32f4xx_spi.c **** 
 159:./Library/stm32f4xx_spi.c **** /** @defgroup SPI 
 160:./Library/stm32f4xx_spi.c ****   * @brief SPI driver modules
 161:./Library/stm32f4xx_spi.c ****   * @{
 162:./Library/stm32f4xx_spi.c ****   */ 
 163:./Library/stm32f4xx_spi.c **** 
 164:./Library/stm32f4xx_spi.c **** /* Private typedef -----------------------------------------------------------*/
 165:./Library/stm32f4xx_spi.c **** /* Private define ------------------------------------------------------------*/
 166:./Library/stm32f4xx_spi.c **** 
 167:./Library/stm32f4xx_spi.c **** /* SPI registers Masks */
 168:./Library/stm32f4xx_spi.c **** #define CR1_CLEAR_MASK            ((uint16_t)0x3040)
 169:./Library/stm32f4xx_spi.c **** #define I2SCFGR_CLEAR_MASK        ((uint16_t)0xF040)
 170:./Library/stm32f4xx_spi.c **** 
 171:./Library/stm32f4xx_spi.c **** /* RCC PLLs masks */
 172:./Library/stm32f4xx_spi.c **** #define PLLCFGR_PPLR_MASK         ((uint32_t)0x70000000)
 173:./Library/stm32f4xx_spi.c **** #define PLLCFGR_PPLN_MASK         ((uint32_t)0x00007FC0)
 174:./Library/stm32f4xx_spi.c **** 
 175:./Library/stm32f4xx_spi.c **** #define SPI_CR2_FRF               ((uint16_t)0x0010)
 176:./Library/stm32f4xx_spi.c **** #define SPI_SR_TIFRFE             ((uint16_t)0x0100)
 177:./Library/stm32f4xx_spi.c **** 
 178:./Library/stm32f4xx_spi.c **** /* Private macro -------------------------------------------------------------*/
 179:./Library/stm32f4xx_spi.c **** /* Private variables ---------------------------------------------------------*/
 180:./Library/stm32f4xx_spi.c **** /* Private function prototypes -----------------------------------------------*/
 181:./Library/stm32f4xx_spi.c **** /* Private functions ---------------------------------------------------------*/
 182:./Library/stm32f4xx_spi.c **** 
 183:./Library/stm32f4xx_spi.c **** /** @defgroup SPI_Private_Functions
 184:./Library/stm32f4xx_spi.c ****   * @{
 185:./Library/stm32f4xx_spi.c ****   */
 186:./Library/stm32f4xx_spi.c **** 
 187:./Library/stm32f4xx_spi.c **** /** @defgroup SPI_Group1 Initialization and Configuration functions
 188:./Library/stm32f4xx_spi.c ****  *  @brief   Initialization and Configuration functions 
 189:./Library/stm32f4xx_spi.c ****  *
 190:./Library/stm32f4xx_spi.c **** @verbatim   
 191:./Library/stm32f4xx_spi.c ****  ===============================================================================
 192:./Library/stm32f4xx_spi.c ****              ##### Initialization and Configuration functions ##### 
 193:./Library/stm32f4xx_spi.c ****  ===============================================================================  
 194:./Library/stm32f4xx_spi.c ****  [..] This section provides a set of functions allowing to initialize the SPI 
 195:./Library/stm32f4xx_spi.c ****       Direction, SPI Mode, SPI Data Size, SPI Polarity, SPI Phase, SPI NSS 
 196:./Library/stm32f4xx_spi.c ****       Management, SPI Baud Rate Prescaler, SPI First Bit and SPI CRC Polynomial.
 197:./Library/stm32f4xx_spi.c ****   
 198:./Library/stm32f4xx_spi.c ****  [..] The SPI_Init() function follows the SPI configuration procedures for Master 
 199:./Library/stm32f4xx_spi.c ****       mode and Slave mode (details for these procedures are available in reference 
 200:./Library/stm32f4xx_spi.c ****       manual (RM0090)).
ARM GAS  /tmp/ccMwpaqC.s 			page 5


 201:./Library/stm32f4xx_spi.c ****   
 202:./Library/stm32f4xx_spi.c **** @endverbatim
 203:./Library/stm32f4xx_spi.c ****   * @{
 204:./Library/stm32f4xx_spi.c ****   */
 205:./Library/stm32f4xx_spi.c **** 
 206:./Library/stm32f4xx_spi.c **** /**
 207:./Library/stm32f4xx_spi.c ****   * @brief  De-initialize the SPIx peripheral registers to their default reset values.
 208:./Library/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
 209:./Library/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode.   
 210:./Library/stm32f4xx_spi.c ****   *         
 211:./Library/stm32f4xx_spi.c ****   * @note   The extended I2S blocks (ie. I2S2ext and I2S3ext blocks) are de-initialized
 212:./Library/stm32f4xx_spi.c ****   *         when the relative I2S peripheral is de-initialized (the extended block's clock
 213:./Library/stm32f4xx_spi.c ****   *         is managed by the I2S peripheral clock).
 214:./Library/stm32f4xx_spi.c ****   *             
 215:./Library/stm32f4xx_spi.c ****   * @retval None
 216:./Library/stm32f4xx_spi.c ****   */
 217:./Library/stm32f4xx_spi.c **** void SPI_I2S_DeInit(SPI_TypeDef* SPIx)
 218:./Library/stm32f4xx_spi.c **** {
  30              		.loc 1 218 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 218 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
 219:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
 220:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
  40              		.loc 1 220 3 is_stmt 1 view .LVU2
 221:./Library/stm32f4xx_spi.c **** 
 222:./Library/stm32f4xx_spi.c ****   if (SPIx == SPI1)
  41              		.loc 1 222 3 view .LVU3
  42              		.loc 1 222 6 is_stmt 0 view .LVU4
  43 0002 2A4B     		ldr	r3, .L15
  44 0004 9842     		cmp	r0, r3
  45 0006 0FD0     		beq	.L9
 223:./Library/stm32f4xx_spi.c ****   {
 224:./Library/stm32f4xx_spi.c ****     /* Enable SPI1 reset state */
 225:./Library/stm32f4xx_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI1, ENABLE);
 226:./Library/stm32f4xx_spi.c ****     /* Release SPI1 from reset state */
 227:./Library/stm32f4xx_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI1, DISABLE);
 228:./Library/stm32f4xx_spi.c ****   }
 229:./Library/stm32f4xx_spi.c ****   else if (SPIx == SPI2)
  46              		.loc 1 229 8 is_stmt 1 view .LVU5
  47              		.loc 1 229 11 is_stmt 0 view .LVU6
  48 0008 294B     		ldr	r3, .L15+4
  49 000a 9842     		cmp	r0, r3
  50 000c 17D0     		beq	.L10
 230:./Library/stm32f4xx_spi.c ****   {
 231:./Library/stm32f4xx_spi.c ****     /* Enable SPI2 reset state */
 232:./Library/stm32f4xx_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI2, ENABLE);
 233:./Library/stm32f4xx_spi.c ****     /* Release SPI2 from reset state */
 234:./Library/stm32f4xx_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI2, DISABLE);
 235:./Library/stm32f4xx_spi.c ****   }
 236:./Library/stm32f4xx_spi.c ****   else if (SPIx == SPI3)
ARM GAS  /tmp/ccMwpaqC.s 			page 6


  51              		.loc 1 236 8 is_stmt 1 view .LVU7
  52              		.loc 1 236 11 is_stmt 0 view .LVU8
  53 000e 294B     		ldr	r3, .L15+8
  54 0010 9842     		cmp	r0, r3
  55 0012 1FD0     		beq	.L11
 237:./Library/stm32f4xx_spi.c ****   {
 238:./Library/stm32f4xx_spi.c ****     /* Enable SPI3 reset state */
 239:./Library/stm32f4xx_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE);
 240:./Library/stm32f4xx_spi.c ****     /* Release SPI3 from reset state */
 241:./Library/stm32f4xx_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, DISABLE);
 242:./Library/stm32f4xx_spi.c ****   }
 243:./Library/stm32f4xx_spi.c ****   else if (SPIx == SPI4)
  56              		.loc 1 243 8 is_stmt 1 view .LVU9
  57              		.loc 1 243 11 is_stmt 0 view .LVU10
  58 0014 284B     		ldr	r3, .L15+12
  59 0016 9842     		cmp	r0, r3
  60 0018 27D0     		beq	.L12
 244:./Library/stm32f4xx_spi.c ****   {
 245:./Library/stm32f4xx_spi.c ****     /* Enable SPI4 reset state */
 246:./Library/stm32f4xx_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI4, ENABLE);
 247:./Library/stm32f4xx_spi.c ****     /* Release SPI4 from reset state */
 248:./Library/stm32f4xx_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI4, DISABLE);
 249:./Library/stm32f4xx_spi.c ****   }
 250:./Library/stm32f4xx_spi.c ****   else if (SPIx == SPI5)
  61              		.loc 1 250 8 is_stmt 1 view .LVU11
  62              		.loc 1 250 11 is_stmt 0 view .LVU12
  63 001a 284B     		ldr	r3, .L15+16
  64 001c 9842     		cmp	r0, r3
  65 001e 2FD0     		beq	.L13
 251:./Library/stm32f4xx_spi.c ****   {
 252:./Library/stm32f4xx_spi.c ****     /* Enable SPI5 reset state */
 253:./Library/stm32f4xx_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI5, ENABLE);
 254:./Library/stm32f4xx_spi.c ****     /* Release SPI5 from reset state */
 255:./Library/stm32f4xx_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI5, DISABLE);
 256:./Library/stm32f4xx_spi.c ****   }
 257:./Library/stm32f4xx_spi.c ****   else 
 258:./Library/stm32f4xx_spi.c ****   {
 259:./Library/stm32f4xx_spi.c ****     if (SPIx == SPI6)
  66              		.loc 1 259 5 is_stmt 1 view .LVU13
  67              		.loc 1 259 8 is_stmt 0 view .LVU14
  68 0020 274B     		ldr	r3, .L15+20
  69 0022 9842     		cmp	r0, r3
  70 0024 37D0     		beq	.L14
  71              	.LVL1:
  72              	.L1:
 260:./Library/stm32f4xx_spi.c ****     {
 261:./Library/stm32f4xx_spi.c ****       /* Enable SPI6 reset state */
 262:./Library/stm32f4xx_spi.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI6, ENABLE);
 263:./Library/stm32f4xx_spi.c ****       /* Release SPI6 from reset state */
 264:./Library/stm32f4xx_spi.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI6, DISABLE);
 265:./Library/stm32f4xx_spi.c ****     }
 266:./Library/stm32f4xx_spi.c ****   }
 267:./Library/stm32f4xx_spi.c **** }
  73              		.loc 1 267 1 view .LVU15
  74 0026 08BD     		pop	{r3, pc}
  75              	.LVL2:
  76              	.L9:
ARM GAS  /tmp/ccMwpaqC.s 			page 7


 225:./Library/stm32f4xx_spi.c ****     /* Release SPI1 from reset state */
  77              		.loc 1 225 5 is_stmt 1 view .LVU16
  78 0028 0121     		movs	r1, #1
  79 002a 4FF48050 		mov	r0, #4096
  80              	.LVL3:
 225:./Library/stm32f4xx_spi.c ****     /* Release SPI1 from reset state */
  81              		.loc 1 225 5 is_stmt 0 view .LVU17
  82 002e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  83              	.LVL4:
 227:./Library/stm32f4xx_spi.c ****   }
  84              		.loc 1 227 5 is_stmt 1 view .LVU18
  85 0032 0021     		movs	r1, #0
  86 0034 4FF48050 		mov	r0, #4096
  87 0038 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  88              	.LVL5:
  89 003c F3E7     		b	.L1
  90              	.LVL6:
  91              	.L10:
 232:./Library/stm32f4xx_spi.c ****     /* Release SPI2 from reset state */
  92              		.loc 1 232 5 view .LVU19
  93 003e 0121     		movs	r1, #1
  94 0040 4FF48040 		mov	r0, #16384
  95              	.LVL7:
 232:./Library/stm32f4xx_spi.c ****     /* Release SPI2 from reset state */
  96              		.loc 1 232 5 is_stmt 0 view .LVU20
  97 0044 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  98              	.LVL8:
 234:./Library/stm32f4xx_spi.c ****   }
  99              		.loc 1 234 5 is_stmt 1 view .LVU21
 100 0048 0021     		movs	r1, #0
 101 004a 4FF48040 		mov	r0, #16384
 102 004e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 103              	.LVL9:
 104 0052 E8E7     		b	.L1
 105              	.LVL10:
 106              	.L11:
 239:./Library/stm32f4xx_spi.c ****     /* Release SPI3 from reset state */
 107              		.loc 1 239 5 view .LVU22
 108 0054 0121     		movs	r1, #1
 109 0056 4FF40040 		mov	r0, #32768
 110              	.LVL11:
 239:./Library/stm32f4xx_spi.c ****     /* Release SPI3 from reset state */
 111              		.loc 1 239 5 is_stmt 0 view .LVU23
 112 005a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 113              	.LVL12:
 241:./Library/stm32f4xx_spi.c ****   }
 114              		.loc 1 241 5 is_stmt 1 view .LVU24
 115 005e 0021     		movs	r1, #0
 116 0060 4FF40040 		mov	r0, #32768
 117 0064 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 118              	.LVL13:
 119 0068 DDE7     		b	.L1
 120              	.LVL14:
 121              	.L12:
 246:./Library/stm32f4xx_spi.c ****     /* Release SPI4 from reset state */
 122              		.loc 1 246 5 view .LVU25
 123 006a 0121     		movs	r1, #1
ARM GAS  /tmp/ccMwpaqC.s 			page 8


 124 006c 4FF40050 		mov	r0, #8192
 125              	.LVL15:
 246:./Library/stm32f4xx_spi.c ****     /* Release SPI4 from reset state */
 126              		.loc 1 246 5 is_stmt 0 view .LVU26
 127 0070 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 128              	.LVL16:
 248:./Library/stm32f4xx_spi.c ****   }
 129              		.loc 1 248 5 is_stmt 1 view .LVU27
 130 0074 0021     		movs	r1, #0
 131 0076 4FF40050 		mov	r0, #8192
 132 007a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 133              	.LVL17:
 134 007e D2E7     		b	.L1
 135              	.LVL18:
 136              	.L13:
 253:./Library/stm32f4xx_spi.c ****     /* Release SPI5 from reset state */
 137              		.loc 1 253 5 view .LVU28
 138 0080 0121     		movs	r1, #1
 139 0082 4FF48010 		mov	r0, #1048576
 140              	.LVL19:
 253:./Library/stm32f4xx_spi.c ****     /* Release SPI5 from reset state */
 141              		.loc 1 253 5 is_stmt 0 view .LVU29
 142 0086 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 143              	.LVL20:
 255:./Library/stm32f4xx_spi.c ****   }
 144              		.loc 1 255 5 is_stmt 1 view .LVU30
 145 008a 0021     		movs	r1, #0
 146 008c 4FF48010 		mov	r0, #1048576
 147 0090 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 148              	.LVL21:
 149 0094 C7E7     		b	.L1
 150              	.LVL22:
 151              	.L14:
 262:./Library/stm32f4xx_spi.c ****       /* Release SPI6 from reset state */
 152              		.loc 1 262 7 view .LVU31
 153 0096 0121     		movs	r1, #1
 154 0098 4FF40010 		mov	r0, #2097152
 155              	.LVL23:
 262:./Library/stm32f4xx_spi.c ****       /* Release SPI6 from reset state */
 156              		.loc 1 262 7 is_stmt 0 view .LVU32
 157 009c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 158              	.LVL24:
 264:./Library/stm32f4xx_spi.c ****     }
 159              		.loc 1 264 7 is_stmt 1 view .LVU33
 160 00a0 0021     		movs	r1, #0
 161 00a2 4FF40010 		mov	r0, #2097152
 162 00a6 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 163              	.LVL25:
 164              		.loc 1 267 1 is_stmt 0 view .LVU34
 165 00aa BCE7     		b	.L1
 166              	.L16:
 167              		.align	2
 168              	.L15:
 169 00ac 00300140 		.word	1073819648
 170 00b0 00380040 		.word	1073756160
 171 00b4 003C0040 		.word	1073757184
 172 00b8 00340140 		.word	1073820672
ARM GAS  /tmp/ccMwpaqC.s 			page 9


 173 00bc 00500140 		.word	1073827840
 174 00c0 00540140 		.word	1073828864
 175              		.cfi_endproc
 176              	.LFE123:
 178              		.section	.text.SPI_Init,"ax",%progbits
 179              		.align	1
 180              		.global	SPI_Init
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 185              	SPI_Init:
 186              	.LVL26:
 187              	.LFB124:
 268:./Library/stm32f4xx_spi.c **** 
 269:./Library/stm32f4xx_spi.c **** /**
 270:./Library/stm32f4xx_spi.c ****   * @brief  Initializes the SPIx peripheral according to the specified 
 271:./Library/stm32f4xx_spi.c ****   *         parameters in the SPI_InitStruct.
 272:./Library/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 273:./Library/stm32f4xx_spi.c ****   * @param  SPI_InitStruct: pointer to a SPI_InitTypeDef structure that
 274:./Library/stm32f4xx_spi.c ****   *         contains the configuration information for the specified SPI peripheral.
 275:./Library/stm32f4xx_spi.c ****   * @retval None
 276:./Library/stm32f4xx_spi.c ****   */
 277:./Library/stm32f4xx_spi.c **** void SPI_Init(SPI_TypeDef* SPIx, SPI_InitTypeDef* SPI_InitStruct)
 278:./Library/stm32f4xx_spi.c **** {
 188              		.loc 1 278 1 is_stmt 1 view -0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		.loc 1 278 1 is_stmt 0 view .LVU36
 193 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 194              	.LCFI1:
 195              		.cfi_def_cfa_offset 24
 196              		.cfi_offset 4, -24
 197              		.cfi_offset 5, -20
 198              		.cfi_offset 6, -16
 199              		.cfi_offset 7, -12
 200              		.cfi_offset 8, -8
 201              		.cfi_offset 14, -4
 279:./Library/stm32f4xx_spi.c ****   uint16_t tmpreg = 0;
 202              		.loc 1 279 3 is_stmt 1 view .LVU37
 203              	.LVL27:
 280:./Library/stm32f4xx_spi.c ****   
 281:./Library/stm32f4xx_spi.c ****   /* check the parameters */
 282:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 204              		.loc 1 282 3 view .LVU38
 283:./Library/stm32f4xx_spi.c ****   
 284:./Library/stm32f4xx_spi.c ****   /* Check the SPI parameters */
 285:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_DIRECTION_MODE(SPI_InitStruct->SPI_Direction));
 205              		.loc 1 285 3 view .LVU39
 286:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_MODE(SPI_InitStruct->SPI_Mode));
 206              		.loc 1 286 3 view .LVU40
 287:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_DATASIZE(SPI_InitStruct->SPI_DataSize));
 207              		.loc 1 287 3 view .LVU41
 288:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_CPOL(SPI_InitStruct->SPI_CPOL));
 208              		.loc 1 288 3 view .LVU42
 289:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_CPHA(SPI_InitStruct->SPI_CPHA));
 209              		.loc 1 289 3 view .LVU43
ARM GAS  /tmp/ccMwpaqC.s 			page 10


 290:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_NSS(SPI_InitStruct->SPI_NSS));
 210              		.loc 1 290 3 view .LVU44
 291:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(SPI_InitStruct->SPI_BaudRatePrescaler));
 211              		.loc 1 291 3 view .LVU45
 292:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_FIRST_BIT(SPI_InitStruct->SPI_FirstBit));
 212              		.loc 1 292 3 view .LVU46
 293:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_CRC_POLYNOMIAL(SPI_InitStruct->SPI_CRCPolynomial));
 213              		.loc 1 293 3 view .LVU47
 294:./Library/stm32f4xx_spi.c **** 
 295:./Library/stm32f4xx_spi.c **** /*---------------------------- SPIx CR1 Configuration ------------------------*/
 296:./Library/stm32f4xx_spi.c ****   /* Get the SPIx CR1 value */
 297:./Library/stm32f4xx_spi.c ****   tmpreg = SPIx->CR1;
 214              		.loc 1 297 3 view .LVU48
 215              		.loc 1 297 10 is_stmt 0 view .LVU49
 216 0004 0288     		ldrh	r2, [r0]
 217              	.LVL28:
 298:./Library/stm32f4xx_spi.c ****   /* Clear BIDIMode, BIDIOE, RxONLY, SSM, SSI, LSBFirst, BR, MSTR, CPOL and CPHA bits */
 299:./Library/stm32f4xx_spi.c ****   tmpreg &= CR1_CLEAR_MASK;
 218              		.loc 1 299 3 is_stmt 1 view .LVU50
 219              		.loc 1 299 10 is_stmt 0 view .LVU51
 220 0006 02F44152 		and	r2, r2, #12352
 221              	.LVL29:
 300:./Library/stm32f4xx_spi.c ****   /* Configure SPIx: direction, NSS management, first transmitted bit, BaudRate prescaler
 301:./Library/stm32f4xx_spi.c ****      master/salve mode, CPOL and CPHA */
 302:./Library/stm32f4xx_spi.c ****   /* Set BIDImode, BIDIOE and RxONLY bits according to SPI_Direction value */
 303:./Library/stm32f4xx_spi.c ****   /* Set SSM, SSI and MSTR bits according to SPI_Mode and SPI_NSS values */
 304:./Library/stm32f4xx_spi.c ****   /* Set LSBFirst bit according to SPI_FirstBit value */
 305:./Library/stm32f4xx_spi.c ****   /* Set BR bits according to SPI_BaudRatePrescaler value */
 306:./Library/stm32f4xx_spi.c ****   /* Set CPOL bit according to SPI_CPOL value */
 307:./Library/stm32f4xx_spi.c ****   /* Set CPHA bit according to SPI_CPHA value */
 308:./Library/stm32f4xx_spi.c ****   tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 222              		.loc 1 308 3 is_stmt 1 view .LVU52
 223              		.loc 1 308 48 is_stmt 0 view .LVU53
 224 000a 0F88     		ldrh	r7, [r1]
 225              		.loc 1 308 80 view .LVU54
 226 000c B1F80280 		ldrh	r8, [r1, #2]
 309:./Library/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 227              		.loc 1 309 33 view .LVU55
 228 0010 8E88     		ldrh	r6, [r1, #4]
 229              		.loc 1 309 64 view .LVU56
 230 0012 CD88     		ldrh	r5, [r1, #6]
 310:./Library/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_CPHA | SPI_InitStruct->SPI_NSS |  
 231              		.loc 1 310 33 view .LVU57
 232 0014 0C89     		ldrh	r4, [r1, #8]
 233              		.loc 1 310 60 view .LVU58
 234 0016 B1F80AE0 		ldrh	lr, [r1, #10]
 311:./Library/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_BaudRatePrescaler | SPI_InitStruct->SPI_FirstBit);
 235              		.loc 1 311 33 view .LVU59
 236 001a B1F80CC0 		ldrh	ip, [r1, #12]
 237              		.loc 1 311 73 view .LVU60
 238 001e CB89     		ldrh	r3, [r1, #14]
 308:./Library/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 239              		.loc 1 308 13 view .LVU61
 240 0020 47EA0807 		orr	r7, r7, r8
 241 0024 3E43     		orrs	r6, r6, r7
 242 0026 3543     		orrs	r5, r5, r6
 243 0028 2C43     		orrs	r4, r4, r5
ARM GAS  /tmp/ccMwpaqC.s 			page 11


 244 002a 4EEA040E 		orr	lr, lr, r4
 245 002e 4CEA0E0C 		orr	ip, ip, lr
 246 0032 43EA0C03 		orr	r3, r3, ip
 308:./Library/stm32f4xx_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 247              		.loc 1 308 10 view .LVU62
 248 0036 1343     		orrs	r3, r3, r2
 249              	.LVL30:
 312:./Library/stm32f4xx_spi.c ****   /* Write to SPIx CR1 */
 313:./Library/stm32f4xx_spi.c ****   SPIx->CR1 = tmpreg;
 250              		.loc 1 313 3 is_stmt 1 view .LVU63
 251              		.loc 1 313 13 is_stmt 0 view .LVU64
 252 0038 0380     		strh	r3, [r0]	@ movhi
 314:./Library/stm32f4xx_spi.c **** 
 315:./Library/stm32f4xx_spi.c ****   /* Activate the SPI mode (Reset I2SMOD bit in I2SCFGR register) */
 316:./Library/stm32f4xx_spi.c ****   SPIx->I2SCFGR &= (uint16_t)~((uint16_t)SPI_I2SCFGR_I2SMOD);
 253              		.loc 1 316 3 is_stmt 1 view .LVU65
 254              		.loc 1 316 7 is_stmt 0 view .LVU66
 255 003a 838B     		ldrh	r3, [r0, #28]
 256              	.LVL31:
 257              		.loc 1 316 7 view .LVU67
 258 003c 9BB2     		uxth	r3, r3
 259              		.loc 1 316 17 view .LVU68
 260 003e 23F40063 		bic	r3, r3, #2048
 261 0042 9BB2     		uxth	r3, r3
 262 0044 8383     		strh	r3, [r0, #28]	@ movhi
 263              	.LVL32:
 317:./Library/stm32f4xx_spi.c **** /*---------------------------- SPIx CRCPOLY Configuration --------------------*/
 318:./Library/stm32f4xx_spi.c ****   /* Write to SPIx CRCPOLY */
 319:./Library/stm32f4xx_spi.c ****   SPIx->CRCPR = SPI_InitStruct->SPI_CRCPolynomial;
 264              		.loc 1 319 3 is_stmt 1 view .LVU69
 265              		.loc 1 319 31 is_stmt 0 view .LVU70
 266 0046 0B8A     		ldrh	r3, [r1, #16]
 267              		.loc 1 319 15 view .LVU71
 268 0048 0382     		strh	r3, [r0, #16]	@ movhi
 320:./Library/stm32f4xx_spi.c **** }
 269              		.loc 1 320 1 view .LVU72
 270 004a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 271              		.cfi_endproc
 272              	.LFE124:
 274              		.section	.text.I2S_Init,"ax",%progbits
 275              		.align	1
 276              		.global	I2S_Init
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 281              	I2S_Init:
 282              	.LVL33:
 283              	.LFB125:
 321:./Library/stm32f4xx_spi.c **** 
 322:./Library/stm32f4xx_spi.c **** /**
 323:./Library/stm32f4xx_spi.c ****   * @brief  Initializes the SPIx peripheral according to the specified 
 324:./Library/stm32f4xx_spi.c ****   *         parameters in the I2S_InitStruct.
 325:./Library/stm32f4xx_spi.c ****   * @param  SPIx: where x can be  2 or 3 to select the SPI peripheral (configured in I2S mode).
 326:./Library/stm32f4xx_spi.c ****   * @param  I2S_InitStruct: pointer to an I2S_InitTypeDef structure that
 327:./Library/stm32f4xx_spi.c ****   *         contains the configuration information for the specified SPI peripheral
 328:./Library/stm32f4xx_spi.c ****   *         configured in I2S mode.
 329:./Library/stm32f4xx_spi.c ****   *           
ARM GAS  /tmp/ccMwpaqC.s 			page 12


 330:./Library/stm32f4xx_spi.c ****   * @note   The function calculates the optimal prescaler needed to obtain the most 
 331:./Library/stm32f4xx_spi.c ****   *         accurate audio frequency (depending on the I2S clock source, the PLL values 
 332:./Library/stm32f4xx_spi.c ****   *         and the product configuration). But in case the prescaler value is greater 
 333:./Library/stm32f4xx_spi.c ****   *         than 511, the default value (0x02) will be configured instead.    
 334:./Library/stm32f4xx_spi.c ****   * 
 335:./Library/stm32f4xx_spi.c ****   * @note   if an external clock is used as source clock for the I2S, then the define
 336:./Library/stm32f4xx_spi.c ****   *         I2S_EXTERNAL_CLOCK_VAL in file stm32f4xx_conf.h should be enabled and set
 337:./Library/stm32f4xx_spi.c ****   *         to the value of the source clock frequency (in Hz).
 338:./Library/stm32f4xx_spi.c ****   *  
 339:./Library/stm32f4xx_spi.c ****   * @retval None
 340:./Library/stm32f4xx_spi.c ****   */
 341:./Library/stm32f4xx_spi.c **** void I2S_Init(SPI_TypeDef* SPIx, I2S_InitTypeDef* I2S_InitStruct)
 342:./Library/stm32f4xx_spi.c **** {
 284              		.loc 1 342 1 is_stmt 1 view -0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              		.loc 1 342 1 is_stmt 0 view .LVU74
 289 0000 30B5     		push	{r4, r5, lr}
 290              	.LCFI2:
 291              		.cfi_def_cfa_offset 12
 292              		.cfi_offset 4, -12
 293              		.cfi_offset 5, -8
 294              		.cfi_offset 14, -4
 343:./Library/stm32f4xx_spi.c ****   uint16_t tmpreg = 0, i2sdiv = 2, i2sodd = 0, packetlength = 1;
 295              		.loc 1 343 3 is_stmt 1 view .LVU75
 296              	.LVL34:
 344:./Library/stm32f4xx_spi.c ****   uint32_t tmp = 0, i2sclk = 0;
 297              		.loc 1 344 3 view .LVU76
 345:./Library/stm32f4xx_spi.c **** #ifndef I2S_EXTERNAL_CLOCK_VAL
 346:./Library/stm32f4xx_spi.c ****   uint32_t pllm = 0, plln = 0, pllr = 0;
 298              		.loc 1 346 3 view .LVU77
 347:./Library/stm32f4xx_spi.c **** #endif /* I2S_EXTERNAL_CLOCK_VAL */
 348:./Library/stm32f4xx_spi.c ****   
 349:./Library/stm32f4xx_spi.c ****   /* Check the I2S parameters */
 350:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_23_PERIPH(SPIx));
 299              		.loc 1 350 3 view .LVU78
 351:./Library/stm32f4xx_spi.c ****   assert_param(IS_I2S_MODE(I2S_InitStruct->I2S_Mode));
 300              		.loc 1 351 3 view .LVU79
 352:./Library/stm32f4xx_spi.c ****   assert_param(IS_I2S_STANDARD(I2S_InitStruct->I2S_Standard));
 301              		.loc 1 352 3 view .LVU80
 353:./Library/stm32f4xx_spi.c ****   assert_param(IS_I2S_DATA_FORMAT(I2S_InitStruct->I2S_DataFormat));
 302              		.loc 1 353 3 view .LVU81
 354:./Library/stm32f4xx_spi.c ****   assert_param(IS_I2S_MCLK_OUTPUT(I2S_InitStruct->I2S_MCLKOutput));
 303              		.loc 1 354 3 view .LVU82
 355:./Library/stm32f4xx_spi.c ****   assert_param(IS_I2S_AUDIO_FREQ(I2S_InitStruct->I2S_AudioFreq));
 304              		.loc 1 355 3 view .LVU83
 356:./Library/stm32f4xx_spi.c ****   assert_param(IS_I2S_CPOL(I2S_InitStruct->I2S_CPOL));  
 305              		.loc 1 356 3 view .LVU84
 357:./Library/stm32f4xx_spi.c **** 
 358:./Library/stm32f4xx_spi.c **** /*----------------------- SPIx I2SCFGR & I2SPR Configuration -----------------*/
 359:./Library/stm32f4xx_spi.c ****   /* Clear I2SMOD, I2SE, I2SCFG, PCMSYNC, I2SSTD, CKPOL, DATLEN and CHLEN bits */
 360:./Library/stm32f4xx_spi.c ****   SPIx->I2SCFGR &= I2SCFGR_CLEAR_MASK; 
 306              		.loc 1 360 3 view .LVU85
 307              		.loc 1 360 7 is_stmt 0 view .LVU86
 308 0002 838B     		ldrh	r3, [r0, #28]
 309 0004 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccMwpaqC.s 			page 13


 310              		.loc 1 360 17 view .LVU87
 311 0006 23F47B63 		bic	r3, r3, #4016
 312 000a 23F00F03 		bic	r3, r3, #15
 313 000e 9BB2     		uxth	r3, r3
 314 0010 8383     		strh	r3, [r0, #28]	@ movhi
 361:./Library/stm32f4xx_spi.c ****   SPIx->I2SPR = 0x0002;
 315              		.loc 1 361 3 is_stmt 1 view .LVU88
 316              		.loc 1 361 15 is_stmt 0 view .LVU89
 317 0012 0223     		movs	r3, #2
 318 0014 0384     		strh	r3, [r0, #32]	@ movhi
 362:./Library/stm32f4xx_spi.c ****   
 363:./Library/stm32f4xx_spi.c ****   /* Get the I2SCFGR register value */
 364:./Library/stm32f4xx_spi.c ****   tmpreg = SPIx->I2SCFGR;
 319              		.loc 1 364 3 is_stmt 1 view .LVU90
 320              		.loc 1 364 10 is_stmt 0 view .LVU91
 321 0016 828B     		ldrh	r2, [r0, #28]
 322 0018 92B2     		uxth	r2, r2
 323              	.LVL35:
 365:./Library/stm32f4xx_spi.c ****   
 366:./Library/stm32f4xx_spi.c ****   /* If the default value has to be written, reinitialize i2sdiv and i2sodd*/
 367:./Library/stm32f4xx_spi.c ****   if(I2S_InitStruct->I2S_AudioFreq == I2S_AudioFreq_Default)
 324              		.loc 1 367 3 is_stmt 1 view .LVU92
 325              		.loc 1 367 20 is_stmt 0 view .LVU93
 326 001a 8B68     		ldr	r3, [r1, #8]
 327              		.loc 1 367 5 view .LVU94
 328 001c 022B     		cmp	r3, #2
 329 001e 7DD0     		beq	.L29
 368:./Library/stm32f4xx_spi.c ****   {
 369:./Library/stm32f4xx_spi.c ****     i2sodd = (uint16_t)0;
 370:./Library/stm32f4xx_spi.c ****     i2sdiv = (uint16_t)2;   
 371:./Library/stm32f4xx_spi.c ****   }
 372:./Library/stm32f4xx_spi.c ****   /* If the requested audio frequency is not the default, compute the prescaler */
 373:./Library/stm32f4xx_spi.c ****   else
 374:./Library/stm32f4xx_spi.c ****   {
 375:./Library/stm32f4xx_spi.c ****     /* Check the frame length (For the Prescaler computing) *******************/
 376:./Library/stm32f4xx_spi.c ****     if(I2S_InitStruct->I2S_DataFormat == I2S_DataFormat_16b)
 330              		.loc 1 376 5 is_stmt 1 view .LVU95
 331              		.loc 1 376 22 is_stmt 0 view .LVU96
 332 0020 8B88     		ldrh	r3, [r1, #4]
 333              		.loc 1 376 7 view .LVU97
 334 0022 002B     		cmp	r3, #0
 335 0024 65D1     		bne	.L30
 377:./Library/stm32f4xx_spi.c ****     {
 378:./Library/stm32f4xx_spi.c ****       /* Packet length is 16 bits */
 379:./Library/stm32f4xx_spi.c ****       packetlength = 16;
 336              		.loc 1 379 20 view .LVU98
 337 0026 4FF0100C 		mov	ip, #16
 338              	.L21:
 339              	.LVL36:
 380:./Library/stm32f4xx_spi.c ****     }
 381:./Library/stm32f4xx_spi.c ****     else
 382:./Library/stm32f4xx_spi.c ****     {
 383:./Library/stm32f4xx_spi.c ****       /* Packet length is 32 bits */
 384:./Library/stm32f4xx_spi.c ****       packetlength = 32;
 385:./Library/stm32f4xx_spi.c ****     }
 386:./Library/stm32f4xx_spi.c **** 
 387:./Library/stm32f4xx_spi.c ****     if(I2S_InitStruct->I2S_Standard <= I2S_Standard_LSB)
ARM GAS  /tmp/ccMwpaqC.s 			page 14


 340              		.loc 1 387 5 is_stmt 1 view .LVU99
 341              		.loc 1 387 22 is_stmt 0 view .LVU100
 342 002a 4B88     		ldrh	r3, [r1, #2]
 343              		.loc 1 387 7 view .LVU101
 344 002c 202B     		cmp	r3, #32
 345 002e 03D8     		bhi	.L22
 388:./Library/stm32f4xx_spi.c ****     {
 389:./Library/stm32f4xx_spi.c ****       /* In I2S standard packet length is multiplied by 2 */
 390:./Library/stm32f4xx_spi.c ****       packetlength = packetlength * 2;
 346              		.loc 1 390 7 is_stmt 1 view .LVU102
 347              		.loc 1 390 20 is_stmt 0 view .LVU103
 348 0030 4FEA4C0C 		lsl	ip, ip, #1
 349              	.LVL37:
 350              		.loc 1 390 20 view .LVU104
 351 0034 1FFA8CFC 		uxth	ip, ip
 352              	.LVL38:
 353              	.L22:
 391:./Library/stm32f4xx_spi.c ****     }
 392:./Library/stm32f4xx_spi.c **** 
 393:./Library/stm32f4xx_spi.c ****     /* Get I2S source Clock frequency  ****************************************/
 394:./Library/stm32f4xx_spi.c ****       
 395:./Library/stm32f4xx_spi.c ****     /* If an external I2S clock has to be used, this define should be set  
 396:./Library/stm32f4xx_spi.c ****        in the project configuration or in the stm32f4xx_conf.h file */
 397:./Library/stm32f4xx_spi.c ****   #ifdef I2S_EXTERNAL_CLOCK_VAL     
 398:./Library/stm32f4xx_spi.c ****     /* Set external clock as I2S clock source */
 399:./Library/stm32f4xx_spi.c ****     if ((RCC->CFGR & RCC_CFGR_I2SSRC) == 0)
 400:./Library/stm32f4xx_spi.c ****     {
 401:./Library/stm32f4xx_spi.c ****       RCC->CFGR |= (uint32_t)RCC_CFGR_I2SSRC;
 402:./Library/stm32f4xx_spi.c ****     }
 403:./Library/stm32f4xx_spi.c ****     
 404:./Library/stm32f4xx_spi.c ****     /* Set the I2S clock to the external clock  value */
 405:./Library/stm32f4xx_spi.c ****     i2sclk = I2S_EXTERNAL_CLOCK_VAL;
 406:./Library/stm32f4xx_spi.c **** 
 407:./Library/stm32f4xx_spi.c ****   #else /* There is no define for External I2S clock source */
 408:./Library/stm32f4xx_spi.c ****     /* Set PLLI2S as I2S clock source */
 409:./Library/stm32f4xx_spi.c ****     if ((RCC->CFGR & RCC_CFGR_I2SSRC) != 0)
 354              		.loc 1 409 5 is_stmt 1 view .LVU105
 355              		.loc 1 409 13 is_stmt 0 view .LVU106
 356 0038 3A4B     		ldr	r3, .L34
 357 003a 9B68     		ldr	r3, [r3, #8]
 358              		.loc 1 409 8 view .LVU107
 359 003c 13F4000F 		tst	r3, #8388608
 360 0040 04D0     		beq	.L23
 410:./Library/stm32f4xx_spi.c ****     {
 411:./Library/stm32f4xx_spi.c ****       RCC->CFGR &= ~(uint32_t)RCC_CFGR_I2SSRC;
 361              		.loc 1 411 7 is_stmt 1 view .LVU108
 362              		.loc 1 411 10 is_stmt 0 view .LVU109
 363 0042 384C     		ldr	r4, .L34
 364 0044 A368     		ldr	r3, [r4, #8]
 365              		.loc 1 411 17 view .LVU110
 366 0046 23F40003 		bic	r3, r3, #8388608
 367 004a A360     		str	r3, [r4, #8]
 368              	.L23:
 412:./Library/stm32f4xx_spi.c ****     }    
 413:./Library/stm32f4xx_spi.c ****     
 414:./Library/stm32f4xx_spi.c ****     /* Get the PLLI2SN value */
 415:./Library/stm32f4xx_spi.c ****     plln = (uint32_t)(((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SN) >> 6) & \
ARM GAS  /tmp/ccMwpaqC.s 			page 15


 369              		.loc 1 415 5 is_stmt 1 view .LVU111
 370              		.loc 1 415 28 is_stmt 0 view .LVU112
 371 004c 354C     		ldr	r4, .L34
 372 004e D4F88430 		ldr	r3, [r4, #132]
 373              		.loc 1 415 10 view .LVU113
 374 0052 C3F3881E 		ubfx	lr, r3, #6, #9
 375              	.LVL39:
 416:./Library/stm32f4xx_spi.c ****                       (RCC_PLLI2SCFGR_PLLI2SN >> 6));
 417:./Library/stm32f4xx_spi.c ****     
 418:./Library/stm32f4xx_spi.c ****     /* Get the PLLI2SR value */
 419:./Library/stm32f4xx_spi.c ****     pllr = (uint32_t)(((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> 28) & \
 376              		.loc 1 419 5 is_stmt 1 view .LVU114
 377              		.loc 1 419 28 is_stmt 0 view .LVU115
 378 0056 D4F88430 		ldr	r3, [r4, #132]
 379              		.loc 1 419 10 view .LVU116
 380 005a C3F30273 		ubfx	r3, r3, #28, #3
 381              	.LVL40:
 420:./Library/stm32f4xx_spi.c ****                       (RCC_PLLI2SCFGR_PLLI2SR >> 28));
 421:./Library/stm32f4xx_spi.c ****     
 422:./Library/stm32f4xx_spi.c ****     /* Get the PLLM value */
 423:./Library/stm32f4xx_spi.c ****     pllm = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM);
 382              		.loc 1 423 5 is_stmt 1 view .LVU117
 383              		.loc 1 423 26 is_stmt 0 view .LVU118
 384 005e 6568     		ldr	r5, [r4, #4]
 385              		.loc 1 423 10 view .LVU119
 386 0060 05F03F05 		and	r5, r5, #63
 387              	.LVL41:
 424:./Library/stm32f4xx_spi.c **** 
 425:./Library/stm32f4xx_spi.c ****     if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)
 388              		.loc 1 425 5 is_stmt 1 view .LVU120
 389              		.loc 1 425 12 is_stmt 0 view .LVU121
 390 0064 6468     		ldr	r4, [r4, #4]
 391              		.loc 1 425 7 view .LVU122
 392 0066 14F4800F 		tst	r4, #4194304
 393 006a 45D0     		beq	.L24
 426:./Library/stm32f4xx_spi.c ****     {
 427:./Library/stm32f4xx_spi.c ****       /* Get the I2S source clock value */
 428:./Library/stm32f4xx_spi.c ****       i2sclk = (uint32_t)(((HSE_VALUE / pllm) * plln) / pllr);
 394              		.loc 1 428 7 is_stmt 1 view .LVU123
 395              		.loc 1 428 39 is_stmt 0 view .LVU124
 396 006c 2E4C     		ldr	r4, .L34+4
 397 006e B4FBF5F4 		udiv	r4, r4, r5
 398              		.loc 1 428 47 view .LVU125
 399 0072 0EFB04F4 		mul	r4, lr, r4
 400              		.loc 1 428 14 view .LVU126
 401 0076 B4FBF3F3 		udiv	r3, r4, r3
 402              	.LVL42:
 403              	.L25:
 429:./Library/stm32f4xx_spi.c ****     }
 430:./Library/stm32f4xx_spi.c ****     else
 431:./Library/stm32f4xx_spi.c ****     { /* Get the I2S source clock value */
 432:./Library/stm32f4xx_spi.c ****       i2sclk = (uint32_t)(((HSI_VALUE / pllm) * plln) / pllr);
 433:./Library/stm32f4xx_spi.c ****     }
 434:./Library/stm32f4xx_spi.c ****   #endif /* I2S_EXTERNAL_CLOCK_VAL */
 435:./Library/stm32f4xx_spi.c ****     
 436:./Library/stm32f4xx_spi.c ****     /* Compute the Real divider depending on the MCLK output state, with a floating point */
 437:./Library/stm32f4xx_spi.c ****     if(I2S_InitStruct->I2S_MCLKOutput == I2S_MCLKOutput_Enable)
ARM GAS  /tmp/ccMwpaqC.s 			page 16


 404              		.loc 1 437 5 is_stmt 1 view .LVU127
 405              		.loc 1 437 22 is_stmt 0 view .LVU128
 406 007a CC88     		ldrh	r4, [r1, #6]
 407              		.loc 1 437 7 view .LVU129
 408 007c B4F5007F 		cmp	r4, #512
 409 0080 42D0     		beq	.L33
 438:./Library/stm32f4xx_spi.c ****     {
 439:./Library/stm32f4xx_spi.c ****       /* MCLK output is enabled */
 440:./Library/stm32f4xx_spi.c ****       tmp = (uint16_t)(((((i2sclk / 256) * 10) / I2S_InitStruct->I2S_AudioFreq)) + 5);
 441:./Library/stm32f4xx_spi.c ****     }
 442:./Library/stm32f4xx_spi.c ****     else
 443:./Library/stm32f4xx_spi.c ****     {
 444:./Library/stm32f4xx_spi.c ****       /* MCLK output is disabled */
 445:./Library/stm32f4xx_spi.c ****       tmp = (uint16_t)(((((i2sclk / (32 * packetlength)) *10 ) / I2S_InitStruct->I2S_AudioFreq)) + 
 410              		.loc 1 445 7 is_stmt 1 view .LVU130
 411              		.loc 1 445 41 is_stmt 0 view .LVU131
 412 0082 4FEA4C1C 		lsl	ip, ip, #5
 413              	.LVL43:
 414              		.loc 1 445 35 view .LVU132
 415 0086 B3FBFCF3 		udiv	r3, r3, ip
 416              	.LVL44:
 417              		.loc 1 445 58 view .LVU133
 418 008a 03EB8303 		add	r3, r3, r3, lsl #2
 419 008e 5B00     		lsls	r3, r3, #1
 420              		.loc 1 445 80 view .LVU134
 421 0090 8C68     		ldr	r4, [r1, #8]
 422              		.loc 1 445 64 view .LVU135
 423 0092 B3FBF4F3 		udiv	r3, r3, r4
 424              		.loc 1 445 13 view .LVU136
 425 0096 0533     		adds	r3, r3, #5
 426 0098 9BB2     		uxth	r3, r3
 427              	.LVL45:
 428              	.L27:
 446:./Library/stm32f4xx_spi.c ****     }
 447:./Library/stm32f4xx_spi.c ****     
 448:./Library/stm32f4xx_spi.c ****     /* Remove the flatting point */
 449:./Library/stm32f4xx_spi.c ****     tmp = tmp / 10;  
 429              		.loc 1 449 5 is_stmt 1 view .LVU137
 430              		.loc 1 449 9 is_stmt 0 view .LVU138
 431 009a 244C     		ldr	r4, .L34+8
 432 009c A4FB0343 		umull	r4, r3, r4, r3
 433              	.LVL46:
 450:./Library/stm32f4xx_spi.c ****       
 451:./Library/stm32f4xx_spi.c ****     /* Check the parity of the divider */
 452:./Library/stm32f4xx_spi.c ****     i2sodd = (uint16_t)(tmp & (uint16_t)0x0001);
 434              		.loc 1 452 5 is_stmt 1 view .LVU139
 435              		.loc 1 452 12 is_stmt 0 view .LVU140
 436 00a0 C3F3C00E 		ubfx	lr, r3, #3, #1
 437              	.LVL47:
 453:./Library/stm32f4xx_spi.c ****    
 454:./Library/stm32f4xx_spi.c ****     /* Compute the i2sdiv prescaler */
 455:./Library/stm32f4xx_spi.c ****     i2sdiv = (uint16_t)((tmp - i2sodd) / 2);
 438              		.loc 1 455 5 is_stmt 1 view .LVU141
 439              		.loc 1 455 30 is_stmt 0 view .LVU142
 440 00a4 CEEBD303 		rsb	r3, lr, r3, lsr #3
 441              	.LVL48:
 442              		.loc 1 455 12 view .LVU143
ARM GAS  /tmp/ccMwpaqC.s 			page 17


 443 00a8 C3F34F03 		ubfx	r3, r3, #1, #16
 444              	.LVL49:
 456:./Library/stm32f4xx_spi.c ****    
 457:./Library/stm32f4xx_spi.c ****     /* Get the Mask for the Odd bit (SPI_I2SPR[8]) register */
 458:./Library/stm32f4xx_spi.c ****     i2sodd = (uint16_t) (i2sodd << 8);
 445              		.loc 1 458 5 is_stmt 1 view .LVU144
 446              		.loc 1 458 12 is_stmt 0 view .LVU145
 447 00ac 4FEA0E2E 		lsl	lr, lr, #8
 448              	.LVL50:
 449              	.L20:
 459:./Library/stm32f4xx_spi.c ****   }
 460:./Library/stm32f4xx_spi.c **** 
 461:./Library/stm32f4xx_spi.c ****   /* Test if the divider is 1 or 0 or greater than 0xFF */
 462:./Library/stm32f4xx_spi.c ****   if ((i2sdiv < 2) || (i2sdiv > 0xFF))
 450              		.loc 1 462 3 is_stmt 1 view .LVU146
 451              		.loc 1 462 20 is_stmt 0 view .LVU147
 452 00b0 A3F1020C 		sub	ip, r3, #2
 453 00b4 1FFA8CFC 		uxth	ip, ip
 454              		.loc 1 462 6 view .LVU148
 455 00b8 BCF1FD0F 		cmp	ip, #253
 456 00bc 02D9     		bls	.L28
 463:./Library/stm32f4xx_spi.c ****   {
 464:./Library/stm32f4xx_spi.c ****     /* Set the default values */
 465:./Library/stm32f4xx_spi.c ****     i2sdiv = 2;
 466:./Library/stm32f4xx_spi.c ****     i2sodd = 0;
 457              		.loc 1 466 12 view .LVU149
 458 00be 4FF0000E 		mov	lr, #0
 459              	.LVL51:
 465:./Library/stm32f4xx_spi.c ****     i2sodd = 0;
 460              		.loc 1 465 12 view .LVU150
 461 00c2 0223     		movs	r3, #2
 462              	.LVL52:
 463              	.L28:
 467:./Library/stm32f4xx_spi.c ****   }
 468:./Library/stm32f4xx_spi.c **** 
 469:./Library/stm32f4xx_spi.c ****   /* Write to SPIx I2SPR register the computed value */
 470:./Library/stm32f4xx_spi.c ****   SPIx->I2SPR = (uint16_t)((uint16_t)i2sdiv | (uint16_t)(i2sodd | (uint16_t)I2S_InitStruct->I2S_MCL
 464              		.loc 1 470 3 is_stmt 1 view .LVU151
 465              		.loc 1 470 91 is_stmt 0 view .LVU152
 466 00c4 B1F806C0 		ldrh	ip, [r1, #6]
 467              		.loc 1 470 47 view .LVU153
 468 00c8 4CEA0E0C 		orr	ip, ip, lr
 469              		.loc 1 470 17 view .LVU154
 470 00cc 4CEA0303 		orr	r3, ip, r3
 471              	.LVL53:
 472              		.loc 1 470 15 view .LVU155
 473 00d0 0384     		strh	r3, [r0, #32]	@ movhi
 471:./Library/stm32f4xx_spi.c ****  
 472:./Library/stm32f4xx_spi.c ****   /* Configure the I2S with the SPI_InitStruct values */
 473:./Library/stm32f4xx_spi.c ****   tmpreg |= (uint16_t)((uint16_t)SPI_I2SCFGR_I2SMOD | (uint16_t)(I2S_InitStruct->I2S_Mode | \
 474              		.loc 1 473 3 is_stmt 1 view .LVU156
 475              		.loc 1 473 80 is_stmt 0 view .LVU157
 476 00d2 0B88     		ldrh	r3, [r1]
 474:./Library/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 477              		.loc 1 474 44 view .LVU158
 478 00d4 B1F802C0 		ldrh	ip, [r1, #2]
 479              		.loc 1 474 86 view .LVU159
ARM GAS  /tmp/ccMwpaqC.s 			page 18


 480 00d8 B1F804E0 		ldrh	lr, [r1, #4]
 481              	.LVL54:
 475:./Library/stm32f4xx_spi.c ****                   (uint16_t)I2S_InitStruct->I2S_CPOL))));
 482              		.loc 1 475 43 view .LVU160
 483 00dc 8989     		ldrh	r1, [r1, #12]
 484              	.LVL55:
 474:./Library/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 485              		.loc 1 474 61 view .LVU161
 486 00de 4EEA0101 		orr	r1, lr, r1
 474:./Library/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 487              		.loc 1 474 19 view .LVU162
 488 00e2 4CEA0101 		orr	r1, ip, r1
 473:./Library/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 489              		.loc 1 473 55 view .LVU163
 490 00e6 0B43     		orrs	r3, r3, r1
 473:./Library/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 491              		.loc 1 473 10 view .LVU164
 492 00e8 1343     		orrs	r3, r3, r2
 493 00ea 43F40063 		orr	r3, r3, #2048
 494              	.LVL56:
 476:./Library/stm32f4xx_spi.c ****  
 477:./Library/stm32f4xx_spi.c **** #if defined(SPI_I2SCFGR_ASTRTEN)
 478:./Library/stm32f4xx_spi.c ****   if((I2S_InitStruct->I2S_Standard  == I2S_Standard_PCMShort) || (I2S_InitStruct->I2S_Standard  == 
 479:./Library/stm32f4xx_spi.c ****   {
 480:./Library/stm32f4xx_spi.c ****     /* Write to SPIx I2SCFGR */  
 481:./Library/stm32f4xx_spi.c ****     SPIx->I2SCFGR = tmpreg | SPI_I2SCFGR_ASTRTEN;
 482:./Library/stm32f4xx_spi.c ****   }
 483:./Library/stm32f4xx_spi.c **** #else
 484:./Library/stm32f4xx_spi.c ****   /* Write to SPIx I2SCFGR */  
 485:./Library/stm32f4xx_spi.c ****   SPIx->I2SCFGR = tmpreg ;
 495              		.loc 1 485 3 is_stmt 1 view .LVU165
 496              		.loc 1 485 17 is_stmt 0 view .LVU166
 497 00ee 8383     		strh	r3, [r0, #28]	@ movhi
 486:./Library/stm32f4xx_spi.c **** #endif 
 487:./Library/stm32f4xx_spi.c **** }
 498              		.loc 1 487 1 view .LVU167
 499 00f0 30BD     		pop	{r4, r5, pc}
 500              	.LVL57:
 501              	.L30:
 384:./Library/stm32f4xx_spi.c ****     }
 502              		.loc 1 384 20 view .LVU168
 503 00f2 4FF0200C 		mov	ip, #32
 504 00f6 98E7     		b	.L21
 505              	.LVL58:
 506              	.L24:
 432:./Library/stm32f4xx_spi.c ****     }
 507              		.loc 1 432 7 is_stmt 1 view .LVU169
 432:./Library/stm32f4xx_spi.c ****     }
 508              		.loc 1 432 39 is_stmt 0 view .LVU170
 509 00f8 0D4C     		ldr	r4, .L34+12
 510 00fa B4FBF5F4 		udiv	r4, r4, r5
 432:./Library/stm32f4xx_spi.c ****     }
 511              		.loc 1 432 47 view .LVU171
 512 00fe 0EFB04F4 		mul	r4, lr, r4
 432:./Library/stm32f4xx_spi.c ****     }
 513              		.loc 1 432 14 view .LVU172
 514 0102 B4FBF3F3 		udiv	r3, r4, r3
ARM GAS  /tmp/ccMwpaqC.s 			page 19


 515              	.LVL59:
 432:./Library/stm32f4xx_spi.c ****     }
 516              		.loc 1 432 14 view .LVU173
 517 0106 B8E7     		b	.L25
 518              	.L33:
 440:./Library/stm32f4xx_spi.c ****     }
 519              		.loc 1 440 7 is_stmt 1 view .LVU174
 440:./Library/stm32f4xx_spi.c ****     }
 520              		.loc 1 440 35 is_stmt 0 view .LVU175
 521 0108 1B0A     		lsrs	r3, r3, #8
 522              	.LVL60:
 440:./Library/stm32f4xx_spi.c ****     }
 523              		.loc 1 440 42 view .LVU176
 524 010a 03EB8303 		add	r3, r3, r3, lsl #2
 525 010e 5B00     		lsls	r3, r3, #1
 440:./Library/stm32f4xx_spi.c ****     }
 526              		.loc 1 440 64 view .LVU177
 527 0110 8C68     		ldr	r4, [r1, #8]
 440:./Library/stm32f4xx_spi.c ****     }
 528              		.loc 1 440 48 view .LVU178
 529 0112 B3FBF4F3 		udiv	r3, r3, r4
 440:./Library/stm32f4xx_spi.c ****     }
 530              		.loc 1 440 13 view .LVU179
 531 0116 0533     		adds	r3, r3, #5
 532 0118 9BB2     		uxth	r3, r3
 533              	.LVL61:
 440:./Library/stm32f4xx_spi.c ****     }
 534              		.loc 1 440 13 view .LVU180
 535 011a BEE7     		b	.L27
 536              	.LVL62:
 537              	.L29:
 369:./Library/stm32f4xx_spi.c ****     i2sdiv = (uint16_t)2;   
 538              		.loc 1 369 12 view .LVU181
 539 011c 4FF0000E 		mov	lr, #0
 370:./Library/stm32f4xx_spi.c ****   }
 540              		.loc 1 370 12 view .LVU182
 541 0120 0223     		movs	r3, #2
 542 0122 C5E7     		b	.L20
 543              	.L35:
 544              		.align	2
 545              	.L34:
 546 0124 00380240 		.word	1073887232
 547 0128 40787D01 		.word	25000000
 548 012c CDCCCCCC 		.word	-858993459
 549 0130 0024F400 		.word	16000000
 550              		.cfi_endproc
 551              	.LFE125:
 553              		.section	.text.SPI_StructInit,"ax",%progbits
 554              		.align	1
 555              		.global	SPI_StructInit
 556              		.syntax unified
 557              		.thumb
 558              		.thumb_func
 560              	SPI_StructInit:
 561              	.LVL63:
 562              	.LFB126:
 488:./Library/stm32f4xx_spi.c **** 
ARM GAS  /tmp/ccMwpaqC.s 			page 20


 489:./Library/stm32f4xx_spi.c **** /**
 490:./Library/stm32f4xx_spi.c ****   * @brief  Fills each SPI_InitStruct member with its default value.
 491:./Library/stm32f4xx_spi.c ****   * @param  SPI_InitStruct: pointer to a SPI_InitTypeDef structure which will be initialized.
 492:./Library/stm32f4xx_spi.c ****   * @retval None
 493:./Library/stm32f4xx_spi.c ****   */
 494:./Library/stm32f4xx_spi.c **** void SPI_StructInit(SPI_InitTypeDef* SPI_InitStruct)
 495:./Library/stm32f4xx_spi.c **** {
 563              		.loc 1 495 1 is_stmt 1 view -0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 0
 566              		@ frame_needed = 0, uses_anonymous_args = 0
 567              		@ link register save eliminated.
 496:./Library/stm32f4xx_spi.c **** /*--------------- Reset SPI init structure parameters values -----------------*/
 497:./Library/stm32f4xx_spi.c ****   /* Initialize the SPI_Direction member */
 498:./Library/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_Direction = SPI_Direction_2Lines_FullDuplex;
 568              		.loc 1 498 3 view .LVU184
 569              		.loc 1 498 33 is_stmt 0 view .LVU185
 570 0000 0023     		movs	r3, #0
 571 0002 0380     		strh	r3, [r0]	@ movhi
 499:./Library/stm32f4xx_spi.c ****   /* initialize the SPI_Mode member */
 500:./Library/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_Mode = SPI_Mode_Slave;
 572              		.loc 1 500 3 is_stmt 1 view .LVU186
 573              		.loc 1 500 28 is_stmt 0 view .LVU187
 574 0004 4380     		strh	r3, [r0, #2]	@ movhi
 501:./Library/stm32f4xx_spi.c ****   /* initialize the SPI_DataSize member */
 502:./Library/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_DataSize = SPI_DataSize_8b;
 575              		.loc 1 502 3 is_stmt 1 view .LVU188
 576              		.loc 1 502 32 is_stmt 0 view .LVU189
 577 0006 8380     		strh	r3, [r0, #4]	@ movhi
 503:./Library/stm32f4xx_spi.c ****   /* Initialize the SPI_CPOL member */
 504:./Library/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_CPOL = SPI_CPOL_Low;
 578              		.loc 1 504 3 is_stmt 1 view .LVU190
 579              		.loc 1 504 28 is_stmt 0 view .LVU191
 580 0008 C380     		strh	r3, [r0, #6]	@ movhi
 505:./Library/stm32f4xx_spi.c ****   /* Initialize the SPI_CPHA member */
 506:./Library/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_CPHA = SPI_CPHA_1Edge;
 581              		.loc 1 506 3 is_stmt 1 view .LVU192
 582              		.loc 1 506 28 is_stmt 0 view .LVU193
 583 000a 0381     		strh	r3, [r0, #8]	@ movhi
 507:./Library/stm32f4xx_spi.c ****   /* Initialize the SPI_NSS member */
 508:./Library/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_NSS = SPI_NSS_Hard;
 584              		.loc 1 508 3 is_stmt 1 view .LVU194
 585              		.loc 1 508 27 is_stmt 0 view .LVU195
 586 000c 4381     		strh	r3, [r0, #10]	@ movhi
 509:./Library/stm32f4xx_spi.c ****   /* Initialize the SPI_BaudRatePrescaler member */
 510:./Library/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_2;
 587              		.loc 1 510 3 is_stmt 1 view .LVU196
 588              		.loc 1 510 41 is_stmt 0 view .LVU197
 589 000e 8381     		strh	r3, [r0, #12]	@ movhi
 511:./Library/stm32f4xx_spi.c ****   /* Initialize the SPI_FirstBit member */
 512:./Library/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_FirstBit = SPI_FirstBit_MSB;
 590              		.loc 1 512 3 is_stmt 1 view .LVU198
 591              		.loc 1 512 32 is_stmt 0 view .LVU199
 592 0010 C381     		strh	r3, [r0, #14]	@ movhi
 513:./Library/stm32f4xx_spi.c ****   /* Initialize the SPI_CRCPolynomial member */
 514:./Library/stm32f4xx_spi.c ****   SPI_InitStruct->SPI_CRCPolynomial = 7;
 593              		.loc 1 514 3 is_stmt 1 view .LVU200
ARM GAS  /tmp/ccMwpaqC.s 			page 21


 594              		.loc 1 514 37 is_stmt 0 view .LVU201
 595 0012 0723     		movs	r3, #7
 596 0014 0382     		strh	r3, [r0, #16]	@ movhi
 515:./Library/stm32f4xx_spi.c **** }
 597              		.loc 1 515 1 view .LVU202
 598 0016 7047     		bx	lr
 599              		.cfi_endproc
 600              	.LFE126:
 602              		.section	.text.I2S_StructInit,"ax",%progbits
 603              		.align	1
 604              		.global	I2S_StructInit
 605              		.syntax unified
 606              		.thumb
 607              		.thumb_func
 609              	I2S_StructInit:
 610              	.LVL64:
 611              	.LFB127:
 516:./Library/stm32f4xx_spi.c **** 
 517:./Library/stm32f4xx_spi.c **** /**
 518:./Library/stm32f4xx_spi.c ****   * @brief  Fills each I2S_InitStruct member with its default value.
 519:./Library/stm32f4xx_spi.c ****   * @param  I2S_InitStruct: pointer to a I2S_InitTypeDef structure which will be initialized.
 520:./Library/stm32f4xx_spi.c ****   * @retval None
 521:./Library/stm32f4xx_spi.c ****   */
 522:./Library/stm32f4xx_spi.c **** void I2S_StructInit(I2S_InitTypeDef* I2S_InitStruct)
 523:./Library/stm32f4xx_spi.c **** {
 612              		.loc 1 523 1 is_stmt 1 view -0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 0, uses_anonymous_args = 0
 616              		@ link register save eliminated.
 524:./Library/stm32f4xx_spi.c **** /*--------------- Reset I2S init structure parameters values -----------------*/
 525:./Library/stm32f4xx_spi.c ****   /* Initialize the I2S_Mode member */
 526:./Library/stm32f4xx_spi.c ****   I2S_InitStruct->I2S_Mode = I2S_Mode_SlaveTx;
 617              		.loc 1 526 3 view .LVU204
 618              		.loc 1 526 28 is_stmt 0 view .LVU205
 619 0000 0023     		movs	r3, #0
 620 0002 0380     		strh	r3, [r0]	@ movhi
 527:./Library/stm32f4xx_spi.c ****   
 528:./Library/stm32f4xx_spi.c ****   /* Initialize the I2S_Standard member */
 529:./Library/stm32f4xx_spi.c ****   I2S_InitStruct->I2S_Standard = I2S_Standard_Phillips;
 621              		.loc 1 529 3 is_stmt 1 view .LVU206
 622              		.loc 1 529 32 is_stmt 0 view .LVU207
 623 0004 4380     		strh	r3, [r0, #2]	@ movhi
 530:./Library/stm32f4xx_spi.c ****   
 531:./Library/stm32f4xx_spi.c ****   /* Initialize the I2S_DataFormat member */
 532:./Library/stm32f4xx_spi.c ****   I2S_InitStruct->I2S_DataFormat = I2S_DataFormat_16b;
 624              		.loc 1 532 3 is_stmt 1 view .LVU208
 625              		.loc 1 532 34 is_stmt 0 view .LVU209
 626 0006 8380     		strh	r3, [r0, #4]	@ movhi
 533:./Library/stm32f4xx_spi.c ****   
 534:./Library/stm32f4xx_spi.c ****   /* Initialize the I2S_MCLKOutput member */
 535:./Library/stm32f4xx_spi.c ****   I2S_InitStruct->I2S_MCLKOutput = I2S_MCLKOutput_Disable;
 627              		.loc 1 535 3 is_stmt 1 view .LVU210
 628              		.loc 1 535 34 is_stmt 0 view .LVU211
 629 0008 C380     		strh	r3, [r0, #6]	@ movhi
 536:./Library/stm32f4xx_spi.c ****   
 537:./Library/stm32f4xx_spi.c ****   /* Initialize the I2S_AudioFreq member */
ARM GAS  /tmp/ccMwpaqC.s 			page 22


 538:./Library/stm32f4xx_spi.c ****   I2S_InitStruct->I2S_AudioFreq = I2S_AudioFreq_Default;
 630              		.loc 1 538 3 is_stmt 1 view .LVU212
 631              		.loc 1 538 33 is_stmt 0 view .LVU213
 632 000a 0222     		movs	r2, #2
 633 000c 8260     		str	r2, [r0, #8]
 539:./Library/stm32f4xx_spi.c ****   
 540:./Library/stm32f4xx_spi.c ****   /* Initialize the I2S_CPOL member */
 541:./Library/stm32f4xx_spi.c ****   I2S_InitStruct->I2S_CPOL = I2S_CPOL_Low;
 634              		.loc 1 541 3 is_stmt 1 view .LVU214
 635              		.loc 1 541 28 is_stmt 0 view .LVU215
 636 000e 8381     		strh	r3, [r0, #12]	@ movhi
 542:./Library/stm32f4xx_spi.c **** }
 637              		.loc 1 542 1 view .LVU216
 638 0010 7047     		bx	lr
 639              		.cfi_endproc
 640              	.LFE127:
 642              		.section	.text.SPI_Cmd,"ax",%progbits
 643              		.align	1
 644              		.global	SPI_Cmd
 645              		.syntax unified
 646              		.thumb
 647              		.thumb_func
 649              	SPI_Cmd:
 650              	.LVL65:
 651              	.LFB128:
 543:./Library/stm32f4xx_spi.c **** 
 544:./Library/stm32f4xx_spi.c **** /**
 545:./Library/stm32f4xx_spi.c ****   * @brief  Enables or disables the specified SPI peripheral.
 546:./Library/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 547:./Library/stm32f4xx_spi.c ****   * @param  NewState: new state of the SPIx peripheral. 
 548:./Library/stm32f4xx_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
 549:./Library/stm32f4xx_spi.c ****   * @retval None
 550:./Library/stm32f4xx_spi.c ****   */
 551:./Library/stm32f4xx_spi.c **** void SPI_Cmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 552:./Library/stm32f4xx_spi.c **** {
 652              		.loc 1 552 1 is_stmt 1 view -0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 0
 655              		@ frame_needed = 0, uses_anonymous_args = 0
 656              		@ link register save eliminated.
 553:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
 554:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 657              		.loc 1 554 3 view .LVU218
 555:./Library/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 658              		.loc 1 555 3 view .LVU219
 556:./Library/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 659              		.loc 1 556 3 view .LVU220
 660              		.loc 1 556 6 is_stmt 0 view .LVU221
 661 0000 29B1     		cbz	r1, .L39
 557:./Library/stm32f4xx_spi.c ****   {
 558:./Library/stm32f4xx_spi.c ****     /* Enable the selected SPI peripheral */
 559:./Library/stm32f4xx_spi.c ****     SPIx->CR1 |= SPI_CR1_SPE;
 662              		.loc 1 559 5 is_stmt 1 view .LVU222
 663              		.loc 1 559 9 is_stmt 0 view .LVU223
 664 0002 0388     		ldrh	r3, [r0]
 665 0004 9BB2     		uxth	r3, r3
 666              		.loc 1 559 15 view .LVU224
ARM GAS  /tmp/ccMwpaqC.s 			page 23


 667 0006 43F04003 		orr	r3, r3, #64
 668 000a 0380     		strh	r3, [r0]	@ movhi
 669 000c 7047     		bx	lr
 670              	.L39:
 560:./Library/stm32f4xx_spi.c ****   }
 561:./Library/stm32f4xx_spi.c ****   else
 562:./Library/stm32f4xx_spi.c ****   {
 563:./Library/stm32f4xx_spi.c ****     /* Disable the selected SPI peripheral */
 564:./Library/stm32f4xx_spi.c ****     SPIx->CR1 &= (uint16_t)~((uint16_t)SPI_CR1_SPE);
 671              		.loc 1 564 5 is_stmt 1 view .LVU225
 672              		.loc 1 564 9 is_stmt 0 view .LVU226
 673 000e 0388     		ldrh	r3, [r0]
 674 0010 9BB2     		uxth	r3, r3
 675              		.loc 1 564 15 view .LVU227
 676 0012 23F04003 		bic	r3, r3, #64
 677 0016 9BB2     		uxth	r3, r3
 678 0018 0380     		strh	r3, [r0]	@ movhi
 565:./Library/stm32f4xx_spi.c ****   }
 566:./Library/stm32f4xx_spi.c **** }
 679              		.loc 1 566 1 view .LVU228
 680 001a 7047     		bx	lr
 681              		.cfi_endproc
 682              	.LFE128:
 684              		.section	.text.I2S_Cmd,"ax",%progbits
 685              		.align	1
 686              		.global	I2S_Cmd
 687              		.syntax unified
 688              		.thumb
 689              		.thumb_func
 691              	I2S_Cmd:
 692              	.LVL66:
 693              	.LFB129:
 567:./Library/stm32f4xx_spi.c **** 
 568:./Library/stm32f4xx_spi.c **** /**
 569:./Library/stm32f4xx_spi.c ****   * @brief  Enables or disables the specified SPI peripheral (in I2S mode).
 570:./Library/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 2 or 3 to select the SPI peripheral (or I2Sxext 
 571:./Library/stm32f4xx_spi.c ****   *         for full duplex mode).
 572:./Library/stm32f4xx_spi.c ****   * @param  NewState: new state of the SPIx peripheral. 
 573:./Library/stm32f4xx_spi.c ****   *         This parameter can be: ENABLE or DISABLE.
 574:./Library/stm32f4xx_spi.c ****   * @retval None
 575:./Library/stm32f4xx_spi.c ****   */
 576:./Library/stm32f4xx_spi.c **** void I2S_Cmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 577:./Library/stm32f4xx_spi.c **** {
 694              		.loc 1 577 1 is_stmt 1 view -0
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 0
 697              		@ frame_needed = 0, uses_anonymous_args = 0
 698              		@ link register save eliminated.
 578:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
 579:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_23_PERIPH_EXT(SPIx));
 699              		.loc 1 579 3 view .LVU230
 580:./Library/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 700              		.loc 1 580 3 view .LVU231
 581:./Library/stm32f4xx_spi.c ****   
 582:./Library/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 701              		.loc 1 582 3 view .LVU232
 702              		.loc 1 582 6 is_stmt 0 view .LVU233
ARM GAS  /tmp/ccMwpaqC.s 			page 24


 703 0000 29B1     		cbz	r1, .L42
 583:./Library/stm32f4xx_spi.c ****   {
 584:./Library/stm32f4xx_spi.c ****     /* Enable the selected SPI peripheral (in I2S mode) */
 585:./Library/stm32f4xx_spi.c ****     SPIx->I2SCFGR |= SPI_I2SCFGR_I2SE;
 704              		.loc 1 585 5 is_stmt 1 view .LVU234
 705              		.loc 1 585 9 is_stmt 0 view .LVU235
 706 0002 838B     		ldrh	r3, [r0, #28]
 707 0004 9BB2     		uxth	r3, r3
 708              		.loc 1 585 19 view .LVU236
 709 0006 43F48063 		orr	r3, r3, #1024
 710 000a 8383     		strh	r3, [r0, #28]	@ movhi
 711 000c 7047     		bx	lr
 712              	.L42:
 586:./Library/stm32f4xx_spi.c ****   }
 587:./Library/stm32f4xx_spi.c ****   else
 588:./Library/stm32f4xx_spi.c ****   {
 589:./Library/stm32f4xx_spi.c ****     /* Disable the selected SPI peripheral in I2S mode */
 590:./Library/stm32f4xx_spi.c ****     SPIx->I2SCFGR &= (uint16_t)~((uint16_t)SPI_I2SCFGR_I2SE);
 713              		.loc 1 590 5 is_stmt 1 view .LVU237
 714              		.loc 1 590 9 is_stmt 0 view .LVU238
 715 000e 838B     		ldrh	r3, [r0, #28]
 716 0010 9BB2     		uxth	r3, r3
 717              		.loc 1 590 19 view .LVU239
 718 0012 23F48063 		bic	r3, r3, #1024
 719 0016 9BB2     		uxth	r3, r3
 720 0018 8383     		strh	r3, [r0, #28]	@ movhi
 591:./Library/stm32f4xx_spi.c ****   }
 592:./Library/stm32f4xx_spi.c **** }
 721              		.loc 1 592 1 view .LVU240
 722 001a 7047     		bx	lr
 723              		.cfi_endproc
 724              	.LFE129:
 726              		.section	.text.SPI_DataSizeConfig,"ax",%progbits
 727              		.align	1
 728              		.global	SPI_DataSizeConfig
 729              		.syntax unified
 730              		.thumb
 731              		.thumb_func
 733              	SPI_DataSizeConfig:
 734              	.LVL67:
 735              	.LFB130:
 593:./Library/stm32f4xx_spi.c **** 
 594:./Library/stm32f4xx_spi.c **** /**
 595:./Library/stm32f4xx_spi.c ****   * @brief  Configures the data size for the selected SPI.
 596:./Library/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 597:./Library/stm32f4xx_spi.c ****   * @param  SPI_DataSize: specifies the SPI data size.
 598:./Library/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
 599:./Library/stm32f4xx_spi.c ****   *            @arg SPI_DataSize_16b: Set data frame format to 16bit
 600:./Library/stm32f4xx_spi.c ****   *            @arg SPI_DataSize_8b: Set data frame format to 8bit
 601:./Library/stm32f4xx_spi.c ****   * @retval None
 602:./Library/stm32f4xx_spi.c ****   */
 603:./Library/stm32f4xx_spi.c **** void SPI_DataSizeConfig(SPI_TypeDef* SPIx, uint16_t SPI_DataSize)
 604:./Library/stm32f4xx_spi.c **** {
 736              		.loc 1 604 1 is_stmt 1 view -0
 737              		.cfi_startproc
 738              		@ args = 0, pretend = 0, frame = 0
 739              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccMwpaqC.s 			page 25


 740              		@ link register save eliminated.
 605:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
 606:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 741              		.loc 1 606 3 view .LVU242
 607:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_DATASIZE(SPI_DataSize));
 742              		.loc 1 607 3 view .LVU243
 608:./Library/stm32f4xx_spi.c ****   /* Clear DFF bit */
 609:./Library/stm32f4xx_spi.c ****   SPIx->CR1 &= (uint16_t)~SPI_DataSize_16b;
 743              		.loc 1 609 3 view .LVU244
 744              		.loc 1 609 7 is_stmt 0 view .LVU245
 745 0000 0388     		ldrh	r3, [r0]
 746 0002 9BB2     		uxth	r3, r3
 747              		.loc 1 609 13 view .LVU246
 748 0004 23F40063 		bic	r3, r3, #2048
 749 0008 9BB2     		uxth	r3, r3
 750 000a 0380     		strh	r3, [r0]	@ movhi
 610:./Library/stm32f4xx_spi.c ****   /* Set new DFF bit value */
 611:./Library/stm32f4xx_spi.c ****   SPIx->CR1 |= SPI_DataSize;
 751              		.loc 1 611 3 is_stmt 1 view .LVU247
 752              		.loc 1 611 7 is_stmt 0 view .LVU248
 753 000c 0388     		ldrh	r3, [r0]
 754 000e 9BB2     		uxth	r3, r3
 755              		.loc 1 611 13 view .LVU249
 756 0010 0B43     		orrs	r3, r3, r1
 757 0012 0380     		strh	r3, [r0]	@ movhi
 612:./Library/stm32f4xx_spi.c **** }
 758              		.loc 1 612 1 view .LVU250
 759 0014 7047     		bx	lr
 760              		.cfi_endproc
 761              	.LFE130:
 763              		.section	.text.SPI_BiDirectionalLineConfig,"ax",%progbits
 764              		.align	1
 765              		.global	SPI_BiDirectionalLineConfig
 766              		.syntax unified
 767              		.thumb
 768              		.thumb_func
 770              	SPI_BiDirectionalLineConfig:
 771              	.LVL68:
 772              	.LFB131:
 613:./Library/stm32f4xx_spi.c **** 
 614:./Library/stm32f4xx_spi.c **** /**
 615:./Library/stm32f4xx_spi.c ****   * @brief  Selects the data transfer direction in bidirectional mode for the specified SPI.
 616:./Library/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 617:./Library/stm32f4xx_spi.c ****   * @param  SPI_Direction: specifies the data transfer direction in bidirectional mode. 
 618:./Library/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
 619:./Library/stm32f4xx_spi.c ****   *            @arg SPI_Direction_Tx: Selects Tx transmission direction
 620:./Library/stm32f4xx_spi.c ****   *            @arg SPI_Direction_Rx: Selects Rx receive direction
 621:./Library/stm32f4xx_spi.c ****   * @retval None
 622:./Library/stm32f4xx_spi.c ****   */
 623:./Library/stm32f4xx_spi.c **** void SPI_BiDirectionalLineConfig(SPI_TypeDef* SPIx, uint16_t SPI_Direction)
 624:./Library/stm32f4xx_spi.c **** {
 773              		.loc 1 624 1 is_stmt 1 view -0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 0
 776              		@ frame_needed = 0, uses_anonymous_args = 0
 777              		@ link register save eliminated.
 625:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
ARM GAS  /tmp/ccMwpaqC.s 			page 26


 626:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 778              		.loc 1 626 3 view .LVU252
 627:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_DIRECTION(SPI_Direction));
 779              		.loc 1 627 3 view .LVU253
 628:./Library/stm32f4xx_spi.c ****   if (SPI_Direction == SPI_Direction_Tx)
 780              		.loc 1 628 3 view .LVU254
 781              		.loc 1 628 6 is_stmt 0 view .LVU255
 782 0000 B1F5804F 		cmp	r1, #16384
 783 0004 06D0     		beq	.L48
 629:./Library/stm32f4xx_spi.c ****   {
 630:./Library/stm32f4xx_spi.c ****     /* Set the Tx only mode */
 631:./Library/stm32f4xx_spi.c ****     SPIx->CR1 |= SPI_Direction_Tx;
 632:./Library/stm32f4xx_spi.c ****   }
 633:./Library/stm32f4xx_spi.c ****   else
 634:./Library/stm32f4xx_spi.c ****   {
 635:./Library/stm32f4xx_spi.c ****     /* Set the Rx only mode */
 636:./Library/stm32f4xx_spi.c ****     SPIx->CR1 &= SPI_Direction_Rx;
 784              		.loc 1 636 5 is_stmt 1 view .LVU256
 785              		.loc 1 636 9 is_stmt 0 view .LVU257
 786 0006 0388     		ldrh	r3, [r0]
 787 0008 9BB2     		uxth	r3, r3
 788              		.loc 1 636 15 view .LVU258
 789 000a 23F48043 		bic	r3, r3, #16384
 790 000e 9BB2     		uxth	r3, r3
 791 0010 0380     		strh	r3, [r0]	@ movhi
 637:./Library/stm32f4xx_spi.c ****   }
 638:./Library/stm32f4xx_spi.c **** }
 792              		.loc 1 638 1 view .LVU259
 793 0012 7047     		bx	lr
 794              	.L48:
 631:./Library/stm32f4xx_spi.c ****   }
 795              		.loc 1 631 5 is_stmt 1 view .LVU260
 631:./Library/stm32f4xx_spi.c ****   }
 796              		.loc 1 631 9 is_stmt 0 view .LVU261
 797 0014 0388     		ldrh	r3, [r0]
 798 0016 9BB2     		uxth	r3, r3
 631:./Library/stm32f4xx_spi.c ****   }
 799              		.loc 1 631 15 view .LVU262
 800 0018 43F48043 		orr	r3, r3, #16384
 801 001c 0380     		strh	r3, [r0]	@ movhi
 802 001e 7047     		bx	lr
 803              		.cfi_endproc
 804              	.LFE131:
 806              		.section	.text.SPI_NSSInternalSoftwareConfig,"ax",%progbits
 807              		.align	1
 808              		.global	SPI_NSSInternalSoftwareConfig
 809              		.syntax unified
 810              		.thumb
 811              		.thumb_func
 813              	SPI_NSSInternalSoftwareConfig:
 814              	.LVL69:
 815              	.LFB132:
 639:./Library/stm32f4xx_spi.c **** 
 640:./Library/stm32f4xx_spi.c **** /**
 641:./Library/stm32f4xx_spi.c ****   * @brief  Configures internally by software the NSS pin for the selected SPI.
 642:./Library/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 643:./Library/stm32f4xx_spi.c ****   * @param  SPI_NSSInternalSoft: specifies the SPI NSS internal state.
ARM GAS  /tmp/ccMwpaqC.s 			page 27


 644:./Library/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
 645:./Library/stm32f4xx_spi.c ****   *            @arg SPI_NSSInternalSoft_Set: Set NSS pin internally
 646:./Library/stm32f4xx_spi.c ****   *            @arg SPI_NSSInternalSoft_Reset: Reset NSS pin internally
 647:./Library/stm32f4xx_spi.c ****   * @retval None
 648:./Library/stm32f4xx_spi.c ****   */
 649:./Library/stm32f4xx_spi.c **** void SPI_NSSInternalSoftwareConfig(SPI_TypeDef* SPIx, uint16_t SPI_NSSInternalSoft)
 650:./Library/stm32f4xx_spi.c **** {
 816              		.loc 1 650 1 is_stmt 1 view -0
 817              		.cfi_startproc
 818              		@ args = 0, pretend = 0, frame = 0
 819              		@ frame_needed = 0, uses_anonymous_args = 0
 820              		@ link register save eliminated.
 651:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
 652:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 821              		.loc 1 652 3 view .LVU264
 653:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_NSS_INTERNAL(SPI_NSSInternalSoft));
 822              		.loc 1 653 3 view .LVU265
 654:./Library/stm32f4xx_spi.c ****   if (SPI_NSSInternalSoft != SPI_NSSInternalSoft_Reset)
 823              		.loc 1 654 3 view .LVU266
 824              		.loc 1 654 6 is_stmt 0 view .LVU267
 825 0000 4FF6FF63 		movw	r3, #65279
 826 0004 9942     		cmp	r1, r3
 827 0006 05D0     		beq	.L50
 655:./Library/stm32f4xx_spi.c ****   {
 656:./Library/stm32f4xx_spi.c ****     /* Set NSS pin internally by software */
 657:./Library/stm32f4xx_spi.c ****     SPIx->CR1 |= SPI_NSSInternalSoft_Set;
 828              		.loc 1 657 5 is_stmt 1 view .LVU268
 829              		.loc 1 657 9 is_stmt 0 view .LVU269
 830 0008 0388     		ldrh	r3, [r0]
 831 000a 9BB2     		uxth	r3, r3
 832              		.loc 1 657 15 view .LVU270
 833 000c 43F48073 		orr	r3, r3, #256
 834 0010 0380     		strh	r3, [r0]	@ movhi
 835 0012 7047     		bx	lr
 836              	.L50:
 658:./Library/stm32f4xx_spi.c ****   }
 659:./Library/stm32f4xx_spi.c ****   else
 660:./Library/stm32f4xx_spi.c ****   {
 661:./Library/stm32f4xx_spi.c ****     /* Reset NSS pin internally by software */
 662:./Library/stm32f4xx_spi.c ****     SPIx->CR1 &= SPI_NSSInternalSoft_Reset;
 837              		.loc 1 662 5 is_stmt 1 view .LVU271
 838              		.loc 1 662 9 is_stmt 0 view .LVU272
 839 0014 0388     		ldrh	r3, [r0]
 840 0016 9BB2     		uxth	r3, r3
 841              		.loc 1 662 15 view .LVU273
 842 0018 23F48073 		bic	r3, r3, #256
 843 001c 9BB2     		uxth	r3, r3
 844 001e 0380     		strh	r3, [r0]	@ movhi
 663:./Library/stm32f4xx_spi.c ****   }
 664:./Library/stm32f4xx_spi.c **** }
 845              		.loc 1 664 1 view .LVU274
 846 0020 7047     		bx	lr
 847              		.cfi_endproc
 848              	.LFE132:
 850              		.section	.text.SPI_SSOutputCmd,"ax",%progbits
 851              		.align	1
 852              		.global	SPI_SSOutputCmd
ARM GAS  /tmp/ccMwpaqC.s 			page 28


 853              		.syntax unified
 854              		.thumb
 855              		.thumb_func
 857              	SPI_SSOutputCmd:
 858              	.LVL70:
 859              	.LFB133:
 665:./Library/stm32f4xx_spi.c **** 
 666:./Library/stm32f4xx_spi.c **** /**
 667:./Library/stm32f4xx_spi.c ****   * @brief  Enables or disables the SS output for the selected SPI.
 668:./Library/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 669:./Library/stm32f4xx_spi.c ****   * @param  NewState: new state of the SPIx SS output. 
 670:./Library/stm32f4xx_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
 671:./Library/stm32f4xx_spi.c ****   * @retval None
 672:./Library/stm32f4xx_spi.c ****   */
 673:./Library/stm32f4xx_spi.c **** void SPI_SSOutputCmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 674:./Library/stm32f4xx_spi.c **** {
 860              		.loc 1 674 1 is_stmt 1 view -0
 861              		.cfi_startproc
 862              		@ args = 0, pretend = 0, frame = 0
 863              		@ frame_needed = 0, uses_anonymous_args = 0
 864              		@ link register save eliminated.
 675:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
 676:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 865              		.loc 1 676 3 view .LVU276
 677:./Library/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 866              		.loc 1 677 3 view .LVU277
 678:./Library/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 867              		.loc 1 678 3 view .LVU278
 868              		.loc 1 678 6 is_stmt 0 view .LVU279
 869 0000 29B1     		cbz	r1, .L53
 679:./Library/stm32f4xx_spi.c ****   {
 680:./Library/stm32f4xx_spi.c ****     /* Enable the selected SPI SS output */
 681:./Library/stm32f4xx_spi.c ****     SPIx->CR2 |= (uint16_t)SPI_CR2_SSOE;
 870              		.loc 1 681 5 is_stmt 1 view .LVU280
 871              		.loc 1 681 9 is_stmt 0 view .LVU281
 872 0002 8388     		ldrh	r3, [r0, #4]
 873 0004 9BB2     		uxth	r3, r3
 874              		.loc 1 681 15 view .LVU282
 875 0006 43F00403 		orr	r3, r3, #4
 876 000a 8380     		strh	r3, [r0, #4]	@ movhi
 877 000c 7047     		bx	lr
 878              	.L53:
 682:./Library/stm32f4xx_spi.c ****   }
 683:./Library/stm32f4xx_spi.c ****   else
 684:./Library/stm32f4xx_spi.c ****   {
 685:./Library/stm32f4xx_spi.c ****     /* Disable the selected SPI SS output */
 686:./Library/stm32f4xx_spi.c ****     SPIx->CR2 &= (uint16_t)~((uint16_t)SPI_CR2_SSOE);
 879              		.loc 1 686 5 is_stmt 1 view .LVU283
 880              		.loc 1 686 9 is_stmt 0 view .LVU284
 881 000e 8388     		ldrh	r3, [r0, #4]
 882 0010 9BB2     		uxth	r3, r3
 883              		.loc 1 686 15 view .LVU285
 884 0012 23F00403 		bic	r3, r3, #4
 885 0016 9BB2     		uxth	r3, r3
 886 0018 8380     		strh	r3, [r0, #4]	@ movhi
 687:./Library/stm32f4xx_spi.c ****   }
 688:./Library/stm32f4xx_spi.c **** }
ARM GAS  /tmp/ccMwpaqC.s 			page 29


 887              		.loc 1 688 1 view .LVU286
 888 001a 7047     		bx	lr
 889              		.cfi_endproc
 890              	.LFE133:
 892              		.section	.text.SPI_TIModeCmd,"ax",%progbits
 893              		.align	1
 894              		.global	SPI_TIModeCmd
 895              		.syntax unified
 896              		.thumb
 897              		.thumb_func
 899              	SPI_TIModeCmd:
 900              	.LVL71:
 901              	.LFB134:
 689:./Library/stm32f4xx_spi.c **** 
 690:./Library/stm32f4xx_spi.c **** /**
 691:./Library/stm32f4xx_spi.c ****   * @brief  Enables or disables the SPIx/I2Sx DMA interface.
 692:./Library/stm32f4xx_spi.c ****   *   
 693:./Library/stm32f4xx_spi.c ****   * @note   This function can be called only after the SPI_Init() function has 
 694:./Library/stm32f4xx_spi.c ****   *         been called. 
 695:./Library/stm32f4xx_spi.c ****   * @note   When TI mode is selected, the control bits SSM, SSI, CPOL and CPHA 
 696:./Library/stm32f4xx_spi.c ****   *         are not taken into consideration and are configured by hardware
 697:./Library/stm32f4xx_spi.c ****   *         respectively to the TI mode requirements.  
 698:./Library/stm32f4xx_spi.c ****   * 
 699:./Library/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 
 700:./Library/stm32f4xx_spi.c ****   * @param  NewState: new state of the selected SPI TI communication mode.
 701:./Library/stm32f4xx_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
 702:./Library/stm32f4xx_spi.c ****   * @retval None
 703:./Library/stm32f4xx_spi.c ****   */
 704:./Library/stm32f4xx_spi.c **** void SPI_TIModeCmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 705:./Library/stm32f4xx_spi.c **** {
 902              		.loc 1 705 1 is_stmt 1 view -0
 903              		.cfi_startproc
 904              		@ args = 0, pretend = 0, frame = 0
 905              		@ frame_needed = 0, uses_anonymous_args = 0
 906              		@ link register save eliminated.
 706:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
 707:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 907              		.loc 1 707 3 view .LVU288
 708:./Library/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 908              		.loc 1 708 3 view .LVU289
 709:./Library/stm32f4xx_spi.c **** 
 710:./Library/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 909              		.loc 1 710 3 view .LVU290
 910              		.loc 1 710 6 is_stmt 0 view .LVU291
 911 0000 29B1     		cbz	r1, .L56
 711:./Library/stm32f4xx_spi.c ****   {
 712:./Library/stm32f4xx_spi.c ****     /* Enable the TI mode for the selected SPI peripheral */
 713:./Library/stm32f4xx_spi.c ****     SPIx->CR2 |= SPI_CR2_FRF;
 912              		.loc 1 713 5 is_stmt 1 view .LVU292
 913              		.loc 1 713 9 is_stmt 0 view .LVU293
 914 0002 8388     		ldrh	r3, [r0, #4]
 915 0004 9BB2     		uxth	r3, r3
 916              		.loc 1 713 15 view .LVU294
 917 0006 43F01003 		orr	r3, r3, #16
 918 000a 8380     		strh	r3, [r0, #4]	@ movhi
 919 000c 7047     		bx	lr
 920              	.L56:
ARM GAS  /tmp/ccMwpaqC.s 			page 30


 714:./Library/stm32f4xx_spi.c ****   }
 715:./Library/stm32f4xx_spi.c ****   else
 716:./Library/stm32f4xx_spi.c ****   {
 717:./Library/stm32f4xx_spi.c ****     /* Disable the TI mode for the selected SPI peripheral */
 718:./Library/stm32f4xx_spi.c ****     SPIx->CR2 &= (uint16_t)~SPI_CR2_FRF;
 921              		.loc 1 718 5 is_stmt 1 view .LVU295
 922              		.loc 1 718 9 is_stmt 0 view .LVU296
 923 000e 8388     		ldrh	r3, [r0, #4]
 924 0010 9BB2     		uxth	r3, r3
 925              		.loc 1 718 15 view .LVU297
 926 0012 23F01003 		bic	r3, r3, #16
 927 0016 9BB2     		uxth	r3, r3
 928 0018 8380     		strh	r3, [r0, #4]	@ movhi
 719:./Library/stm32f4xx_spi.c ****   }
 720:./Library/stm32f4xx_spi.c **** }
 929              		.loc 1 720 1 view .LVU298
 930 001a 7047     		bx	lr
 931              		.cfi_endproc
 932              	.LFE134:
 934              		.section	.text.I2S_FullDuplexConfig,"ax",%progbits
 935              		.align	1
 936              		.global	I2S_FullDuplexConfig
 937              		.syntax unified
 938              		.thumb
 939              		.thumb_func
 941              	I2S_FullDuplexConfig:
 942              	.LVL72:
 943              	.LFB135:
 721:./Library/stm32f4xx_spi.c **** 
 722:./Library/stm32f4xx_spi.c **** /**
 723:./Library/stm32f4xx_spi.c ****   * @brief  Configures the full duplex mode for the I2Sx peripheral using its
 724:./Library/stm32f4xx_spi.c ****   *         extension I2Sxext according to the specified parameters in the 
 725:./Library/stm32f4xx_spi.c ****   *         I2S_InitStruct.
 726:./Library/stm32f4xx_spi.c ****   * @param  I2Sxext: where x can be  2 or 3 to select the I2S peripheral extension block.
 727:./Library/stm32f4xx_spi.c ****   * @param  I2S_InitStruct: pointer to an I2S_InitTypeDef structure that
 728:./Library/stm32f4xx_spi.c ****   *         contains the configuration information for the specified I2S peripheral
 729:./Library/stm32f4xx_spi.c ****   *         extension.
 730:./Library/stm32f4xx_spi.c ****   * 
 731:./Library/stm32f4xx_spi.c ****   * @note   The structure pointed by I2S_InitStruct parameter should be the same
 732:./Library/stm32f4xx_spi.c ****   *         used for the master I2S peripheral. In this case, if the master is 
 733:./Library/stm32f4xx_spi.c ****   *         configured as transmitter, the slave will be receiver and vice versa.
 734:./Library/stm32f4xx_spi.c ****   *         Or you can force a different mode by modifying the field I2S_Mode to the
 735:./Library/stm32f4xx_spi.c ****   *         value I2S_SlaveRx or I2S_SlaveTx independently of the master configuration.    
 736:./Library/stm32f4xx_spi.c ****   *         
 737:./Library/stm32f4xx_spi.c ****   * @note   The I2S full duplex extension can be configured in slave mode only.    
 738:./Library/stm32f4xx_spi.c ****   *  
 739:./Library/stm32f4xx_spi.c ****   * @retval None
 740:./Library/stm32f4xx_spi.c ****   */
 741:./Library/stm32f4xx_spi.c **** void I2S_FullDuplexConfig(SPI_TypeDef* I2Sxext, I2S_InitTypeDef* I2S_InitStruct)
 742:./Library/stm32f4xx_spi.c **** {
 944              		.loc 1 742 1 is_stmt 1 view -0
 945              		.cfi_startproc
 946              		@ args = 0, pretend = 0, frame = 0
 947              		@ frame_needed = 0, uses_anonymous_args = 0
 948              		.loc 1 742 1 is_stmt 0 view .LVU300
 949 0000 00B5     		push	{lr}
 950              	.LCFI3:
ARM GAS  /tmp/ccMwpaqC.s 			page 31


 951              		.cfi_def_cfa_offset 4
 952              		.cfi_offset 14, -4
 743:./Library/stm32f4xx_spi.c ****   uint16_t tmpreg = 0, tmp = 0;
 953              		.loc 1 743 3 is_stmt 1 view .LVU301
 954              	.LVL73:
 744:./Library/stm32f4xx_spi.c ****   
 745:./Library/stm32f4xx_spi.c ****   /* Check the I2S parameters */
 746:./Library/stm32f4xx_spi.c ****   assert_param(IS_I2S_EXT_PERIPH(I2Sxext));
 955              		.loc 1 746 3 view .LVU302
 747:./Library/stm32f4xx_spi.c ****   assert_param(IS_I2S_MODE(I2S_InitStruct->I2S_Mode));
 956              		.loc 1 747 3 view .LVU303
 748:./Library/stm32f4xx_spi.c ****   assert_param(IS_I2S_STANDARD(I2S_InitStruct->I2S_Standard));
 957              		.loc 1 748 3 view .LVU304
 749:./Library/stm32f4xx_spi.c ****   assert_param(IS_I2S_DATA_FORMAT(I2S_InitStruct->I2S_DataFormat));
 958              		.loc 1 749 3 view .LVU305
 750:./Library/stm32f4xx_spi.c ****   assert_param(IS_I2S_CPOL(I2S_InitStruct->I2S_CPOL));  
 959              		.loc 1 750 3 view .LVU306
 751:./Library/stm32f4xx_spi.c **** 
 752:./Library/stm32f4xx_spi.c **** /*----------------------- SPIx I2SCFGR & I2SPR Configuration -----------------*/
 753:./Library/stm32f4xx_spi.c ****   /* Clear I2SMOD, I2SE, I2SCFG, PCMSYNC, I2SSTD, CKPOL, DATLEN and CHLEN bits */
 754:./Library/stm32f4xx_spi.c ****   I2Sxext->I2SCFGR &= I2SCFGR_CLEAR_MASK; 
 960              		.loc 1 754 3 view .LVU307
 961              		.loc 1 754 10 is_stmt 0 view .LVU308
 962 0002 838B     		ldrh	r3, [r0, #28]
 963 0004 9BB2     		uxth	r3, r3
 964              		.loc 1 754 20 view .LVU309
 965 0006 23F47B63 		bic	r3, r3, #4016
 966 000a 23F00F03 		bic	r3, r3, #15
 967 000e 9BB2     		uxth	r3, r3
 968 0010 8383     		strh	r3, [r0, #28]	@ movhi
 755:./Library/stm32f4xx_spi.c ****   I2Sxext->I2SPR = 0x0002;
 969              		.loc 1 755 3 is_stmt 1 view .LVU310
 970              		.loc 1 755 18 is_stmt 0 view .LVU311
 971 0012 0223     		movs	r3, #2
 972 0014 0384     		strh	r3, [r0, #32]	@ movhi
 756:./Library/stm32f4xx_spi.c ****   
 757:./Library/stm32f4xx_spi.c ****   /* Get the I2SCFGR register value */
 758:./Library/stm32f4xx_spi.c ****   tmpreg = I2Sxext->I2SCFGR;
 973              		.loc 1 758 3 is_stmt 1 view .LVU312
 974              		.loc 1 758 10 is_stmt 0 view .LVU313
 975 0016 828B     		ldrh	r2, [r0, #28]
 976 0018 92B2     		uxth	r2, r2
 977              	.LVL74:
 759:./Library/stm32f4xx_spi.c ****   
 760:./Library/stm32f4xx_spi.c ****   /* Get the mode to be configured for the extended I2S */
 761:./Library/stm32f4xx_spi.c ****   if ((I2S_InitStruct->I2S_Mode == I2S_Mode_MasterTx) || (I2S_InitStruct->I2S_Mode == I2S_Mode_Slav
 978              		.loc 1 761 3 is_stmt 1 view .LVU314
 979              		.loc 1 761 22 is_stmt 0 view .LVU315
 980 001a 0B88     		ldrh	r3, [r1]
 981              		.loc 1 761 6 view .LVU316
 982 001c B3F5007F 		cmp	r3, #512
 983 0020 03D0     		beq	.L60
 984              		.loc 1 761 55 discriminator 1 view .LVU317
 985 0022 9BB9     		cbnz	r3, .L61
 762:./Library/stm32f4xx_spi.c ****   {
 763:./Library/stm32f4xx_spi.c ****     tmp = I2S_Mode_SlaveRx;
 986              		.loc 1 763 9 view .LVU318
ARM GAS  /tmp/ccMwpaqC.s 			page 32


 987 0024 4FF4807E 		mov	lr, #256
 988 0028 01E0     		b	.L59
 989              	.L60:
 990 002a 4FF4807E 		mov	lr, #256
 991              	.L59:
 992              	.LVL75:
 764:./Library/stm32f4xx_spi.c ****   }
 765:./Library/stm32f4xx_spi.c ****   else
 766:./Library/stm32f4xx_spi.c ****   {
 767:./Library/stm32f4xx_spi.c ****     if ((I2S_InitStruct->I2S_Mode == I2S_Mode_MasterRx) || (I2S_InitStruct->I2S_Mode == I2S_Mode_Sl
 768:./Library/stm32f4xx_spi.c ****     {
 769:./Library/stm32f4xx_spi.c ****       tmp = I2S_Mode_SlaveTx;
 770:./Library/stm32f4xx_spi.c ****     }
 771:./Library/stm32f4xx_spi.c ****   }
 772:./Library/stm32f4xx_spi.c **** 
 773:./Library/stm32f4xx_spi.c ****  
 774:./Library/stm32f4xx_spi.c ****   /* Configure the I2S with the SPI_InitStruct values */
 775:./Library/stm32f4xx_spi.c ****   tmpreg |= (uint16_t)((uint16_t)SPI_I2SCFGR_I2SMOD | (uint16_t)(tmp | \
 993              		.loc 1 775 3 is_stmt 1 view .LVU319
 776:./Library/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 994              		.loc 1 776 44 is_stmt 0 view .LVU320
 995 002e 4B88     		ldrh	r3, [r1, #2]
 996              		.loc 1 776 86 view .LVU321
 997 0030 B1F804C0 		ldrh	ip, [r1, #4]
 777:./Library/stm32f4xx_spi.c ****                   (uint16_t)I2S_InitStruct->I2S_CPOL))));
 998              		.loc 1 777 43 view .LVU322
 999 0034 8989     		ldrh	r1, [r1, #12]
 1000              	.LVL76:
 776:./Library/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 1001              		.loc 1 776 61 view .LVU323
 1002 0036 4CEA0101 		orr	r1, ip, r1
 776:./Library/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 1003              		.loc 1 776 19 view .LVU324
 1004 003a 0B43     		orrs	r3, r3, r1
 775:./Library/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 1005              		.loc 1 775 55 view .LVU325
 1006 003c 43EA0E03 		orr	r3, r3, lr
 775:./Library/stm32f4xx_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 1007              		.loc 1 775 10 view .LVU326
 1008 0040 1343     		orrs	r3, r3, r2
 1009 0042 43F40063 		orr	r3, r3, #2048
 1010              	.LVL77:
 778:./Library/stm32f4xx_spi.c ****  
 779:./Library/stm32f4xx_spi.c ****   /* Write to SPIx I2SCFGR */  
 780:./Library/stm32f4xx_spi.c ****   I2Sxext->I2SCFGR = tmpreg;
 1011              		.loc 1 780 3 is_stmt 1 view .LVU327
 1012              		.loc 1 780 20 is_stmt 0 view .LVU328
 1013 0046 8383     		strh	r3, [r0, #28]	@ movhi
 781:./Library/stm32f4xx_spi.c **** }
 1014              		.loc 1 781 1 view .LVU329
 1015 0048 5DF804FB 		ldr	pc, [sp], #4
 1016              	.LVL78:
 1017              	.L61:
 769:./Library/stm32f4xx_spi.c ****     }
 1018              		.loc 1 769 11 view .LVU330
 1019 004c 4FF0000E 		mov	lr, #0
 1020 0050 EDE7     		b	.L59
ARM GAS  /tmp/ccMwpaqC.s 			page 33


 1021              		.cfi_endproc
 1022              	.LFE135:
 1024              		.section	.text.SPI_I2S_ReceiveData,"ax",%progbits
 1025              		.align	1
 1026              		.global	SPI_I2S_ReceiveData
 1027              		.syntax unified
 1028              		.thumb
 1029              		.thumb_func
 1031              	SPI_I2S_ReceiveData:
 1032              	.LVL79:
 1033              	.LFB136:
 782:./Library/stm32f4xx_spi.c **** 
 783:./Library/stm32f4xx_spi.c **** /**
 784:./Library/stm32f4xx_spi.c ****   * @}
 785:./Library/stm32f4xx_spi.c ****   */
 786:./Library/stm32f4xx_spi.c **** 
 787:./Library/stm32f4xx_spi.c **** /** @defgroup SPI_Group2 Data transfers functions
 788:./Library/stm32f4xx_spi.c ****  *  @brief   Data transfers functions
 789:./Library/stm32f4xx_spi.c ****  *
 790:./Library/stm32f4xx_spi.c **** @verbatim   
 791:./Library/stm32f4xx_spi.c ****  ===============================================================================
 792:./Library/stm32f4xx_spi.c ****                       ##### Data transfers functions #####
 793:./Library/stm32f4xx_spi.c ****  ===============================================================================  
 794:./Library/stm32f4xx_spi.c **** 
 795:./Library/stm32f4xx_spi.c ****  [..] This section provides a set of functions allowing to manage the SPI data 
 796:./Library/stm32f4xx_spi.c ****       transfers. In reception, data are received and then stored into an internal 
 797:./Library/stm32f4xx_spi.c ****       Rx buffer while. In transmission, data are first stored into an internal Tx 
 798:./Library/stm32f4xx_spi.c ****       buffer before being transmitted.
 799:./Library/stm32f4xx_spi.c **** 
 800:./Library/stm32f4xx_spi.c ****  [..] The read access of the SPI_DR register can be done using the SPI_I2S_ReceiveData()
 801:./Library/stm32f4xx_spi.c ****       function and returns the Rx buffered value. Whereas a write access to the SPI_DR 
 802:./Library/stm32f4xx_spi.c ****       can be done using SPI_I2S_SendData() function and stores the written data into 
 803:./Library/stm32f4xx_spi.c ****       Tx buffer.
 804:./Library/stm32f4xx_spi.c **** 
 805:./Library/stm32f4xx_spi.c **** @endverbatim
 806:./Library/stm32f4xx_spi.c ****   * @{
 807:./Library/stm32f4xx_spi.c ****   */
 808:./Library/stm32f4xx_spi.c **** 
 809:./Library/stm32f4xx_spi.c **** /**
 810:./Library/stm32f4xx_spi.c ****   * @brief  Returns the most recent received data by the SPIx/I2Sx peripheral. 
 811:./Library/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
 812:./Library/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode. 
 813:./Library/stm32f4xx_spi.c ****   * @retval The value of the received data.
 814:./Library/stm32f4xx_spi.c ****   */
 815:./Library/stm32f4xx_spi.c **** uint16_t SPI_I2S_ReceiveData(SPI_TypeDef* SPIx)
 816:./Library/stm32f4xx_spi.c **** {
 1034              		.loc 1 816 1 is_stmt 1 view -0
 1035              		.cfi_startproc
 1036              		@ args = 0, pretend = 0, frame = 0
 1037              		@ frame_needed = 0, uses_anonymous_args = 0
 1038              		@ link register save eliminated.
 817:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
 818:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 1039              		.loc 1 818 3 view .LVU332
 819:./Library/stm32f4xx_spi.c ****   
 820:./Library/stm32f4xx_spi.c ****   /* Return the data in the DR register */
 821:./Library/stm32f4xx_spi.c ****   return SPIx->DR;
ARM GAS  /tmp/ccMwpaqC.s 			page 34


 1040              		.loc 1 821 3 view .LVU333
 1041              		.loc 1 821 14 is_stmt 0 view .LVU334
 1042 0000 8089     		ldrh	r0, [r0, #12]
 1043              	.LVL80:
 822:./Library/stm32f4xx_spi.c **** }
 1044              		.loc 1 822 1 view .LVU335
 1045 0002 80B2     		uxth	r0, r0
 1046 0004 7047     		bx	lr
 1047              		.cfi_endproc
 1048              	.LFE136:
 1050              		.section	.text.SPI_I2S_SendData,"ax",%progbits
 1051              		.align	1
 1052              		.global	SPI_I2S_SendData
 1053              		.syntax unified
 1054              		.thumb
 1055              		.thumb_func
 1057              	SPI_I2S_SendData:
 1058              	.LVL81:
 1059              	.LFB137:
 823:./Library/stm32f4xx_spi.c **** 
 824:./Library/stm32f4xx_spi.c **** /**
 825:./Library/stm32f4xx_spi.c ****   * @brief  Transmits a Data through the SPIx/I2Sx peripheral.
 826:./Library/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
 827:./Library/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode.     
 828:./Library/stm32f4xx_spi.c ****   * @param  Data: Data to be transmitted.
 829:./Library/stm32f4xx_spi.c ****   * @retval None
 830:./Library/stm32f4xx_spi.c ****   */
 831:./Library/stm32f4xx_spi.c **** void SPI_I2S_SendData(SPI_TypeDef* SPIx, uint16_t Data)
 832:./Library/stm32f4xx_spi.c **** {
 1060              		.loc 1 832 1 is_stmt 1 view -0
 1061              		.cfi_startproc
 1062              		@ args = 0, pretend = 0, frame = 0
 1063              		@ frame_needed = 0, uses_anonymous_args = 0
 1064              		@ link register save eliminated.
 833:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
 834:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 1065              		.loc 1 834 3 view .LVU337
 835:./Library/stm32f4xx_spi.c ****   
 836:./Library/stm32f4xx_spi.c ****   /* Write in the DR register the data to be sent */
 837:./Library/stm32f4xx_spi.c ****   SPIx->DR = Data;
 1066              		.loc 1 837 3 view .LVU338
 1067              		.loc 1 837 12 is_stmt 0 view .LVU339
 1068 0000 8181     		strh	r1, [r0, #12]	@ movhi
 838:./Library/stm32f4xx_spi.c **** }
 1069              		.loc 1 838 1 view .LVU340
 1070 0002 7047     		bx	lr
 1071              		.cfi_endproc
 1072              	.LFE137:
 1074              		.section	.text.SPI_CalculateCRC,"ax",%progbits
 1075              		.align	1
 1076              		.global	SPI_CalculateCRC
 1077              		.syntax unified
 1078              		.thumb
 1079              		.thumb_func
 1081              	SPI_CalculateCRC:
 1082              	.LVL82:
 1083              	.LFB138:
ARM GAS  /tmp/ccMwpaqC.s 			page 35


 839:./Library/stm32f4xx_spi.c **** 
 840:./Library/stm32f4xx_spi.c **** /**
 841:./Library/stm32f4xx_spi.c ****   * @}
 842:./Library/stm32f4xx_spi.c ****   */
 843:./Library/stm32f4xx_spi.c **** 
 844:./Library/stm32f4xx_spi.c **** /** @defgroup SPI_Group3 Hardware CRC Calculation functions
 845:./Library/stm32f4xx_spi.c ****  *  @brief   Hardware CRC Calculation functions
 846:./Library/stm32f4xx_spi.c ****  *
 847:./Library/stm32f4xx_spi.c **** @verbatim   
 848:./Library/stm32f4xx_spi.c ****  ===============================================================================
 849:./Library/stm32f4xx_spi.c ****                  ##### Hardware CRC Calculation functions #####
 850:./Library/stm32f4xx_spi.c ****  ===============================================================================  
 851:./Library/stm32f4xx_spi.c **** 
 852:./Library/stm32f4xx_spi.c ****  [..] This section provides a set of functions allowing to manage the SPI CRC hardware 
 853:./Library/stm32f4xx_spi.c ****       calculation
 854:./Library/stm32f4xx_spi.c **** 
 855:./Library/stm32f4xx_spi.c ****  [..] SPI communication using CRC is possible through the following procedure:
 856:./Library/stm32f4xx_spi.c ****    (#) Program the Data direction, Polarity, Phase, First Data, Baud Rate Prescaler, 
 857:./Library/stm32f4xx_spi.c ****        Slave Management, Peripheral Mode and CRC Polynomial values using the SPI_Init()
 858:./Library/stm32f4xx_spi.c ****        function.
 859:./Library/stm32f4xx_spi.c ****    (#) Enable the CRC calculation using the SPI_CalculateCRC() function.
 860:./Library/stm32f4xx_spi.c ****    (#) Enable the SPI using the SPI_Cmd() function
 861:./Library/stm32f4xx_spi.c ****    (#) Before writing the last data to the TX buffer, set the CRCNext bit using the 
 862:./Library/stm32f4xx_spi.c ****        SPI_TransmitCRC() function to indicate that after transmission of the last 
 863:./Library/stm32f4xx_spi.c ****        data, the CRC should be transmitted.
 864:./Library/stm32f4xx_spi.c ****    (#) After transmitting the last data, the SPI transmits the CRC. The SPI_CR1_CRCNEXT
 865:./Library/stm32f4xx_spi.c ****         bit is reset. The CRC is also received and compared against the SPI_RXCRCR 
 866:./Library/stm32f4xx_spi.c ****         value. 
 867:./Library/stm32f4xx_spi.c ****         If the value does not match, the SPI_FLAG_CRCERR flag is set and an interrupt
 868:./Library/stm32f4xx_spi.c ****         can be generated when the SPI_I2S_IT_ERR interrupt is enabled.
 869:./Library/stm32f4xx_spi.c **** 
 870:./Library/stm32f4xx_spi.c ****  [..]
 871:./Library/stm32f4xx_spi.c ****    (@) It is advised not to read the calculated CRC values during the communication.
 872:./Library/stm32f4xx_spi.c **** 
 873:./Library/stm32f4xx_spi.c ****    (@) When the SPI is in slave mode, be careful to enable CRC calculation only 
 874:./Library/stm32f4xx_spi.c ****        when the clock is stable, that is, when the clock is in the steady state. 
 875:./Library/stm32f4xx_spi.c ****        If not, a wrong CRC calculation may be done. In fact, the CRC is sensitive 
 876:./Library/stm32f4xx_spi.c ****        to the SCK slave input clock as soon as CRCEN is set, and this, whatever 
 877:./Library/stm32f4xx_spi.c ****        the value of the SPE bit.
 878:./Library/stm32f4xx_spi.c **** 
 879:./Library/stm32f4xx_spi.c ****    (@) With high bitrate frequencies, be careful when transmitting the CRC.
 880:./Library/stm32f4xx_spi.c ****        As the number of used CPU cycles has to be as low as possible in the CRC 
 881:./Library/stm32f4xx_spi.c ****        transfer phase, it is forbidden to call software functions in the CRC 
 882:./Library/stm32f4xx_spi.c ****        transmission sequence to avoid errors in the last data and CRC reception. 
 883:./Library/stm32f4xx_spi.c ****        In fact, CRCNEXT bit has to be written before the end of the transmission/reception 
 884:./Library/stm32f4xx_spi.c ****        of the last data.
 885:./Library/stm32f4xx_spi.c **** 
 886:./Library/stm32f4xx_spi.c ****    (@) For high bit rate frequencies, it is advised to use the DMA mode to avoid the
 887:./Library/stm32f4xx_spi.c ****        degradation of the SPI speed performance due to CPU accesses impacting the 
 888:./Library/stm32f4xx_spi.c ****        SPI bandwidth.
 889:./Library/stm32f4xx_spi.c **** 
 890:./Library/stm32f4xx_spi.c ****    (@) When the STM32F4xx is configured as slave and the NSS hardware mode is 
 891:./Library/stm32f4xx_spi.c ****        used, the NSS pin needs to be kept low between the data phase and the CRC 
 892:./Library/stm32f4xx_spi.c ****        phase.
 893:./Library/stm32f4xx_spi.c **** 
 894:./Library/stm32f4xx_spi.c ****    (@) When the SPI is configured in slave mode with the CRC feature enabled, CRC
 895:./Library/stm32f4xx_spi.c ****        calculation takes place even if a high level is applied on the NSS pin. 
ARM GAS  /tmp/ccMwpaqC.s 			page 36


 896:./Library/stm32f4xx_spi.c ****        This may happen for example in case of a multi-slave environment where the 
 897:./Library/stm32f4xx_spi.c ****        communication master addresses slaves alternately.
 898:./Library/stm32f4xx_spi.c **** 
 899:./Library/stm32f4xx_spi.c ****    (@) Between a slave de-selection (high level on NSS) and a new slave selection 
 900:./Library/stm32f4xx_spi.c ****        (low level on NSS), the CRC value should be cleared on both master and slave
 901:./Library/stm32f4xx_spi.c ****        sides in order to resynchronize the master and slave for their respective 
 902:./Library/stm32f4xx_spi.c ****        CRC calculation.
 903:./Library/stm32f4xx_spi.c **** 
 904:./Library/stm32f4xx_spi.c ****    (@) To clear the CRC, follow the procedure below:
 905:./Library/stm32f4xx_spi.c ****        (#@) Disable SPI using the SPI_Cmd() function
 906:./Library/stm32f4xx_spi.c ****        (#@) Disable the CRC calculation using the SPI_CalculateCRC() function.
 907:./Library/stm32f4xx_spi.c ****        (#@) Enable the CRC calculation using the SPI_CalculateCRC() function.
 908:./Library/stm32f4xx_spi.c ****        (#@) Enable SPI using the SPI_Cmd() function.
 909:./Library/stm32f4xx_spi.c **** 
 910:./Library/stm32f4xx_spi.c **** @endverbatim
 911:./Library/stm32f4xx_spi.c ****   * @{
 912:./Library/stm32f4xx_spi.c ****   */
 913:./Library/stm32f4xx_spi.c **** 
 914:./Library/stm32f4xx_spi.c **** /**
 915:./Library/stm32f4xx_spi.c ****   * @brief  Enables or disables the CRC value calculation of the transferred bytes.
 916:./Library/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 917:./Library/stm32f4xx_spi.c ****   * @param  NewState: new state of the SPIx CRC value calculation.
 918:./Library/stm32f4xx_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
 919:./Library/stm32f4xx_spi.c ****   * @retval None
 920:./Library/stm32f4xx_spi.c ****   */
 921:./Library/stm32f4xx_spi.c **** void SPI_CalculateCRC(SPI_TypeDef* SPIx, FunctionalState NewState)
 922:./Library/stm32f4xx_spi.c **** {
 1084              		.loc 1 922 1 is_stmt 1 view -0
 1085              		.cfi_startproc
 1086              		@ args = 0, pretend = 0, frame = 0
 1087              		@ frame_needed = 0, uses_anonymous_args = 0
 1088              		@ link register save eliminated.
 923:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
 924:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 1089              		.loc 1 924 3 view .LVU342
 925:./Library/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1090              		.loc 1 925 3 view .LVU343
 926:./Library/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 1091              		.loc 1 926 3 view .LVU344
 1092              		.loc 1 926 6 is_stmt 0 view .LVU345
 1093 0000 29B1     		cbz	r1, .L66
 927:./Library/stm32f4xx_spi.c ****   {
 928:./Library/stm32f4xx_spi.c ****     /* Enable the selected SPI CRC calculation */
 929:./Library/stm32f4xx_spi.c ****     SPIx->CR1 |= SPI_CR1_CRCEN;
 1094              		.loc 1 929 5 is_stmt 1 view .LVU346
 1095              		.loc 1 929 9 is_stmt 0 view .LVU347
 1096 0002 0388     		ldrh	r3, [r0]
 1097 0004 9BB2     		uxth	r3, r3
 1098              		.loc 1 929 15 view .LVU348
 1099 0006 43F40053 		orr	r3, r3, #8192
 1100 000a 0380     		strh	r3, [r0]	@ movhi
 1101 000c 7047     		bx	lr
 1102              	.L66:
 930:./Library/stm32f4xx_spi.c ****   }
 931:./Library/stm32f4xx_spi.c ****   else
 932:./Library/stm32f4xx_spi.c ****   {
 933:./Library/stm32f4xx_spi.c ****     /* Disable the selected SPI CRC calculation */
ARM GAS  /tmp/ccMwpaqC.s 			page 37


 934:./Library/stm32f4xx_spi.c ****     SPIx->CR1 &= (uint16_t)~((uint16_t)SPI_CR1_CRCEN);
 1103              		.loc 1 934 5 is_stmt 1 view .LVU349
 1104              		.loc 1 934 9 is_stmt 0 view .LVU350
 1105 000e 0388     		ldrh	r3, [r0]
 1106 0010 9BB2     		uxth	r3, r3
 1107              		.loc 1 934 15 view .LVU351
 1108 0012 23F40053 		bic	r3, r3, #8192
 1109 0016 9BB2     		uxth	r3, r3
 1110 0018 0380     		strh	r3, [r0]	@ movhi
 935:./Library/stm32f4xx_spi.c ****   }
 936:./Library/stm32f4xx_spi.c **** }
 1111              		.loc 1 936 1 view .LVU352
 1112 001a 7047     		bx	lr
 1113              		.cfi_endproc
 1114              	.LFE138:
 1116              		.section	.text.SPI_TransmitCRC,"ax",%progbits
 1117              		.align	1
 1118              		.global	SPI_TransmitCRC
 1119              		.syntax unified
 1120              		.thumb
 1121              		.thumb_func
 1123              	SPI_TransmitCRC:
 1124              	.LVL83:
 1125              	.LFB139:
 937:./Library/stm32f4xx_spi.c **** 
 938:./Library/stm32f4xx_spi.c **** /**
 939:./Library/stm32f4xx_spi.c ****   * @brief  Transmit the SPIx CRC value.
 940:./Library/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 941:./Library/stm32f4xx_spi.c ****   * @retval None
 942:./Library/stm32f4xx_spi.c ****   */
 943:./Library/stm32f4xx_spi.c **** void SPI_TransmitCRC(SPI_TypeDef* SPIx)
 944:./Library/stm32f4xx_spi.c **** {
 1126              		.loc 1 944 1 is_stmt 1 view -0
 1127              		.cfi_startproc
 1128              		@ args = 0, pretend = 0, frame = 0
 1129              		@ frame_needed = 0, uses_anonymous_args = 0
 1130              		@ link register save eliminated.
 945:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
 946:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 1131              		.loc 1 946 3 view .LVU354
 947:./Library/stm32f4xx_spi.c ****   
 948:./Library/stm32f4xx_spi.c ****   /* Enable the selected SPI CRC transmission */
 949:./Library/stm32f4xx_spi.c ****   SPIx->CR1 |= SPI_CR1_CRCNEXT;
 1132              		.loc 1 949 3 view .LVU355
 1133              		.loc 1 949 7 is_stmt 0 view .LVU356
 1134 0000 0388     		ldrh	r3, [r0]
 1135 0002 9BB2     		uxth	r3, r3
 1136              		.loc 1 949 13 view .LVU357
 1137 0004 43F48053 		orr	r3, r3, #4096
 1138 0008 0380     		strh	r3, [r0]	@ movhi
 950:./Library/stm32f4xx_spi.c **** }
 1139              		.loc 1 950 1 view .LVU358
 1140 000a 7047     		bx	lr
 1141              		.cfi_endproc
 1142              	.LFE139:
 1144              		.section	.text.SPI_GetCRC,"ax",%progbits
 1145              		.align	1
ARM GAS  /tmp/ccMwpaqC.s 			page 38


 1146              		.global	SPI_GetCRC
 1147              		.syntax unified
 1148              		.thumb
 1149              		.thumb_func
 1151              	SPI_GetCRC:
 1152              	.LVL84:
 1153              	.LFB140:
 951:./Library/stm32f4xx_spi.c **** 
 952:./Library/stm32f4xx_spi.c **** /**
 953:./Library/stm32f4xx_spi.c ****   * @brief  Returns the transmit or the receive CRC register value for the specified SPI.
 954:./Library/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 955:./Library/stm32f4xx_spi.c ****   * @param  SPI_CRC: specifies the CRC register to be read.
 956:./Library/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
 957:./Library/stm32f4xx_spi.c ****   *            @arg SPI_CRC_Tx: Selects Tx CRC register
 958:./Library/stm32f4xx_spi.c ****   *            @arg SPI_CRC_Rx: Selects Rx CRC register
 959:./Library/stm32f4xx_spi.c ****   * @retval The selected CRC register value..
 960:./Library/stm32f4xx_spi.c ****   */
 961:./Library/stm32f4xx_spi.c **** uint16_t SPI_GetCRC(SPI_TypeDef* SPIx, uint8_t SPI_CRC)
 962:./Library/stm32f4xx_spi.c **** {
 1154              		.loc 1 962 1 is_stmt 1 view -0
 1155              		.cfi_startproc
 1156              		@ args = 0, pretend = 0, frame = 0
 1157              		@ frame_needed = 0, uses_anonymous_args = 0
 1158              		@ link register save eliminated.
 963:./Library/stm32f4xx_spi.c ****   uint16_t crcreg = 0;
 1159              		.loc 1 963 3 view .LVU360
 964:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
 965:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 1160              		.loc 1 965 3 view .LVU361
 966:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_CRC(SPI_CRC));
 1161              		.loc 1 966 3 view .LVU362
 967:./Library/stm32f4xx_spi.c ****   if (SPI_CRC != SPI_CRC_Rx)
 1162              		.loc 1 967 3 view .LVU363
 1163              		.loc 1 967 6 is_stmt 0 view .LVU364
 1164 0000 0129     		cmp	r1, #1
 1165 0002 02D0     		beq	.L70
 968:./Library/stm32f4xx_spi.c ****   {
 969:./Library/stm32f4xx_spi.c ****     /* Get the Tx CRC register */
 970:./Library/stm32f4xx_spi.c ****     crcreg = SPIx->TXCRCR;
 1166              		.loc 1 970 5 is_stmt 1 view .LVU365
 1167              		.loc 1 970 12 is_stmt 0 view .LVU366
 1168 0004 008B     		ldrh	r0, [r0, #24]
 1169              	.LVL85:
 1170              		.loc 1 970 12 view .LVU367
 1171 0006 80B2     		uxth	r0, r0
 1172              	.LVL86:
 1173              		.loc 1 970 12 view .LVU368
 1174 0008 7047     		bx	lr
 1175              	.LVL87:
 1176              	.L70:
 971:./Library/stm32f4xx_spi.c ****   }
 972:./Library/stm32f4xx_spi.c ****   else
 973:./Library/stm32f4xx_spi.c ****   {
 974:./Library/stm32f4xx_spi.c ****     /* Get the Rx CRC register */
 975:./Library/stm32f4xx_spi.c ****     crcreg = SPIx->RXCRCR;
 1177              		.loc 1 975 5 is_stmt 1 view .LVU369
 1178              		.loc 1 975 12 is_stmt 0 view .LVU370
ARM GAS  /tmp/ccMwpaqC.s 			page 39


 1179 000a 808A     		ldrh	r0, [r0, #20]
 1180              	.LVL88:
 1181              		.loc 1 975 12 view .LVU371
 1182 000c 80B2     		uxth	r0, r0
 1183              	.LVL89:
 976:./Library/stm32f4xx_spi.c ****   }
 977:./Library/stm32f4xx_spi.c ****   /* Return the selected CRC register */
 978:./Library/stm32f4xx_spi.c ****   return crcreg;
 1184              		.loc 1 978 3 is_stmt 1 view .LVU372
 979:./Library/stm32f4xx_spi.c **** }
 1185              		.loc 1 979 1 is_stmt 0 view .LVU373
 1186 000e 7047     		bx	lr
 1187              		.cfi_endproc
 1188              	.LFE140:
 1190              		.section	.text.SPI_GetCRCPolynomial,"ax",%progbits
 1191              		.align	1
 1192              		.global	SPI_GetCRCPolynomial
 1193              		.syntax unified
 1194              		.thumb
 1195              		.thumb_func
 1197              	SPI_GetCRCPolynomial:
 1198              	.LVL90:
 1199              	.LFB141:
 980:./Library/stm32f4xx_spi.c **** 
 981:./Library/stm32f4xx_spi.c **** /**
 982:./Library/stm32f4xx_spi.c ****   * @brief  Returns the CRC Polynomial register value for the specified SPI.
 983:./Library/stm32f4xx_spi.c ****   * @param  SPIx: where x can be 1, 2, 3, 4, 5 or 6 to select the SPI peripheral.
 984:./Library/stm32f4xx_spi.c ****   * @retval The CRC Polynomial register value.
 985:./Library/stm32f4xx_spi.c ****   */
 986:./Library/stm32f4xx_spi.c **** uint16_t SPI_GetCRCPolynomial(SPI_TypeDef* SPIx)
 987:./Library/stm32f4xx_spi.c **** {
 1200              		.loc 1 987 1 is_stmt 1 view -0
 1201              		.cfi_startproc
 1202              		@ args = 0, pretend = 0, frame = 0
 1203              		@ frame_needed = 0, uses_anonymous_args = 0
 1204              		@ link register save eliminated.
 988:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
 989:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 1205              		.loc 1 989 3 view .LVU375
 990:./Library/stm32f4xx_spi.c ****   
 991:./Library/stm32f4xx_spi.c ****   /* Return the CRC polynomial register */
 992:./Library/stm32f4xx_spi.c ****   return SPIx->CRCPR;
 1206              		.loc 1 992 3 view .LVU376
 1207              		.loc 1 992 14 is_stmt 0 view .LVU377
 1208 0000 008A     		ldrh	r0, [r0, #16]
 1209              	.LVL91:
 993:./Library/stm32f4xx_spi.c **** }
 1210              		.loc 1 993 1 view .LVU378
 1211 0002 80B2     		uxth	r0, r0
 1212 0004 7047     		bx	lr
 1213              		.cfi_endproc
 1214              	.LFE141:
 1216              		.section	.text.SPI_I2S_DMACmd,"ax",%progbits
 1217              		.align	1
 1218              		.global	SPI_I2S_DMACmd
 1219              		.syntax unified
 1220              		.thumb
ARM GAS  /tmp/ccMwpaqC.s 			page 40


 1221              		.thumb_func
 1223              	SPI_I2S_DMACmd:
 1224              	.LVL92:
 1225              	.LFB142:
 994:./Library/stm32f4xx_spi.c **** 
 995:./Library/stm32f4xx_spi.c **** /**
 996:./Library/stm32f4xx_spi.c ****   * @}
 997:./Library/stm32f4xx_spi.c ****   */
 998:./Library/stm32f4xx_spi.c **** 
 999:./Library/stm32f4xx_spi.c **** /** @defgroup SPI_Group4 DMA transfers management functions
1000:./Library/stm32f4xx_spi.c ****  *  @brief   DMA transfers management functions
1001:./Library/stm32f4xx_spi.c ****   *
1002:./Library/stm32f4xx_spi.c **** @verbatim   
1003:./Library/stm32f4xx_spi.c ****  ===============================================================================
1004:./Library/stm32f4xx_spi.c ****                    ##### DMA transfers management functions #####
1005:./Library/stm32f4xx_spi.c ****  ===============================================================================  
1006:./Library/stm32f4xx_spi.c **** 
1007:./Library/stm32f4xx_spi.c **** @endverbatim
1008:./Library/stm32f4xx_spi.c ****   * @{
1009:./Library/stm32f4xx_spi.c ****   */
1010:./Library/stm32f4xx_spi.c **** 
1011:./Library/stm32f4xx_spi.c **** /**
1012:./Library/stm32f4xx_spi.c ****   * @brief  Enables or disables the SPIx/I2Sx DMA interface.
1013:./Library/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
1014:./Library/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode. 
1015:./Library/stm32f4xx_spi.c ****   * @param  SPI_I2S_DMAReq: specifies the SPI DMA transfer request to be enabled or disabled. 
1016:./Library/stm32f4xx_spi.c ****   *          This parameter can be any combination of the following values:
1017:./Library/stm32f4xx_spi.c ****   *            @arg SPI_I2S_DMAReq_Tx: Tx buffer DMA transfer request
1018:./Library/stm32f4xx_spi.c ****   *            @arg SPI_I2S_DMAReq_Rx: Rx buffer DMA transfer request
1019:./Library/stm32f4xx_spi.c ****   * @param  NewState: new state of the selected SPI DMA transfer request.
1020:./Library/stm32f4xx_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
1021:./Library/stm32f4xx_spi.c ****   * @retval None
1022:./Library/stm32f4xx_spi.c ****   */
1023:./Library/stm32f4xx_spi.c **** void SPI_I2S_DMACmd(SPI_TypeDef* SPIx, uint16_t SPI_I2S_DMAReq, FunctionalState NewState)
1024:./Library/stm32f4xx_spi.c **** {
 1226              		.loc 1 1024 1 is_stmt 1 view -0
 1227              		.cfi_startproc
 1228              		@ args = 0, pretend = 0, frame = 0
 1229              		@ frame_needed = 0, uses_anonymous_args = 0
 1230              		@ link register save eliminated.
1025:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
1026:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 1231              		.loc 1 1026 3 view .LVU380
1027:./Library/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1232              		.loc 1 1027 3 view .LVU381
1028:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_DMAREQ(SPI_I2S_DMAReq));
 1233              		.loc 1 1028 3 view .LVU382
1029:./Library/stm32f4xx_spi.c **** 
1030:./Library/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 1234              		.loc 1 1030 3 view .LVU383
 1235              		.loc 1 1030 6 is_stmt 0 view .LVU384
 1236 0000 22B1     		cbz	r2, .L74
1031:./Library/stm32f4xx_spi.c ****   {
1032:./Library/stm32f4xx_spi.c ****     /* Enable the selected SPI DMA requests */
1033:./Library/stm32f4xx_spi.c ****     SPIx->CR2 |= SPI_I2S_DMAReq;
 1237              		.loc 1 1033 5 is_stmt 1 view .LVU385
 1238              		.loc 1 1033 9 is_stmt 0 view .LVU386
ARM GAS  /tmp/ccMwpaqC.s 			page 41


 1239 0002 8388     		ldrh	r3, [r0, #4]
 1240 0004 9BB2     		uxth	r3, r3
 1241              		.loc 1 1033 15 view .LVU387
 1242 0006 0B43     		orrs	r3, r3, r1
 1243 0008 8380     		strh	r3, [r0, #4]	@ movhi
 1244 000a 7047     		bx	lr
 1245              	.L74:
1034:./Library/stm32f4xx_spi.c ****   }
1035:./Library/stm32f4xx_spi.c ****   else
1036:./Library/stm32f4xx_spi.c ****   {
1037:./Library/stm32f4xx_spi.c ****     /* Disable the selected SPI DMA requests */
1038:./Library/stm32f4xx_spi.c ****     SPIx->CR2 &= (uint16_t)~SPI_I2S_DMAReq;
 1246              		.loc 1 1038 5 is_stmt 1 view .LVU388
 1247              		.loc 1 1038 9 is_stmt 0 view .LVU389
 1248 000c 8388     		ldrh	r3, [r0, #4]
 1249              		.loc 1 1038 18 view .LVU390
 1250 000e C943     		mvns	r1, r1
 1251              	.LVL93:
 1252              		.loc 1 1038 18 view .LVU391
 1253 0010 89B2     		uxth	r1, r1
 1254              		.loc 1 1038 15 view .LVU392
 1255 0012 1940     		ands	r1, r1, r3
 1256 0014 8180     		strh	r1, [r0, #4]	@ movhi
1039:./Library/stm32f4xx_spi.c ****   }
1040:./Library/stm32f4xx_spi.c **** }
 1257              		.loc 1 1040 1 view .LVU393
 1258 0016 7047     		bx	lr
 1259              		.cfi_endproc
 1260              	.LFE142:
 1262              		.section	.text.SPI_I2S_ITConfig,"ax",%progbits
 1263              		.align	1
 1264              		.global	SPI_I2S_ITConfig
 1265              		.syntax unified
 1266              		.thumb
 1267              		.thumb_func
 1269              	SPI_I2S_ITConfig:
 1270              	.LVL94:
 1271              	.LFB143:
1041:./Library/stm32f4xx_spi.c **** 
1042:./Library/stm32f4xx_spi.c **** /**
1043:./Library/stm32f4xx_spi.c ****   * @}
1044:./Library/stm32f4xx_spi.c ****   */
1045:./Library/stm32f4xx_spi.c **** 
1046:./Library/stm32f4xx_spi.c **** /** @defgroup SPI_Group5 Interrupts and flags management functions
1047:./Library/stm32f4xx_spi.c ****  *  @brief   Interrupts and flags management functions
1048:./Library/stm32f4xx_spi.c ****   *
1049:./Library/stm32f4xx_spi.c **** @verbatim   
1050:./Library/stm32f4xx_spi.c ****  ===============================================================================
1051:./Library/stm32f4xx_spi.c ****             ##### Interrupts and flags management functions #####
1052:./Library/stm32f4xx_spi.c ****  ===============================================================================  
1053:./Library/stm32f4xx_spi.c ****  
1054:./Library/stm32f4xx_spi.c ****  [..] This section provides a set of functions allowing to configure the SPI Interrupts 
1055:./Library/stm32f4xx_spi.c ****       sources and check or clear the flags or pending bits status.
1056:./Library/stm32f4xx_spi.c ****       The user should identify which mode will be used in his application to manage 
1057:./Library/stm32f4xx_spi.c ****       the communication: Polling mode, Interrupt mode or DMA mode. 
1058:./Library/stm32f4xx_spi.c ****     
1059:./Library/stm32f4xx_spi.c ****  *** Polling Mode ***
ARM GAS  /tmp/ccMwpaqC.s 			page 42


1060:./Library/stm32f4xx_spi.c ****  ====================
1061:./Library/stm32f4xx_spi.c **** [..] In Polling Mode, the SPI/I2S communication can be managed by 9 flags:
1062:./Library/stm32f4xx_spi.c ****   (#) SPI_I2S_FLAG_TXE : to indicate the status of the transmit buffer register
1063:./Library/stm32f4xx_spi.c ****   (#) SPI_I2S_FLAG_RXNE : to indicate the status of the receive buffer register
1064:./Library/stm32f4xx_spi.c ****   (#) SPI_I2S_FLAG_BSY : to indicate the state of the communication layer of the SPI.
1065:./Library/stm32f4xx_spi.c ****   (#) SPI_FLAG_CRCERR : to indicate if a CRC Calculation error occur              
1066:./Library/stm32f4xx_spi.c ****   (#) SPI_FLAG_MODF : to indicate if a Mode Fault error occur
1067:./Library/stm32f4xx_spi.c ****   (#) SPI_I2S_FLAG_OVR : to indicate if an Overrun error occur
1068:./Library/stm32f4xx_spi.c ****   (#) I2S_FLAG_TIFRFE: to indicate a Frame Format error occurs.
1069:./Library/stm32f4xx_spi.c ****   (#) I2S_FLAG_UDR: to indicate an Underrun error occurs.
1070:./Library/stm32f4xx_spi.c ****   (#) I2S_FLAG_CHSIDE: to indicate Channel Side.
1071:./Library/stm32f4xx_spi.c **** 
1072:./Library/stm32f4xx_spi.c ****   (@) Do not use the BSY flag to handle each data transmission or reception. It is
1073:./Library/stm32f4xx_spi.c ****       better to use the TXE and RXNE flags instead.
1074:./Library/stm32f4xx_spi.c **** 
1075:./Library/stm32f4xx_spi.c ****  [..] In this Mode it is advised to use the following functions:
1076:./Library/stm32f4xx_spi.c ****    (+) FlagStatus SPI_I2S_GetFlagStatus(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG);
1077:./Library/stm32f4xx_spi.c ****    (+) void SPI_I2S_ClearFlag(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG);
1078:./Library/stm32f4xx_spi.c **** 
1079:./Library/stm32f4xx_spi.c ****  *** Interrupt Mode ***
1080:./Library/stm32f4xx_spi.c ****  ======================
1081:./Library/stm32f4xx_spi.c ****  [..] In Interrupt Mode, the SPI communication can be managed by 3 interrupt sources
1082:./Library/stm32f4xx_spi.c ****       and 7 pending bits: 
1083:./Library/stm32f4xx_spi.c ****    (+) Pending Bits:
1084:./Library/stm32f4xx_spi.c ****        (##) SPI_I2S_IT_TXE : to indicate the status of the transmit buffer register
1085:./Library/stm32f4xx_spi.c ****        (##) SPI_I2S_IT_RXNE : to indicate the status of the receive buffer register
1086:./Library/stm32f4xx_spi.c ****        (##) SPI_IT_CRCERR : to indicate if a CRC Calculation error occur (available in SPI mode onl
1087:./Library/stm32f4xx_spi.c ****        (##) SPI_IT_MODF : to indicate if a Mode Fault error occur (available in SPI mode only)
1088:./Library/stm32f4xx_spi.c ****        (##) SPI_I2S_IT_OVR : to indicate if an Overrun error occur
1089:./Library/stm32f4xx_spi.c ****        (##) I2S_IT_UDR : to indicate an Underrun Error occurs (available in I2S mode only).
1090:./Library/stm32f4xx_spi.c ****        (##) I2S_FLAG_TIFRFE : to indicate a Frame Format error occurs (available in TI mode only).
1091:./Library/stm32f4xx_spi.c **** 
1092:./Library/stm32f4xx_spi.c ****    (+) Interrupt Source:
1093:./Library/stm32f4xx_spi.c ****        (##) SPI_I2S_IT_TXE: specifies the interrupt source for the Tx buffer empty 
1094:./Library/stm32f4xx_spi.c ****             interrupt.  
1095:./Library/stm32f4xx_spi.c ****        (##) SPI_I2S_IT_RXNE : specifies the interrupt source for the Rx buffer not 
1096:./Library/stm32f4xx_spi.c ****             empty interrupt.
1097:./Library/stm32f4xx_spi.c ****        (##) SPI_I2S_IT_ERR : specifies the interrupt source for the errors interrupt.
1098:./Library/stm32f4xx_spi.c **** 
1099:./Library/stm32f4xx_spi.c ****  [..] In this Mode it is advised to use the following functions:
1100:./Library/stm32f4xx_spi.c ****    (+) void SPI_I2S_ITConfig(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT, FunctionalState NewState);
1101:./Library/stm32f4xx_spi.c ****    (+) ITStatus SPI_I2S_GetITStatus(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT);
1102:./Library/stm32f4xx_spi.c ****    (+) void SPI_I2S_ClearITPendingBit(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT);
1103:./Library/stm32f4xx_spi.c **** 
1104:./Library/stm32f4xx_spi.c ****  *** DMA Mode ***
1105:./Library/stm32f4xx_spi.c ****  ================
1106:./Library/stm32f4xx_spi.c ****  [..] In DMA Mode, the SPI communication can be managed by 2 DMA Channel requests:
1107:./Library/stm32f4xx_spi.c ****    (#) SPI_I2S_DMAReq_Tx: specifies the Tx buffer DMA transfer request
1108:./Library/stm32f4xx_spi.c ****    (#) SPI_I2S_DMAReq_Rx: specifies the Rx buffer DMA transfer request
1109:./Library/stm32f4xx_spi.c **** 
1110:./Library/stm32f4xx_spi.c ****  [..] In this Mode it is advised to use the following function:
1111:./Library/stm32f4xx_spi.c ****    (+) void SPI_I2S_DMACmd(SPI_TypeDef* SPIx, uint16_t SPI_I2S_DMAReq, FunctionalState 
1112:./Library/stm32f4xx_spi.c ****        NewState);
1113:./Library/stm32f4xx_spi.c **** 
1114:./Library/stm32f4xx_spi.c **** @endverbatim
1115:./Library/stm32f4xx_spi.c ****   * @{
1116:./Library/stm32f4xx_spi.c ****   */
ARM GAS  /tmp/ccMwpaqC.s 			page 43


1117:./Library/stm32f4xx_spi.c **** 
1118:./Library/stm32f4xx_spi.c **** /**
1119:./Library/stm32f4xx_spi.c ****   * @brief  Enables or disables the specified SPI/I2S interrupts.
1120:./Library/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
1121:./Library/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode. 
1122:./Library/stm32f4xx_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI interrupt source to be enabled or disabled. 
1123:./Library/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
1124:./Library/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_TXE: Tx buffer empty interrupt mask
1125:./Library/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_RXNE: Rx buffer not empty interrupt mask
1126:./Library/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_ERR: Error interrupt mask
1127:./Library/stm32f4xx_spi.c ****   * @param  NewState: new state of the specified SPI interrupt.
1128:./Library/stm32f4xx_spi.c ****   *          This parameter can be: ENABLE or DISABLE.
1129:./Library/stm32f4xx_spi.c ****   * @retval None
1130:./Library/stm32f4xx_spi.c ****   */
1131:./Library/stm32f4xx_spi.c **** void SPI_I2S_ITConfig(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT, FunctionalState NewState)
1132:./Library/stm32f4xx_spi.c **** {
 1272              		.loc 1 1132 1 is_stmt 1 view -0
 1273              		.cfi_startproc
 1274              		@ args = 0, pretend = 0, frame = 0
 1275              		@ frame_needed = 0, uses_anonymous_args = 0
 1276              		@ link register save eliminated.
1133:./Library/stm32f4xx_spi.c ****   uint16_t itpos = 0, itmask = 0 ;
 1277              		.loc 1 1133 3 view .LVU395
1134:./Library/stm32f4xx_spi.c ****   
1135:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
1136:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 1278              		.loc 1 1136 3 view .LVU396
1137:./Library/stm32f4xx_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1279              		.loc 1 1137 3 view .LVU397
1138:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_CONFIG_IT(SPI_I2S_IT));
 1280              		.loc 1 1138 3 view .LVU398
1139:./Library/stm32f4xx_spi.c **** 
1140:./Library/stm32f4xx_spi.c ****   /* Get the SPI IT index */
1141:./Library/stm32f4xx_spi.c ****   itpos = SPI_I2S_IT >> 4;
 1281              		.loc 1 1141 3 view .LVU399
 1282              		.loc 1 1141 9 is_stmt 0 view .LVU400
 1283 0000 0909     		lsrs	r1, r1, #4
 1284              	.LVL95:
1142:./Library/stm32f4xx_spi.c **** 
1143:./Library/stm32f4xx_spi.c ****   /* Set the IT mask */
1144:./Library/stm32f4xx_spi.c ****   itmask = (uint16_t)1 << (uint16_t)itpos;
 1285              		.loc 1 1144 3 is_stmt 1 view .LVU401
 1286              		.loc 1 1144 24 is_stmt 0 view .LVU402
 1287 0002 0123     		movs	r3, #1
 1288 0004 8B40     		lsls	r3, r3, r1
 1289              		.loc 1 1144 10 view .LVU403
 1290 0006 9BB2     		uxth	r3, r3
 1291              	.LVL96:
1145:./Library/stm32f4xx_spi.c **** 
1146:./Library/stm32f4xx_spi.c ****   if (NewState != DISABLE)
 1292              		.loc 1 1146 3 is_stmt 1 view .LVU404
 1293              		.loc 1 1146 6 is_stmt 0 view .LVU405
 1294 0008 22B1     		cbz	r2, .L77
1147:./Library/stm32f4xx_spi.c ****   {
1148:./Library/stm32f4xx_spi.c ****     /* Enable the selected SPI interrupt */
1149:./Library/stm32f4xx_spi.c ****     SPIx->CR2 |= itmask;
 1295              		.loc 1 1149 5 is_stmt 1 view .LVU406
ARM GAS  /tmp/ccMwpaqC.s 			page 44


 1296              		.loc 1 1149 9 is_stmt 0 view .LVU407
 1297 000a 8288     		ldrh	r2, [r0, #4]
 1298              	.LVL97:
 1299              		.loc 1 1149 9 view .LVU408
 1300 000c 92B2     		uxth	r2, r2
 1301              		.loc 1 1149 15 view .LVU409
 1302 000e 1343     		orrs	r3, r3, r2
 1303              	.LVL98:
 1304              		.loc 1 1149 15 view .LVU410
 1305 0010 8380     		strh	r3, [r0, #4]	@ movhi
 1306 0012 7047     		bx	lr
 1307              	.LVL99:
 1308              	.L77:
1150:./Library/stm32f4xx_spi.c ****   }
1151:./Library/stm32f4xx_spi.c ****   else
1152:./Library/stm32f4xx_spi.c ****   {
1153:./Library/stm32f4xx_spi.c ****     /* Disable the selected SPI interrupt */
1154:./Library/stm32f4xx_spi.c ****     SPIx->CR2 &= (uint16_t)~itmask;
 1309              		.loc 1 1154 5 is_stmt 1 view .LVU411
 1310              		.loc 1 1154 9 is_stmt 0 view .LVU412
 1311 0014 8288     		ldrh	r2, [r0, #4]
 1312              	.LVL100:
 1313              		.loc 1 1154 18 view .LVU413
 1314 0016 DB43     		mvns	r3, r3
 1315              	.LVL101:
 1316              		.loc 1 1154 18 view .LVU414
 1317 0018 9BB2     		uxth	r3, r3
 1318              	.LVL102:
 1319              		.loc 1 1154 15 view .LVU415
 1320 001a 1340     		ands	r3, r3, r2
 1321 001c 8380     		strh	r3, [r0, #4]	@ movhi
1155:./Library/stm32f4xx_spi.c ****   }
1156:./Library/stm32f4xx_spi.c **** }
 1322              		.loc 1 1156 1 view .LVU416
 1323 001e 7047     		bx	lr
 1324              		.cfi_endproc
 1325              	.LFE143:
 1327              		.section	.text.SPI_I2S_GetFlagStatus,"ax",%progbits
 1328              		.align	1
 1329              		.global	SPI_I2S_GetFlagStatus
 1330              		.syntax unified
 1331              		.thumb
 1332              		.thumb_func
 1334              	SPI_I2S_GetFlagStatus:
 1335              	.LVL103:
 1336              	.LFB144:
1157:./Library/stm32f4xx_spi.c **** 
1158:./Library/stm32f4xx_spi.c **** /**
1159:./Library/stm32f4xx_spi.c ****   * @brief  Checks whether the specified SPIx/I2Sx flag is set or not.
1160:./Library/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
1161:./Library/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode. 
1162:./Library/stm32f4xx_spi.c ****   * @param  SPI_I2S_FLAG: specifies the SPI flag to check. 
1163:./Library/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
1164:./Library/stm32f4xx_spi.c ****   *            @arg SPI_I2S_FLAG_TXE: Transmit buffer empty flag.
1165:./Library/stm32f4xx_spi.c ****   *            @arg SPI_I2S_FLAG_RXNE: Receive buffer not empty flag.
1166:./Library/stm32f4xx_spi.c ****   *            @arg SPI_I2S_FLAG_BSY: Busy flag.
1167:./Library/stm32f4xx_spi.c ****   *            @arg SPI_I2S_FLAG_OVR: Overrun flag.
ARM GAS  /tmp/ccMwpaqC.s 			page 45


1168:./Library/stm32f4xx_spi.c ****   *            @arg SPI_FLAG_MODF: Mode Fault flag.
1169:./Library/stm32f4xx_spi.c ****   *            @arg SPI_FLAG_CRCERR: CRC Error flag.
1170:./Library/stm32f4xx_spi.c ****   *            @arg SPI_I2S_FLAG_TIFRFE: Format Error.
1171:./Library/stm32f4xx_spi.c ****   *            @arg I2S_FLAG_UDR: Underrun Error flag.
1172:./Library/stm32f4xx_spi.c ****   *            @arg I2S_FLAG_CHSIDE: Channel Side flag.  
1173:./Library/stm32f4xx_spi.c ****   * @retval The new state of SPI_I2S_FLAG (SET or RESET).
1174:./Library/stm32f4xx_spi.c ****   */
1175:./Library/stm32f4xx_spi.c **** FlagStatus SPI_I2S_GetFlagStatus(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG)
1176:./Library/stm32f4xx_spi.c **** {
 1337              		.loc 1 1176 1 is_stmt 1 view -0
 1338              		.cfi_startproc
 1339              		@ args = 0, pretend = 0, frame = 0
 1340              		@ frame_needed = 0, uses_anonymous_args = 0
 1341              		@ link register save eliminated.
1177:./Library/stm32f4xx_spi.c ****   FlagStatus bitstatus = RESET;
 1342              		.loc 1 1177 3 view .LVU418
1178:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
1179:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 1343              		.loc 1 1179 3 view .LVU419
1180:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_GET_FLAG(SPI_I2S_FLAG));
 1344              		.loc 1 1180 3 view .LVU420
1181:./Library/stm32f4xx_spi.c ****   
1182:./Library/stm32f4xx_spi.c ****   /* Check the status of the specified SPI flag */
1183:./Library/stm32f4xx_spi.c ****   if ((SPIx->SR & SPI_I2S_FLAG) != (uint16_t)RESET)
 1345              		.loc 1 1183 3 view .LVU421
 1346              		.loc 1 1183 12 is_stmt 0 view .LVU422
 1347 0000 0389     		ldrh	r3, [r0, #8]
 1348              		.loc 1 1183 6 view .LVU423
 1349 0002 1942     		tst	r1, r3
 1350 0004 01D0     		beq	.L81
1184:./Library/stm32f4xx_spi.c ****   {
1185:./Library/stm32f4xx_spi.c ****     /* SPI_I2S_FLAG is set */
1186:./Library/stm32f4xx_spi.c ****     bitstatus = SET;
 1351              		.loc 1 1186 15 view .LVU424
 1352 0006 0120     		movs	r0, #1
 1353              	.LVL104:
 1354              		.loc 1 1186 15 view .LVU425
 1355 0008 7047     		bx	lr
 1356              	.LVL105:
 1357              	.L81:
1187:./Library/stm32f4xx_spi.c ****   }
1188:./Library/stm32f4xx_spi.c ****   else
1189:./Library/stm32f4xx_spi.c ****   {
1190:./Library/stm32f4xx_spi.c ****     /* SPI_I2S_FLAG is reset */
1191:./Library/stm32f4xx_spi.c ****     bitstatus = RESET;
 1358              		.loc 1 1191 15 view .LVU426
 1359 000a 0020     		movs	r0, #0
 1360              	.LVL106:
1192:./Library/stm32f4xx_spi.c ****   }
1193:./Library/stm32f4xx_spi.c ****   /* Return the SPI_I2S_FLAG status */
1194:./Library/stm32f4xx_spi.c ****   return  bitstatus;
 1361              		.loc 1 1194 3 is_stmt 1 view .LVU427
1195:./Library/stm32f4xx_spi.c **** }
 1362              		.loc 1 1195 1 is_stmt 0 view .LVU428
 1363 000c 7047     		bx	lr
 1364              		.cfi_endproc
 1365              	.LFE144:
ARM GAS  /tmp/ccMwpaqC.s 			page 46


 1367              		.section	.text.SPI_I2S_ClearFlag,"ax",%progbits
 1368              		.align	1
 1369              		.global	SPI_I2S_ClearFlag
 1370              		.syntax unified
 1371              		.thumb
 1372              		.thumb_func
 1374              	SPI_I2S_ClearFlag:
 1375              	.LVL107:
 1376              	.LFB145:
1196:./Library/stm32f4xx_spi.c **** 
1197:./Library/stm32f4xx_spi.c **** /**
1198:./Library/stm32f4xx_spi.c ****   * @brief  Clears the SPIx CRC Error (CRCERR) flag.
1199:./Library/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
1200:./Library/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode. 
1201:./Library/stm32f4xx_spi.c ****   * @param  SPI_I2S_FLAG: specifies the SPI flag to clear. 
1202:./Library/stm32f4xx_spi.c ****   *          This function clears only CRCERR flag.
1203:./Library/stm32f4xx_spi.c ****   *            @arg SPI_FLAG_CRCERR: CRC Error flag.  
1204:./Library/stm32f4xx_spi.c ****   *  
1205:./Library/stm32f4xx_spi.c ****   * @note   OVR (OverRun error) flag is cleared by software sequence: a read 
1206:./Library/stm32f4xx_spi.c ****   *          operation to SPI_DR register (SPI_I2S_ReceiveData()) followed by a read 
1207:./Library/stm32f4xx_spi.c ****   *          operation to SPI_SR register (SPI_I2S_GetFlagStatus()).
1208:./Library/stm32f4xx_spi.c ****   * @note   UDR (UnderRun error) flag is cleared by a read operation to 
1209:./Library/stm32f4xx_spi.c ****   *          SPI_SR register (SPI_I2S_GetFlagStatus()).   
1210:./Library/stm32f4xx_spi.c ****   * @note   MODF (Mode Fault) flag is cleared by software sequence: a read/write 
1211:./Library/stm32f4xx_spi.c ****   *          operation to SPI_SR register (SPI_I2S_GetFlagStatus()) followed by a 
1212:./Library/stm32f4xx_spi.c ****   *          write operation to SPI_CR1 register (SPI_Cmd() to enable the SPI).
1213:./Library/stm32f4xx_spi.c ****   *  
1214:./Library/stm32f4xx_spi.c ****   * @retval None
1215:./Library/stm32f4xx_spi.c ****   */
1216:./Library/stm32f4xx_spi.c **** void SPI_I2S_ClearFlag(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG)
1217:./Library/stm32f4xx_spi.c **** {
 1377              		.loc 1 1217 1 is_stmt 1 view -0
 1378              		.cfi_startproc
 1379              		@ args = 0, pretend = 0, frame = 0
 1380              		@ frame_needed = 0, uses_anonymous_args = 0
 1381              		@ link register save eliminated.
1218:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
1219:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 1382              		.loc 1 1219 3 view .LVU430
1220:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_CLEAR_FLAG(SPI_I2S_FLAG));
 1383              		.loc 1 1220 3 view .LVU431
1221:./Library/stm32f4xx_spi.c ****     
1222:./Library/stm32f4xx_spi.c ****   /* Clear the selected SPI CRC Error (CRCERR) flag */
1223:./Library/stm32f4xx_spi.c ****   SPIx->SR = (uint16_t)~SPI_I2S_FLAG;
 1384              		.loc 1 1223 3 view .LVU432
 1385              		.loc 1 1223 14 is_stmt 0 view .LVU433
 1386 0000 C943     		mvns	r1, r1
 1387              	.LVL108:
 1388              		.loc 1 1223 14 view .LVU434
 1389 0002 89B2     		uxth	r1, r1
 1390              		.loc 1 1223 12 view .LVU435
 1391 0004 0181     		strh	r1, [r0, #8]	@ movhi
1224:./Library/stm32f4xx_spi.c **** }
 1392              		.loc 1 1224 1 view .LVU436
 1393 0006 7047     		bx	lr
 1394              		.cfi_endproc
 1395              	.LFE145:
ARM GAS  /tmp/ccMwpaqC.s 			page 47


 1397              		.section	.text.SPI_I2S_GetITStatus,"ax",%progbits
 1398              		.align	1
 1399              		.global	SPI_I2S_GetITStatus
 1400              		.syntax unified
 1401              		.thumb
 1402              		.thumb_func
 1404              	SPI_I2S_GetITStatus:
 1405              	.LVL109:
 1406              	.LFB146:
1225:./Library/stm32f4xx_spi.c **** 
1226:./Library/stm32f4xx_spi.c **** /**
1227:./Library/stm32f4xx_spi.c ****   * @brief  Checks whether the specified SPIx/I2Sx interrupt has occurred or not.
1228:./Library/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
1229:./Library/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode.  
1230:./Library/stm32f4xx_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI interrupt source to check. 
1231:./Library/stm32f4xx_spi.c ****   *          This parameter can be one of the following values:
1232:./Library/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_TXE: Transmit buffer empty interrupt.
1233:./Library/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_RXNE: Receive buffer not empty interrupt.
1234:./Library/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_OVR: Overrun interrupt.
1235:./Library/stm32f4xx_spi.c ****   *            @arg SPI_IT_MODF: Mode Fault interrupt.
1236:./Library/stm32f4xx_spi.c ****   *            @arg SPI_IT_CRCERR: CRC Error interrupt.
1237:./Library/stm32f4xx_spi.c ****   *            @arg I2S_IT_UDR: Underrun interrupt.  
1238:./Library/stm32f4xx_spi.c ****   *            @arg SPI_I2S_IT_TIFRFE: Format Error interrupt.  
1239:./Library/stm32f4xx_spi.c ****   * @retval The new state of SPI_I2S_IT (SET or RESET).
1240:./Library/stm32f4xx_spi.c ****   */
1241:./Library/stm32f4xx_spi.c **** ITStatus SPI_I2S_GetITStatus(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT)
1242:./Library/stm32f4xx_spi.c **** {
 1407              		.loc 1 1242 1 is_stmt 1 view -0
 1408              		.cfi_startproc
 1409              		@ args = 0, pretend = 0, frame = 0
 1410              		@ frame_needed = 0, uses_anonymous_args = 0
 1411              		@ link register save eliminated.
1243:./Library/stm32f4xx_spi.c ****   ITStatus bitstatus = RESET;
 1412              		.loc 1 1243 3 view .LVU438
1244:./Library/stm32f4xx_spi.c ****   uint16_t itpos = 0, itmask = 0, enablestatus = 0;
 1413              		.loc 1 1244 3 view .LVU439
1245:./Library/stm32f4xx_spi.c **** 
1246:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
1247:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 1414              		.loc 1 1247 3 view .LVU440
1248:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_GET_IT(SPI_I2S_IT));
 1415              		.loc 1 1248 3 view .LVU441
1249:./Library/stm32f4xx_spi.c **** 
1250:./Library/stm32f4xx_spi.c ****   /* Get the SPI_I2S_IT index */
1251:./Library/stm32f4xx_spi.c ****   itpos = 0x01 << (SPI_I2S_IT & 0x0F);
 1416              		.loc 1 1251 3 view .LVU442
 1417              		.loc 1 1251 31 is_stmt 0 view .LVU443
 1418 0000 01F00F0C 		and	ip, r1, #15
 1419              		.loc 1 1251 16 view .LVU444
 1420 0004 0123     		movs	r3, #1
 1421 0006 03FA0CFC 		lsl	ip, r3, ip
 1422              	.LVL110:
1252:./Library/stm32f4xx_spi.c **** 
1253:./Library/stm32f4xx_spi.c ****   /* Get the SPI_I2S_IT IT mask */
1254:./Library/stm32f4xx_spi.c ****   itmask = SPI_I2S_IT >> 4;
 1423              		.loc 1 1254 3 is_stmt 1 view .LVU445
 1424              		.loc 1 1254 10 is_stmt 0 view .LVU446
ARM GAS  /tmp/ccMwpaqC.s 			page 48


 1425 000a 0909     		lsrs	r1, r1, #4
 1426              	.LVL111:
1255:./Library/stm32f4xx_spi.c **** 
1256:./Library/stm32f4xx_spi.c ****   /* Set the IT mask */
1257:./Library/stm32f4xx_spi.c ****   itmask = 0x01 << itmask;
 1427              		.loc 1 1257 3 is_stmt 1 view .LVU447
 1428              		.loc 1 1257 17 is_stmt 0 view .LVU448
 1429 000c 8B40     		lsls	r3, r3, r1
 1430              	.LVL112:
1258:./Library/stm32f4xx_spi.c **** 
1259:./Library/stm32f4xx_spi.c ****   /* Get the SPI_I2S_IT enable bit status */
1260:./Library/stm32f4xx_spi.c ****   enablestatus = (SPIx->CR2 & itmask) ;
 1431              		.loc 1 1260 3 is_stmt 1 view .LVU449
 1432              		.loc 1 1260 23 is_stmt 0 view .LVU450
 1433 000e 8288     		ldrh	r2, [r0, #4]
 1434 0010 92B2     		uxth	r2, r2
 1435              		.loc 1 1260 16 view .LVU451
 1436 0012 1340     		ands	r3, r3, r2
 1437              	.LVL113:
1261:./Library/stm32f4xx_spi.c **** 
1262:./Library/stm32f4xx_spi.c ****   /* Check the status of the specified SPI interrupt */
1263:./Library/stm32f4xx_spi.c ****   if (((SPIx->SR & itpos) != (uint16_t)RESET) && enablestatus)
 1438              		.loc 1 1263 3 is_stmt 1 view .LVU452
 1439              		.loc 1 1263 13 is_stmt 0 view .LVU453
 1440 0014 0289     		ldrh	r2, [r0, #8]
 1441 0016 92B2     		uxth	r2, r2
 1442              		.loc 1 1263 6 view .LVU454
 1443 0018 1CEA020F 		tst	ip, r2
 1444 001c 02D0     		beq	.L85
 1445              		.loc 1 1263 47 discriminator 1 view .LVU455
 1446 001e 1BB9     		cbnz	r3, .L86
1264:./Library/stm32f4xx_spi.c ****   {
1265:./Library/stm32f4xx_spi.c ****     /* SPI_I2S_IT is set */
1266:./Library/stm32f4xx_spi.c ****     bitstatus = SET;
1267:./Library/stm32f4xx_spi.c ****   }
1268:./Library/stm32f4xx_spi.c ****   else
1269:./Library/stm32f4xx_spi.c ****   {
1270:./Library/stm32f4xx_spi.c ****     /* SPI_I2S_IT is reset */
1271:./Library/stm32f4xx_spi.c ****     bitstatus = RESET;
 1447              		.loc 1 1271 15 view .LVU456
 1448 0020 0020     		movs	r0, #0
 1449              	.LVL114:
 1450              		.loc 1 1271 15 view .LVU457
 1451 0022 7047     		bx	lr
 1452              	.LVL115:
 1453              	.L85:
 1454              		.loc 1 1271 15 view .LVU458
 1455 0024 0020     		movs	r0, #0
 1456              	.LVL116:
 1457              		.loc 1 1271 15 view .LVU459
 1458 0026 7047     		bx	lr
 1459              	.LVL117:
 1460              	.L86:
1266:./Library/stm32f4xx_spi.c ****   }
 1461              		.loc 1 1266 15 view .LVU460
 1462 0028 0120     		movs	r0, #1
 1463              	.LVL118:
ARM GAS  /tmp/ccMwpaqC.s 			page 49


1272:./Library/stm32f4xx_spi.c ****   }
1273:./Library/stm32f4xx_spi.c ****   /* Return the SPI_I2S_IT status */
1274:./Library/stm32f4xx_spi.c ****   return bitstatus;
 1464              		.loc 1 1274 3 is_stmt 1 view .LVU461
1275:./Library/stm32f4xx_spi.c **** }
 1465              		.loc 1 1275 1 is_stmt 0 view .LVU462
 1466 002a 7047     		bx	lr
 1467              		.cfi_endproc
 1468              	.LFE146:
 1470              		.section	.text.SPI_I2S_ClearITPendingBit,"ax",%progbits
 1471              		.align	1
 1472              		.global	SPI_I2S_ClearITPendingBit
 1473              		.syntax unified
 1474              		.thumb
 1475              		.thumb_func
 1477              	SPI_I2S_ClearITPendingBit:
 1478              	.LVL119:
 1479              	.LFB147:
1276:./Library/stm32f4xx_spi.c **** 
1277:./Library/stm32f4xx_spi.c **** /**
1278:./Library/stm32f4xx_spi.c ****   * @brief  Clears the SPIx CRC Error (CRCERR) interrupt pending bit.
1279:./Library/stm32f4xx_spi.c ****   * @param  SPIx: To select the SPIx/I2Sx peripheral, where x can be: 1, 2, 3, 4, 5 or 6 
1280:./Library/stm32f4xx_spi.c ****   *         in SPI mode or 2 or 3 in I2S mode or I2Sxext for I2S full duplex mode.  
1281:./Library/stm32f4xx_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI interrupt pending bit to clear.
1282:./Library/stm32f4xx_spi.c ****   *         This function clears only CRCERR interrupt pending bit.   
1283:./Library/stm32f4xx_spi.c ****   *            @arg SPI_IT_CRCERR: CRC Error interrupt.
1284:./Library/stm32f4xx_spi.c ****   *   
1285:./Library/stm32f4xx_spi.c ****   * @note   OVR (OverRun Error) interrupt pending bit is cleared by software 
1286:./Library/stm32f4xx_spi.c ****   *          sequence: a read operation to SPI_DR register (SPI_I2S_ReceiveData()) 
1287:./Library/stm32f4xx_spi.c ****   *          followed by a read operation to SPI_SR register (SPI_I2S_GetITStatus()).
1288:./Library/stm32f4xx_spi.c ****   * @note   UDR (UnderRun Error) interrupt pending bit is cleared by a read 
1289:./Library/stm32f4xx_spi.c ****   *          operation to SPI_SR register (SPI_I2S_GetITStatus()).   
1290:./Library/stm32f4xx_spi.c ****   * @note   MODF (Mode Fault) interrupt pending bit is cleared by software sequence:
1291:./Library/stm32f4xx_spi.c ****   *          a read/write operation to SPI_SR register (SPI_I2S_GetITStatus()) 
1292:./Library/stm32f4xx_spi.c ****   *          followed by a write operation to SPI_CR1 register (SPI_Cmd() to enable 
1293:./Library/stm32f4xx_spi.c ****   *          the SPI).
1294:./Library/stm32f4xx_spi.c ****   * @retval None
1295:./Library/stm32f4xx_spi.c ****   */
1296:./Library/stm32f4xx_spi.c **** void SPI_I2S_ClearITPendingBit(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT)
1297:./Library/stm32f4xx_spi.c **** {
 1480              		.loc 1 1297 1 is_stmt 1 view -0
 1481              		.cfi_startproc
 1482              		@ args = 0, pretend = 0, frame = 0
 1483              		@ frame_needed = 0, uses_anonymous_args = 0
 1484              		@ link register save eliminated.
1298:./Library/stm32f4xx_spi.c ****   uint16_t itpos = 0;
 1485              		.loc 1 1298 3 view .LVU464
1299:./Library/stm32f4xx_spi.c ****   /* Check the parameters */
1300:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_ALL_PERIPH_EXT(SPIx));
 1486              		.loc 1 1300 3 view .LVU465
1301:./Library/stm32f4xx_spi.c ****   assert_param(IS_SPI_I2S_CLEAR_IT(SPI_I2S_IT));
 1487              		.loc 1 1301 3 view .LVU466
1302:./Library/stm32f4xx_spi.c **** 
1303:./Library/stm32f4xx_spi.c ****   /* Get the SPI_I2S IT index */
1304:./Library/stm32f4xx_spi.c ****   itpos = 0x01 << (SPI_I2S_IT & 0x0F);
 1488              		.loc 1 1304 3 view .LVU467
 1489              		.loc 1 1304 31 is_stmt 0 view .LVU468
ARM GAS  /tmp/ccMwpaqC.s 			page 50


 1490 0000 01F00F01 		and	r1, r1, #15
 1491              	.LVL120:
 1492              		.loc 1 1304 16 view .LVU469
 1493 0004 0123     		movs	r3, #1
 1494 0006 8B40     		lsls	r3, r3, r1
 1495              		.loc 1 1304 9 view .LVU470
 1496 0008 9BB2     		uxth	r3, r3
 1497              	.LVL121:
1305:./Library/stm32f4xx_spi.c **** 
1306:./Library/stm32f4xx_spi.c ****   /* Clear the selected SPI CRC Error (CRCERR) interrupt pending bit */
1307:./Library/stm32f4xx_spi.c ****   SPIx->SR = (uint16_t)~itpos;
 1498              		.loc 1 1307 3 is_stmt 1 view .LVU471
 1499              		.loc 1 1307 14 is_stmt 0 view .LVU472
 1500 000a DB43     		mvns	r3, r3
 1501              	.LVL122:
 1502              		.loc 1 1307 14 view .LVU473
 1503 000c 9BB2     		uxth	r3, r3
 1504              	.LVL123:
 1505              		.loc 1 1307 12 view .LVU474
 1506 000e 0381     		strh	r3, [r0, #8]	@ movhi
1308:./Library/stm32f4xx_spi.c **** }
 1507              		.loc 1 1308 1 view .LVU475
 1508 0010 7047     		bx	lr
 1509              		.cfi_endproc
 1510              	.LFE147:
 1512              		.text
 1513              	.Letext0:
 1514              		.file 2 "/usr/lib/gcc/arm-none-eabi/12.2.1/include/stdint.h"
 1515              		.file 3 "./CORE/stm32f4xx.h"
 1516              		.file 4 "./Library/stm32f4xx_spi.h"
 1517              		.file 5 "./Library/stm32f4xx_rcc.h"
ARM GAS  /tmp/ccMwpaqC.s 			page 51


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_spi.c
     /tmp/ccMwpaqC.s:21     .text.SPI_I2S_DeInit:0000000000000000 $t
     /tmp/ccMwpaqC.s:27     .text.SPI_I2S_DeInit:0000000000000000 SPI_I2S_DeInit
     /tmp/ccMwpaqC.s:169    .text.SPI_I2S_DeInit:00000000000000ac $d
     /tmp/ccMwpaqC.s:179    .text.SPI_Init:0000000000000000 $t
     /tmp/ccMwpaqC.s:185    .text.SPI_Init:0000000000000000 SPI_Init
     /tmp/ccMwpaqC.s:275    .text.I2S_Init:0000000000000000 $t
     /tmp/ccMwpaqC.s:281    .text.I2S_Init:0000000000000000 I2S_Init
     /tmp/ccMwpaqC.s:546    .text.I2S_Init:0000000000000124 $d
     /tmp/ccMwpaqC.s:554    .text.SPI_StructInit:0000000000000000 $t
     /tmp/ccMwpaqC.s:560    .text.SPI_StructInit:0000000000000000 SPI_StructInit
     /tmp/ccMwpaqC.s:603    .text.I2S_StructInit:0000000000000000 $t
     /tmp/ccMwpaqC.s:609    .text.I2S_StructInit:0000000000000000 I2S_StructInit
     /tmp/ccMwpaqC.s:643    .text.SPI_Cmd:0000000000000000 $t
     /tmp/ccMwpaqC.s:649    .text.SPI_Cmd:0000000000000000 SPI_Cmd
     /tmp/ccMwpaqC.s:685    .text.I2S_Cmd:0000000000000000 $t
     /tmp/ccMwpaqC.s:691    .text.I2S_Cmd:0000000000000000 I2S_Cmd
     /tmp/ccMwpaqC.s:727    .text.SPI_DataSizeConfig:0000000000000000 $t
     /tmp/ccMwpaqC.s:733    .text.SPI_DataSizeConfig:0000000000000000 SPI_DataSizeConfig
     /tmp/ccMwpaqC.s:764    .text.SPI_BiDirectionalLineConfig:0000000000000000 $t
     /tmp/ccMwpaqC.s:770    .text.SPI_BiDirectionalLineConfig:0000000000000000 SPI_BiDirectionalLineConfig
     /tmp/ccMwpaqC.s:807    .text.SPI_NSSInternalSoftwareConfig:0000000000000000 $t
     /tmp/ccMwpaqC.s:813    .text.SPI_NSSInternalSoftwareConfig:0000000000000000 SPI_NSSInternalSoftwareConfig
     /tmp/ccMwpaqC.s:851    .text.SPI_SSOutputCmd:0000000000000000 $t
     /tmp/ccMwpaqC.s:857    .text.SPI_SSOutputCmd:0000000000000000 SPI_SSOutputCmd
     /tmp/ccMwpaqC.s:893    .text.SPI_TIModeCmd:0000000000000000 $t
     /tmp/ccMwpaqC.s:899    .text.SPI_TIModeCmd:0000000000000000 SPI_TIModeCmd
     /tmp/ccMwpaqC.s:935    .text.I2S_FullDuplexConfig:0000000000000000 $t
     /tmp/ccMwpaqC.s:941    .text.I2S_FullDuplexConfig:0000000000000000 I2S_FullDuplexConfig
     /tmp/ccMwpaqC.s:1025   .text.SPI_I2S_ReceiveData:0000000000000000 $t
     /tmp/ccMwpaqC.s:1031   .text.SPI_I2S_ReceiveData:0000000000000000 SPI_I2S_ReceiveData
     /tmp/ccMwpaqC.s:1051   .text.SPI_I2S_SendData:0000000000000000 $t
     /tmp/ccMwpaqC.s:1057   .text.SPI_I2S_SendData:0000000000000000 SPI_I2S_SendData
     /tmp/ccMwpaqC.s:1075   .text.SPI_CalculateCRC:0000000000000000 $t
     /tmp/ccMwpaqC.s:1081   .text.SPI_CalculateCRC:0000000000000000 SPI_CalculateCRC
     /tmp/ccMwpaqC.s:1117   .text.SPI_TransmitCRC:0000000000000000 $t
     /tmp/ccMwpaqC.s:1123   .text.SPI_TransmitCRC:0000000000000000 SPI_TransmitCRC
     /tmp/ccMwpaqC.s:1145   .text.SPI_GetCRC:0000000000000000 $t
     /tmp/ccMwpaqC.s:1151   .text.SPI_GetCRC:0000000000000000 SPI_GetCRC
     /tmp/ccMwpaqC.s:1191   .text.SPI_GetCRCPolynomial:0000000000000000 $t
     /tmp/ccMwpaqC.s:1197   .text.SPI_GetCRCPolynomial:0000000000000000 SPI_GetCRCPolynomial
     /tmp/ccMwpaqC.s:1217   .text.SPI_I2S_DMACmd:0000000000000000 $t
     /tmp/ccMwpaqC.s:1223   .text.SPI_I2S_DMACmd:0000000000000000 SPI_I2S_DMACmd
     /tmp/ccMwpaqC.s:1263   .text.SPI_I2S_ITConfig:0000000000000000 $t
     /tmp/ccMwpaqC.s:1269   .text.SPI_I2S_ITConfig:0000000000000000 SPI_I2S_ITConfig
     /tmp/ccMwpaqC.s:1328   .text.SPI_I2S_GetFlagStatus:0000000000000000 $t
     /tmp/ccMwpaqC.s:1334   .text.SPI_I2S_GetFlagStatus:0000000000000000 SPI_I2S_GetFlagStatus
     /tmp/ccMwpaqC.s:1368   .text.SPI_I2S_ClearFlag:0000000000000000 $t
     /tmp/ccMwpaqC.s:1374   .text.SPI_I2S_ClearFlag:0000000000000000 SPI_I2S_ClearFlag
     /tmp/ccMwpaqC.s:1398   .text.SPI_I2S_GetITStatus:0000000000000000 $t
     /tmp/ccMwpaqC.s:1404   .text.SPI_I2S_GetITStatus:0000000000000000 SPI_I2S_GetITStatus
     /tmp/ccMwpaqC.s:1471   .text.SPI_I2S_ClearITPendingBit:0000000000000000 $t
     /tmp/ccMwpaqC.s:1477   .text.SPI_I2S_ClearITPendingBit:0000000000000000 SPI_I2S_ClearITPendingBit

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
ARM GAS  /tmp/ccMwpaqC.s 			page 52


RCC_APB1PeriphResetCmd
