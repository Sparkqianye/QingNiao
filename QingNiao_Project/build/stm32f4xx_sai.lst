ARM GAS  /tmp/ccprSx8d.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_sai.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "./Library/stm32f4xx_sai.c"
  20              		.section	.text.SAI_DeInit,"ax",%progbits
  21              		.align	1
  22              		.global	SAI_DeInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	SAI_DeInit:
  28              	.LVL0:
  29              	.LFB123:
   1:./Library/stm32f4xx_sai.c **** /**
   2:./Library/stm32f4xx_sai.c ****   ******************************************************************************
   3:./Library/stm32f4xx_sai.c ****   * @file    stm32f4xx_sai.c
   4:./Library/stm32f4xx_sai.c ****   * @author  MCD Application Team
   5:./Library/stm32f4xx_sai.c ****   * @version V1.8.1
   6:./Library/stm32f4xx_sai.c ****   * @date    27-January-2022  
   7:./Library/stm32f4xx_sai.c ****   * @brief   This file provides firmware functions to manage the following 
   8:./Library/stm32f4xx_sai.c ****   *          functionalities of the Serial Audio Interface (SAI):
   9:./Library/stm32f4xx_sai.c ****   *           + Initialization and Configuration
  10:./Library/stm32f4xx_sai.c ****   *           + Data transfers functions
  11:./Library/stm32f4xx_sai.c ****   *           + DMA transfers management
  12:./Library/stm32f4xx_sai.c ****   *           + Interrupts and flags management 
  13:./Library/stm32f4xx_sai.c ****   *           
  14:./Library/stm32f4xx_sai.c ****   @verbatim
  15:./Library/stm32f4xx_sai.c ****  ===============================================================================
  16:./Library/stm32f4xx_sai.c ****                      ##### How to use this driver #####
  17:./Library/stm32f4xx_sai.c ****  ===============================================================================
  18:./Library/stm32f4xx_sai.c ****     [..] 
  19:./Library/stm32f4xx_sai.c ****     
  20:./Library/stm32f4xx_sai.c ****        (#) Enable peripheral clock using the following functions 
  21:./Library/stm32f4xx_sai.c ****            RCC_APB2PeriphClockCmd(RCC_APB2Periph_SAI1, ENABLE) for SAI1
  22:./Library/stm32f4xx_sai.c ****   
  23:./Library/stm32f4xx_sai.c ****        (#) For each SAI Block A/B enable SCK, SD, FS and MCLK GPIO clocks 
  24:./Library/stm32f4xx_sai.c ****            using RCC_AHB1PeriphClockCmd() function.
  25:./Library/stm32f4xx_sai.c ****   
  26:./Library/stm32f4xx_sai.c ****        (#) Peripherals alternate function: 
  27:./Library/stm32f4xx_sai.c ****            (++) Connect the pin to the desired peripherals' Alternate 
  28:./Library/stm32f4xx_sai.c ****                 Function (AF) using GPIO_PinAFConfig() function.
  29:./Library/stm32f4xx_sai.c ****            (++) Configure the desired pin in alternate function by:
ARM GAS  /tmp/ccprSx8d.s 			page 2


  30:./Library/stm32f4xx_sai.c ****                 GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  31:./Library/stm32f4xx_sai.c ****            (++) Select the type, pull-up/pull-down and output speed via 
  32:./Library/stm32f4xx_sai.c ****                 GPIO_PuPd, GPIO_OType and GPIO_Speed members
  33:./Library/stm32f4xx_sai.c ****            (++) Call GPIO_Init() function
  34:./Library/stm32f4xx_sai.c ****            -@@- If an external clock source is used then the I2S CKIN pin should be 
  35:./Library/stm32f4xx_sai.c ****                also configured in Alternate function Push-pull pull-up mode.
  36:./Library/stm32f4xx_sai.c ****                 
  37:./Library/stm32f4xx_sai.c ****       (#) The SAI clock can be generated from different clock source :
  38:./Library/stm32f4xx_sai.c ****           PLL I2S, PLL SAI or external clock source.
  39:./Library/stm32f4xx_sai.c ****           (++) The PLL I2S is configured using the following functions RCC_PLLI2SConfig(), 
  40:./Library/stm32f4xx_sai.c ****                RCC_PLLI2SCmd(ENABLE), RCC_GetFlagStatus(RCC_FLAG_PLLI2SRDY) and 
  41:./Library/stm32f4xx_sai.c ****                RCC_SAIPLLI2SClkDivConfig() or;
  42:./Library/stm32f4xx_sai.c ****               
  43:./Library/stm32f4xx_sai.c ****           (++) The PLL SAI is configured using the following functions RCC_PLLSAIConfig(), 
  44:./Library/stm32f4xx_sai.c ****                RCC_PLLSAICmd(ENABLE), RCC_GetFlagStatus(RCC_FLAG_PLLSAIRDY) and 
  45:./Library/stm32f4xx_sai.c ****                RCC_SAIPLLSAIClkDivConfig()or;          
  46:./Library/stm32f4xx_sai.c ****               
  47:./Library/stm32f4xx_sai.c ****           (++) External clock source is configured using the function 
  48:./Library/stm32f4xx_sai.c ****                RCC_I2SCLKConfig(RCC_I2S2CLKSource_Ext) and after setting correctly the 
  49:./Library/stm32f4xx_sai.c ****                define constant I2S_EXTERNAL_CLOCK_VAL in the stm32f4xx_conf.h file.      
  50:./Library/stm32f4xx_sai.c ****                 
  51:./Library/stm32f4xx_sai.c ****       (#) Each SAI Block A or B has its own clock generator to make these two blocks 
  52:./Library/stm32f4xx_sai.c ****           completely independent. The Clock generator is configured using RCC_SAIBlockACLKConfig() 
  53:./Library/stm32f4xx_sai.c ****           RCC_SAIBlockBCLKConfig() functions.
  54:./Library/stm32f4xx_sai.c ****                   
  55:./Library/stm32f4xx_sai.c ****       (#) Each SAI Block A or B can be configured separately : 
  56:./Library/stm32f4xx_sai.c ****           (++) Program the Master clock divider, Audio mode, Protocol, Data Length, Clock Strobing 
  57:./Library/stm32f4xx_sai.c ****                Synchronous mode, Output drive and FIFO Thresold using SAI_Init() function.   
  58:./Library/stm32f4xx_sai.c ****                In case of master mode, program the Master clock divider (MCKDIV) using 
  59:./Library/stm32f4xx_sai.c ****                the following formula :  
  60:./Library/stm32f4xx_sai.c ****                (+++) MCLK_x = SAI_CK_x / (MCKDIV * 2) with MCLK_x = 256 * FS
  61:./Library/stm32f4xx_sai.c ****                (+++) FS = SAI_CK_x / (MCKDIV * 2) * 256
  62:./Library/stm32f4xx_sai.c ****                (+++) MCKDIV = SAI_CK_x / FS * 512
  63:./Library/stm32f4xx_sai.c ****          (++) Program the Frame Length, Frame active Length, FS Definition, FS Polarity, 
  64:./Library/stm32f4xx_sai.c ****               FS Offset using SAI_FrameInit() function.    
  65:./Library/stm32f4xx_sai.c ****          (++) Program the Slot First Bit Offset, Slot Size, Slot Number, Slot Active 
  66:./Library/stm32f4xx_sai.c ****               using SAI_SlotInit() function. 
  67:./Library/stm32f4xx_sai.c ****                    
  68:./Library/stm32f4xx_sai.c ****       (#) Enable the NVIC and the corresponding interrupt using the function 
  69:./Library/stm32f4xx_sai.c ****           SAI_ITConfig() if you need to use interrupt mode. 
  70:./Library/stm32f4xx_sai.c ****   
  71:./Library/stm32f4xx_sai.c ****       (#) When using the DMA mode 
  72:./Library/stm32f4xx_sai.c ****           (++) Configure the DMA using DMA_Init() function
  73:./Library/stm32f4xx_sai.c ****           (++) Active the needed channel Request using SAI_DMACmd() function
  74:./Library/stm32f4xx_sai.c ****    
  75:./Library/stm32f4xx_sai.c ****       (#) Enable the SAI using the SAI_Cmd() function.
  76:./Library/stm32f4xx_sai.c ****    
  77:./Library/stm32f4xx_sai.c ****       (#) Enable the DMA using the DMA_Cmd() function when using DMA mode. 
  78:./Library/stm32f4xx_sai.c ****   
  79:./Library/stm32f4xx_sai.c ****       (#) The SAI has some specific functions which can be useful depending 
  80:./Library/stm32f4xx_sai.c ****           on the audio protocol selected.  
  81:./Library/stm32f4xx_sai.c ****           (++) Enable Mute mode when the audio block is a transmitter using SAI_MuteModeCmd()
  82:./Library/stm32f4xx_sai.c ****                function and configure the value transmitted during mute using SAI_MuteValueConfig()
  83:./Library/stm32f4xx_sai.c ****           (++) Detect the Mute mode when audio block is a receiver using SAI_MuteFrameCounterConfig
  84:./Library/stm32f4xx_sai.c ****           (++) Enable the MONO mode without any data preprocessing in memory when the number
  85:./Library/stm32f4xx_sai.c ****                of slot is equal to 2 using SAI_MonoModeConfig() function.
  86:./Library/stm32f4xx_sai.c ****           (++) Enable data companding algorithm (U law and A law) using SAI_CompandingModeConfig().
ARM GAS  /tmp/ccprSx8d.s 			page 3


  87:./Library/stm32f4xx_sai.c ****           (++) Choose the behavior of the SD line in output when an inactive slot is sent 
  88:./Library/stm32f4xx_sai.c ****                on the data line using SAI_TRIStateConfig() function.   
  89:./Library/stm32f4xx_sai.c ****   [..]               
  90:./Library/stm32f4xx_sai.c ****    (@)    In master TX mode: enabling the audio block immediately generates the bit clock 
  91:./Library/stm32f4xx_sai.c ****           for the external slaves even if there is no data in the FIFO, However FS signal 
  92:./Library/stm32f4xx_sai.c ****           generation is conditioned by the presence of data in the FIFO.
  93:./Library/stm32f4xx_sai.c ****                  
  94:./Library/stm32f4xx_sai.c ****    (@)    In master RX mode: enabling the audio block immediately generates the bit clock 
  95:./Library/stm32f4xx_sai.c ****           and FS signal for the external slaves. 
  96:./Library/stm32f4xx_sai.c ****                 
  97:./Library/stm32f4xx_sai.c ****    (@)    It is mandatory to respect the following conditions in order to avoid bad SAI behavior: 
  98:./Library/stm32f4xx_sai.c ****             (+@)  First bit Offset <= (SLOT size - Data size)
  99:./Library/stm32f4xx_sai.c ****             (+@)  Data size <= SLOT size
 100:./Library/stm32f4xx_sai.c ****             (+@)  Number of SLOT x SLOT size = Frame length
 101:./Library/stm32f4xx_sai.c ****             (+@)  The number of slots should be even when bit FSDEF in the SAI_xFRCR is set.    
 102:./Library/stm32f4xx_sai.c ****   
 103:./Library/stm32f4xx_sai.c ****     @endverbatim  
 104:./Library/stm32f4xx_sai.c **** 
 105:./Library/stm32f4xx_sai.c ****   ******************************************************************************
 106:./Library/stm32f4xx_sai.c ****   * @attention
 107:./Library/stm32f4xx_sai.c ****   *
 108:./Library/stm32f4xx_sai.c ****   * Copyright (c) 2016 STMicroelectronics.
 109:./Library/stm32f4xx_sai.c ****   * All rights reserved.
 110:./Library/stm32f4xx_sai.c ****   *
 111:./Library/stm32f4xx_sai.c ****   * This software is licensed under terms that can be found in the LICENSE file
 112:./Library/stm32f4xx_sai.c ****   * in the root directory of this software component.
 113:./Library/stm32f4xx_sai.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
 114:./Library/stm32f4xx_sai.c ****   *
 115:./Library/stm32f4xx_sai.c ****   ******************************************************************************
 116:./Library/stm32f4xx_sai.c ****   */
 117:./Library/stm32f4xx_sai.c **** 
 118:./Library/stm32f4xx_sai.c **** /* Includes ------------------------------------------------------------------*/
 119:./Library/stm32f4xx_sai.c **** #include "stm32f4xx_sai.h"
 120:./Library/stm32f4xx_sai.c **** #include "stm32f4xx_rcc.h"
 121:./Library/stm32f4xx_sai.c **** 
 122:./Library/stm32f4xx_sai.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 123:./Library/stm32f4xx_sai.c ****   * @{
 124:./Library/stm32f4xx_sai.c ****   */
 125:./Library/stm32f4xx_sai.c **** 
 126:./Library/stm32f4xx_sai.c **** /** @defgroup SAI 
 127:./Library/stm32f4xx_sai.c ****   * @brief SAI driver modules
 128:./Library/stm32f4xx_sai.c ****   * @{
 129:./Library/stm32f4xx_sai.c ****   */ 
 130:./Library/stm32f4xx_sai.c **** #if defined (STM32F40_41xxx) || defined (STM32F427_437xx) || defined (STM32F429_439xx) || \
 131:./Library/stm32f4xx_sai.c ****     defined (STM32F401xx) || defined (STM32F411xE) || defined (STM32F446xx) || defined (STM32F469_4
 132:./Library/stm32f4xx_sai.c ****     defined (STM32F413_423xx)
 133:./Library/stm32f4xx_sai.c **** 
 134:./Library/stm32f4xx_sai.c **** /* Private typedef -----------------------------------------------------------*/
 135:./Library/stm32f4xx_sai.c **** /* Private define ------------------------------------------------------------*/
 136:./Library/stm32f4xx_sai.c **** 
 137:./Library/stm32f4xx_sai.c **** /* *SAI registers Masks */
 138:./Library/stm32f4xx_sai.c **** #define CR1_CLEAR_MASK            ((uint32_t)0xFF07C010)
 139:./Library/stm32f4xx_sai.c **** #define FRCR_CLEAR_MASK           ((uint32_t)0xFFF88000)
 140:./Library/stm32f4xx_sai.c **** #define SLOTR_CLEAR_MASK          ((uint32_t)0x0000F020)
 141:./Library/stm32f4xx_sai.c **** 
 142:./Library/stm32f4xx_sai.c **** /* Private macro -------------------------------------------------------------*/
 143:./Library/stm32f4xx_sai.c **** /* Private variables ---------------------------------------------------------*/
ARM GAS  /tmp/ccprSx8d.s 			page 4


 144:./Library/stm32f4xx_sai.c **** /* Private function prototypes -----------------------------------------------*/
 145:./Library/stm32f4xx_sai.c **** /* Private functions ---------------------------------------------------------*/
 146:./Library/stm32f4xx_sai.c **** 
 147:./Library/stm32f4xx_sai.c **** /** @defgroup SAI_Private_Functions
 148:./Library/stm32f4xx_sai.c ****   * @{
 149:./Library/stm32f4xx_sai.c ****   */
 150:./Library/stm32f4xx_sai.c **** 
 151:./Library/stm32f4xx_sai.c **** /** @defgroup SAI_Group1 Initialization and Configuration functions
 152:./Library/stm32f4xx_sai.c ****  *  @brief   Initialization and Configuration functions 
 153:./Library/stm32f4xx_sai.c ****  *
 154:./Library/stm32f4xx_sai.c **** @verbatim   
 155:./Library/stm32f4xx_sai.c ****  ===============================================================================
 156:./Library/stm32f4xx_sai.c ****             ##### Initialization and Configuration functions #####
 157:./Library/stm32f4xx_sai.c ****  ===============================================================================  
 158:./Library/stm32f4xx_sai.c ****   [..]
 159:./Library/stm32f4xx_sai.c ****   This section provides a set of functions allowing to initialize the SAI Audio 
 160:./Library/stm32f4xx_sai.c ****   Block Mode, Audio Protocol, Data size, Synchronization between audio block, 
 161:./Library/stm32f4xx_sai.c ****   Master clock Divider, Fifo threshold, Frame configuration, slot configuration,
 162:./Library/stm32f4xx_sai.c ****   Tristate mode, Companding mode and Mute mode.  
 163:./Library/stm32f4xx_sai.c ****   [..] 
 164:./Library/stm32f4xx_sai.c ****   The SAI_Init(), SAI_FrameInit() and SAI_SlotInit() functions follows the SAI Block
 165:./Library/stm32f4xx_sai.c ****   configuration procedures for Master mode and Slave mode (details for these procedures 
 166:./Library/stm32f4xx_sai.c ****   are available in reference manual(RM0090).
 167:./Library/stm32f4xx_sai.c ****   
 168:./Library/stm32f4xx_sai.c **** @endverbatim
 169:./Library/stm32f4xx_sai.c ****   * @{
 170:./Library/stm32f4xx_sai.c ****   */
 171:./Library/stm32f4xx_sai.c **** 
 172:./Library/stm32f4xx_sai.c **** /**
 173:./Library/stm32f4xx_sai.c ****   * @brief  Deinitialize the SAIx peripheral registers to their default reset values.
 174:./Library/stm32f4xx_sai.c ****   * @param  SAIx: To select the SAIx peripheral, where x can be the different instances 
 175:./Library/stm32f4xx_sai.c ****   *                     
 176:./Library/stm32f4xx_sai.c ****   * @retval None
 177:./Library/stm32f4xx_sai.c ****   */
 178:./Library/stm32f4xx_sai.c **** void SAI_DeInit(SAI_TypeDef* SAIx)
 179:./Library/stm32f4xx_sai.c **** {
  30              		.loc 1 179 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 179 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
 180:./Library/stm32f4xx_sai.c ****   /* Check the parameters */
 181:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_PERIPH(SAIx));
  40              		.loc 1 181 3 is_stmt 1 view .LVU2
 182:./Library/stm32f4xx_sai.c ****   
 183:./Library/stm32f4xx_sai.c ****   if(SAIx == SAI1)
  41              		.loc 1 183 3 view .LVU3
  42              		.loc 1 183 5 is_stmt 0 view .LVU4
  43 0002 074B     		ldr	r3, .L5
  44 0004 9842     		cmp	r0, r3
  45 0006 00D0     		beq	.L4
  46              	.LVL1:
ARM GAS  /tmp/ccprSx8d.s 			page 5


  47              	.L1:
 184:./Library/stm32f4xx_sai.c ****   {
 185:./Library/stm32f4xx_sai.c ****     /* Enable SAI1 reset state */
 186:./Library/stm32f4xx_sai.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SAI1, ENABLE);
 187:./Library/stm32f4xx_sai.c ****     /* Release SAI1 from reset state */
 188:./Library/stm32f4xx_sai.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SAI1, DISABLE); 
 189:./Library/stm32f4xx_sai.c ****   }
 190:./Library/stm32f4xx_sai.c ****   else
 191:./Library/stm32f4xx_sai.c ****   {
 192:./Library/stm32f4xx_sai.c **** #if defined(STM32F446xx)
 193:./Library/stm32f4xx_sai.c ****   if(SAIx == SAI2)
 194:./Library/stm32f4xx_sai.c ****     {
 195:./Library/stm32f4xx_sai.c ****       /* Enable SAI2 reset state */
 196:./Library/stm32f4xx_sai.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_SAI2, ENABLE);
 197:./Library/stm32f4xx_sai.c ****       /* Release SAI2 from reset state */
 198:./Library/stm32f4xx_sai.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_SAI2, DISABLE);   
 199:./Library/stm32f4xx_sai.c ****     }
 200:./Library/stm32f4xx_sai.c **** #endif /* STM32F446xx */
 201:./Library/stm32f4xx_sai.c ****   }
 202:./Library/stm32f4xx_sai.c **** }
  48              		.loc 1 202 1 view .LVU5
  49 0008 08BD     		pop	{r3, pc}
  50              	.LVL2:
  51              	.L4:
 186:./Library/stm32f4xx_sai.c ****     /* Release SAI1 from reset state */
  52              		.loc 1 186 5 is_stmt 1 view .LVU6
  53 000a 0121     		movs	r1, #1
  54 000c 4FF48000 		mov	r0, #4194304
  55              	.LVL3:
 186:./Library/stm32f4xx_sai.c ****     /* Release SAI1 from reset state */
  56              		.loc 1 186 5 is_stmt 0 view .LVU7
  57 0010 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  58              	.LVL4:
 188:./Library/stm32f4xx_sai.c ****   }
  59              		.loc 1 188 5 is_stmt 1 view .LVU8
  60 0014 0021     		movs	r1, #0
  61 0016 4FF48000 		mov	r0, #4194304
  62 001a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  63              	.LVL5:
 201:./Library/stm32f4xx_sai.c **** }
  64              		.loc 1 201 3 view .LVU9
  65              		.loc 1 202 1 is_stmt 0 view .LVU10
  66 001e F3E7     		b	.L1
  67              	.L6:
  68              		.align	2
  69              	.L5:
  70 0020 00580140 		.word	1073829888
  71              		.cfi_endproc
  72              	.LFE123:
  74              		.section	.text.SAI_Init,"ax",%progbits
  75              		.align	1
  76              		.global	SAI_Init
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  81              	SAI_Init:
  82              	.LVL6:
ARM GAS  /tmp/ccprSx8d.s 			page 6


  83              	.LFB124:
 203:./Library/stm32f4xx_sai.c **** 
 204:./Library/stm32f4xx_sai.c **** /**
 205:./Library/stm32f4xx_sai.c ****   * @brief  Initializes the SAI Block x peripheral according to the specified 
 206:./Library/stm32f4xx_sai.c ****   *         parameters in the SAI_InitStruct.
 207:./Library/stm32f4xx_sai.c ****   *         
 208:./Library/stm32f4xx_sai.c ****   * @note   SAI clock is generated from a specific output of the PLLSAI or a specific  
 209:./Library/stm32f4xx_sai.c ****   *         output of the PLLI2S or from an alternate function bypassing the PLL I2S.
 210:./Library/stm32f4xx_sai.c ****   *        
 211:./Library/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral.
 212:./Library/stm32f4xx_sai.c ****   * @param  SAI_InitStruct: pointer to a SAI_InitTypeDef structure that
 213:./Library/stm32f4xx_sai.c ****   *         contains the configuration information for the specified SAI Block peripheral.         
 214:./Library/stm32f4xx_sai.c ****   * @retval None
 215:./Library/stm32f4xx_sai.c ****   */
 216:./Library/stm32f4xx_sai.c **** void SAI_Init(SAI_Block_TypeDef* SAI_Block_x, SAI_InitTypeDef* SAI_InitStruct)
 217:./Library/stm32f4xx_sai.c **** {
  84              		.loc 1 217 1 is_stmt 1 view -0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88              		@ link register save eliminated.
  89              		.loc 1 217 1 is_stmt 0 view .LVU12
  90 0000 10B4     		push	{r4}
  91              	.LCFI1:
  92              		.cfi_def_cfa_offset 4
  93              		.cfi_offset 4, -4
 218:./Library/stm32f4xx_sai.c ****   uint32_t tmpreg = 0;
  94              		.loc 1 218 3 is_stmt 1 view .LVU13
  95              	.LVL7:
 219:./Library/stm32f4xx_sai.c ****   
 220:./Library/stm32f4xx_sai.c ****   /* Check the parameters */
 221:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
  96              		.loc 1 221 3 view .LVU14
 222:./Library/stm32f4xx_sai.c ****   
 223:./Library/stm32f4xx_sai.c ****   /* Check the SAI Block parameters */
 224:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_MODE(SAI_InitStruct->SAI_AudioMode));
  97              		.loc 1 224 3 view .LVU15
 225:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PROTOCOL(SAI_InitStruct->SAI_Protocol));
  98              		.loc 1 225 3 view .LVU16
 226:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_DATASIZE(SAI_InitStruct->SAI_DataSize));
  99              		.loc 1 226 3 view .LVU17
 227:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_FIRST_BIT(SAI_InitStruct->SAI_FirstBit));
 100              		.loc 1 227 3 view .LVU18
 228:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_CLOCK_STROBING(SAI_InitStruct->SAI_ClockStrobing));
 101              		.loc 1 228 3 view .LVU19
 229:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_SYNCHRO(SAI_InitStruct->SAI_Synchro));
 102              		.loc 1 229 3 view .LVU20
 230:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_SYNCEXT(SAI_InitStruct->SAI_SynchroExt));
 103              		.loc 1 230 3 view .LVU21
 231:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_OUTPUT_DRIVE(SAI_InitStruct->SAI_OUTDRIV));
 104              		.loc 1 231 3 view .LVU22
 232:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_NODIVIDER(SAI_InitStruct->SAI_NoDivider));
 105              		.loc 1 232 3 view .LVU23
 233:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_MASTER_DIVIDER(SAI_InitStruct->SAI_MasterDivider));
 106              		.loc 1 233 3 view .LVU24
 234:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_FIFO_THRESHOLD(SAI_InitStruct->SAI_FIFOThreshold));
 107              		.loc 1 234 3 view .LVU25
ARM GAS  /tmp/ccprSx8d.s 			page 7


 235:./Library/stm32f4xx_sai.c **** 
 236:./Library/stm32f4xx_sai.c ****   /* SAI Block_x CR1 Configuration */
 237:./Library/stm32f4xx_sai.c ****   /* Get the SAI Block_x CR1 value */
 238:./Library/stm32f4xx_sai.c ****   tmpreg = SAI_Block_x->CR1;
 108              		.loc 1 238 3 view .LVU26
 109              		.loc 1 238 10 is_stmt 0 view .LVU27
 110 0002 0368     		ldr	r3, [r0]
 111              	.LVL8:
 239:./Library/stm32f4xx_sai.c ****   /* Clear MODE, PRTCFG, DS, LSBFIRST, CKSTR, SYNCEN, OUTDRIV, NODIV, and MCKDIV bits */
 240:./Library/stm32f4xx_sai.c ****   tmpreg &= CR1_CLEAR_MASK;
 112              		.loc 1 240 3 is_stmt 1 view .LVU28
 113              		.loc 1 240 10 is_stmt 0 view .LVU29
 114 0004 104A     		ldr	r2, .L9
 115 0006 1A40     		ands	r2, r2, r3
 116              	.LVL9:
 241:./Library/stm32f4xx_sai.c ****   /* Configure SAI_Block_x: Audio mode, Protocol, Data Size, first transmitted bit, Clock strobing 
 242:./Library/stm32f4xx_sai.c ****      edge, Synchronization mode, Output drive, Master Divider and FIFO level */  
 243:./Library/stm32f4xx_sai.c ****   /* Set MODE bits according to SAI_AudioMode value       */
 244:./Library/stm32f4xx_sai.c ****   /* Set PRTCFG bits according to SAI_Protocol value      */
 245:./Library/stm32f4xx_sai.c ****   /* Set DS bits according to SAI_DataSize value          */
 246:./Library/stm32f4xx_sai.c ****   /* Set LSBFIRST bit according to SAI_FirstBit value     */
 247:./Library/stm32f4xx_sai.c ****   /* Set CKSTR bit according to SAI_ClockStrobing value   */
 248:./Library/stm32f4xx_sai.c ****   /* Set SYNCEN bit according to SAI_Synchro value        */
 249:./Library/stm32f4xx_sai.c ****   /* Set OUTDRIV bit according to SAI_OUTDRIV value       */
 250:./Library/stm32f4xx_sai.c ****   /* Set NODIV bit according to SAI_NoDivider value       */
 251:./Library/stm32f4xx_sai.c ****   /* Set MCKDIV bits according to SAI_MasterDivider value */
 252:./Library/stm32f4xx_sai.c ****   tmpreg |= (uint32_t)(SAI_InitStruct->SAI_AudioMode     | SAI_InitStruct->SAI_Protocol  |
 117              		.loc 1 252 3 is_stmt 1 view .LVU30
 118              		.loc 1 252 38 is_stmt 0 view .LVU31
 119 0008 0B68     		ldr	r3, [r1]
 120              		.loc 1 252 58 view .LVU32
 121 000a 4C68     		ldr	r4, [r1, #4]
 122 000c 2343     		orrs	r3, r3, r4
 123              		.loc 1 252 90 view .LVU33
 124 000e 8C68     		ldr	r4, [r1, #8]
 125 0010 2343     		orrs	r3, r3, r4
 253:./Library/stm32f4xx_sai.c ****                        SAI_InitStruct->SAI_DataSize      | SAI_InitStruct->SAI_FirstBit  |  
 126              		.loc 1 253 58 view .LVU34
 127 0012 CC68     		ldr	r4, [r1, #12]
 128 0014 2343     		orrs	r3, r3, r4
 129              		.loc 1 253 90 view .LVU35
 130 0016 0C69     		ldr	r4, [r1, #16]
 131 0018 2343     		orrs	r3, r3, r4
 254:./Library/stm32f4xx_sai.c ****                        SAI_InitStruct->SAI_ClockStrobing | SAI_InitStruct->SAI_Synchro   |  
 132              		.loc 1 254 58 view .LVU36
 133 001a 4C69     		ldr	r4, [r1, #20]
 134 001c 2343     		orrs	r3, r3, r4
 135              		.loc 1 254 90 view .LVU37
 136 001e CC69     		ldr	r4, [r1, #28]
 137 0020 2343     		orrs	r3, r3, r4
 255:./Library/stm32f4xx_sai.c ****                        SAI_InitStruct->SAI_OUTDRIV       | SAI_InitStruct->SAI_NoDivider |
 138              		.loc 1 255 58 view .LVU38
 139 0022 0C6A     		ldr	r4, [r1, #32]
 140 0024 2343     		orrs	r3, r3, r4
 141              		.loc 1 255 90 view .LVU39
 142 0026 8C69     		ldr	r4, [r1, #24]
 143 0028 2343     		orrs	r3, r3, r4
ARM GAS  /tmp/ccprSx8d.s 			page 8


 252:./Library/stm32f4xx_sai.c ****                        SAI_InitStruct->SAI_DataSize      | SAI_InitStruct->SAI_FirstBit  |  
 144              		.loc 1 252 13 view .LVU40
 145 002a 4C6A     		ldr	r4, [r1, #36]
 146 002c 43EA0453 		orr	r3, r3, r4, lsl #20
 252:./Library/stm32f4xx_sai.c ****                        SAI_InitStruct->SAI_DataSize      | SAI_InitStruct->SAI_FirstBit  |  
 147              		.loc 1 252 10 view .LVU41
 148 0030 1343     		orrs	r3, r3, r2
 149              	.LVL10:
 256:./Library/stm32f4xx_sai.c ****                        SAI_InitStruct->SAI_SynchroExt    | (uint32_t)((SAI_InitStruct->SAI_MasterDi
 257:./Library/stm32f4xx_sai.c ****   /* Write to SAI_Block_x CR1 */
 258:./Library/stm32f4xx_sai.c ****   SAI_Block_x->CR1 = tmpreg;
 150              		.loc 1 258 3 is_stmt 1 view .LVU42
 151              		.loc 1 258 20 is_stmt 0 view .LVU43
 152 0032 0360     		str	r3, [r0]
 259:./Library/stm32f4xx_sai.c ****   
 260:./Library/stm32f4xx_sai.c ****   /* SAI Block_x CR2 Configuration */
 261:./Library/stm32f4xx_sai.c ****   /* Get the SAIBlock_x CR2 value */
 262:./Library/stm32f4xx_sai.c ****   tmpreg = SAI_Block_x->CR2;
 153              		.loc 1 262 3 is_stmt 1 view .LVU44
 154              		.loc 1 262 10 is_stmt 0 view .LVU45
 155 0034 4268     		ldr	r2, [r0, #4]
 156              	.LVL11:
 263:./Library/stm32f4xx_sai.c ****   /* Clear FTH bits */
 264:./Library/stm32f4xx_sai.c ****   tmpreg &= ~(SAI_xCR2_FTH);
 157              		.loc 1 264 3 is_stmt 1 view .LVU46
 158              		.loc 1 264 10 is_stmt 0 view .LVU47
 159 0036 22F00302 		bic	r2, r2, #3
 160              	.LVL12:
 265:./Library/stm32f4xx_sai.c ****   /* Configure the FIFO Level */
 266:./Library/stm32f4xx_sai.c ****   /* Set FTH bits according to SAI_FIFOThreshold value */ 
 267:./Library/stm32f4xx_sai.c ****   tmpreg |= (uint32_t)(SAI_InitStruct->SAI_FIFOThreshold);
 161              		.loc 1 267 3 is_stmt 1 view .LVU48
 162              		.loc 1 267 38 is_stmt 0 view .LVU49
 163 003a 8B6A     		ldr	r3, [r1, #40]
 164              		.loc 1 267 10 view .LVU50
 165 003c 1343     		orrs	r3, r3, r2
 166              	.LVL13:
 268:./Library/stm32f4xx_sai.c ****   /* Write to SAI_Block_x CR2 */
 269:./Library/stm32f4xx_sai.c ****   SAI_Block_x->CR2 = tmpreg;
 167              		.loc 1 269 3 is_stmt 1 view .LVU51
 168              		.loc 1 269 20 is_stmt 0 view .LVU52
 169 003e 4360     		str	r3, [r0, #4]
 270:./Library/stm32f4xx_sai.c **** }
 170              		.loc 1 270 1 view .LVU53
 171 0040 5DF8044B 		ldr	r4, [sp], #4
 172              	.LCFI2:
 173              		.cfi_restore 4
 174              		.cfi_def_cfa_offset 0
 175 0044 7047     		bx	lr
 176              	.L10:
 177 0046 00BF     		.align	2
 178              	.L9:
 179 0048 10C007FF 		.word	-16269296
 180              		.cfi_endproc
 181              	.LFE124:
 183              		.section	.text.SAI_FrameInit,"ax",%progbits
 184              		.align	1
ARM GAS  /tmp/ccprSx8d.s 			page 9


 185              		.global	SAI_FrameInit
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 190              	SAI_FrameInit:
 191              	.LVL14:
 192              	.LFB125:
 271:./Library/stm32f4xx_sai.c **** 
 272:./Library/stm32f4xx_sai.c **** /**
 273:./Library/stm32f4xx_sai.c ****   * @brief  Initializes the SAI Block Audio frame according to the specified 
 274:./Library/stm32f4xx_sai.c ****   *         parameters in the SAI_FrameInitStruct.
 275:./Library/stm32f4xx_sai.c ****   *         
 276:./Library/stm32f4xx_sai.c ****   * @note   this function has no meaning if the AC'97 or SPDIF audio protocol 
 277:./Library/stm32f4xx_sai.c ****   *         are selected. 
 278:./Library/stm32f4xx_sai.c ****   *               
 279:./Library/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral.
 280:./Library/stm32f4xx_sai.c ****   * @param  SAI_FrameInitStruct: pointer to an SAI_FrameInitTypeDef structure that
 281:./Library/stm32f4xx_sai.c ****   *         contains the configuration of audio frame for a specified SAI Block                    
 282:./Library/stm32f4xx_sai.c ****   * @retval None
 283:./Library/stm32f4xx_sai.c ****   */
 284:./Library/stm32f4xx_sai.c **** void SAI_FrameInit(SAI_Block_TypeDef* SAI_Block_x, SAI_FrameInitTypeDef* SAI_FrameInitStruct)
 285:./Library/stm32f4xx_sai.c **** {
 193              		.loc 1 285 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              		@ link register save eliminated.
 198              		.loc 1 285 1 is_stmt 0 view .LVU55
 199 0000 10B4     		push	{r4}
 200              	.LCFI3:
 201              		.cfi_def_cfa_offset 4
 202              		.cfi_offset 4, -4
 286:./Library/stm32f4xx_sai.c ****   uint32_t tmpreg = 0;
 203              		.loc 1 286 3 is_stmt 1 view .LVU56
 204              	.LVL15:
 287:./Library/stm32f4xx_sai.c ****   
 288:./Library/stm32f4xx_sai.c ****   /* Check the parameters */
 289:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 205              		.loc 1 289 3 view .LVU57
 290:./Library/stm32f4xx_sai.c ****   
 291:./Library/stm32f4xx_sai.c ****   /* Check the SAI Block frame parameters */
 292:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_FRAME_LENGTH(SAI_FrameInitStruct->SAI_FrameLength));
 206              		.loc 1 292 3 view .LVU58
 293:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_ACTIVE_FRAME(SAI_FrameInitStruct->SAI_ActiveFrameLength));
 207              		.loc 1 293 3 view .LVU59
 294:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_FS_DEFINITION(SAI_FrameInitStruct->SAI_FSDefinition));
 208              		.loc 1 294 3 view .LVU60
 295:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_FS_POLARITY(SAI_FrameInitStruct->SAI_FSPolarity));
 209              		.loc 1 295 3 view .LVU61
 296:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_FS_OFFSET(SAI_FrameInitStruct->SAI_FSOffset));
 210              		.loc 1 296 3 view .LVU62
 297:./Library/stm32f4xx_sai.c **** 
 298:./Library/stm32f4xx_sai.c ****   /* SAI Block_x FRCR Configuration */
 299:./Library/stm32f4xx_sai.c ****   /* Get the SAI Block_x FRCR value */
 300:./Library/stm32f4xx_sai.c ****   tmpreg = SAI_Block_x->FRCR;
 211              		.loc 1 300 3 view .LVU63
 212              		.loc 1 300 10 is_stmt 0 view .LVU64
ARM GAS  /tmp/ccprSx8d.s 			page 10


 213 0002 8368     		ldr	r3, [r0, #8]
 214              	.LVL16:
 301:./Library/stm32f4xx_sai.c ****   /* Clear FRL, FSALL, FSDEF, FSPOL, FSOFF bits */
 302:./Library/stm32f4xx_sai.c ****   tmpreg &= FRCR_CLEAR_MASK;
 215              		.loc 1 302 3 is_stmt 1 view .LVU65
 216              		.loc 1 302 10 is_stmt 0 view .LVU66
 217 0004 094A     		ldr	r2, .L13
 218 0006 1A40     		ands	r2, r2, r3
 219              	.LVL17:
 303:./Library/stm32f4xx_sai.c ****   /* Configure SAI_Block_x Frame: Frame Length, Active Frame Length, Frame Synchronization
 304:./Library/stm32f4xx_sai.c ****      Definition, Frame Synchronization Polarity and Frame Synchronization Polarity */
 305:./Library/stm32f4xx_sai.c ****   /* Set FRL bits according to SAI_FrameLength value         */
 306:./Library/stm32f4xx_sai.c ****   /* Set FSALL bits according to SAI_ActiveFrameLength value */
 307:./Library/stm32f4xx_sai.c ****   /* Set FSDEF bit according to SAI_FSDefinition value       */
 308:./Library/stm32f4xx_sai.c ****   /* Set FSPOL bit according to SAI_FSPolarity value         */
 309:./Library/stm32f4xx_sai.c ****   /* Set FSOFF bit according to SAI_FSOffset value           */
 310:./Library/stm32f4xx_sai.c ****   tmpreg |= (uint32_t)((uint32_t)(SAI_FrameInitStruct->SAI_FrameLength - 1)  | 
 220              		.loc 1 310 3 is_stmt 1 view .LVU67
 221              		.loc 1 310 54 is_stmt 0 view .LVU68
 222 0008 0B68     		ldr	r3, [r1]
 223              		.loc 1 310 24 view .LVU69
 224 000a 013B     		subs	r3, r3, #1
 225              		.loc 1 310 78 view .LVU70
 226 000c 0C69     		ldr	r4, [r1, #16]
 227 000e 2343     		orrs	r3, r3, r4
 311:./Library/stm32f4xx_sai.c ****                        SAI_FrameInitStruct->SAI_FSOffset     | 
 228              		.loc 1 311 62 view .LVU71
 229 0010 8C68     		ldr	r4, [r1, #8]
 230 0012 2343     		orrs	r3, r3, r4
 312:./Library/stm32f4xx_sai.c ****                        SAI_FrameInitStruct->SAI_FSDefinition |    
 231              		.loc 1 312 62 view .LVU72
 232 0014 CC68     		ldr	r4, [r1, #12]
 233 0016 2343     		orrs	r3, r3, r4
 313:./Library/stm32f4xx_sai.c ****                        SAI_FrameInitStruct->SAI_FSPolarity   |                        
 314:./Library/stm32f4xx_sai.c ****                        (uint32_t)((SAI_FrameInitStruct->SAI_ActiveFrameLength - 1) << 8));
 234              		.loc 1 314 55 view .LVU73
 235 0018 4968     		ldr	r1, [r1, #4]
 236              	.LVL18:
 237              		.loc 1 314 79 view .LVU74
 238 001a 0139     		subs	r1, r1, #1
 310:./Library/stm32f4xx_sai.c ****                        SAI_FrameInitStruct->SAI_FSOffset     | 
 239              		.loc 1 310 13 view .LVU75
 240 001c 43EA0123 		orr	r3, r3, r1, lsl #8
 310:./Library/stm32f4xx_sai.c ****                        SAI_FrameInitStruct->SAI_FSOffset     | 
 241              		.loc 1 310 10 view .LVU76
 242 0020 1343     		orrs	r3, r3, r2
 243              	.LVL19:
 315:./Library/stm32f4xx_sai.c ****                        
 316:./Library/stm32f4xx_sai.c ****   /* Write to SAI_Block_x FRCR */
 317:./Library/stm32f4xx_sai.c ****   SAI_Block_x->FRCR = tmpreg;
 244              		.loc 1 317 3 is_stmt 1 view .LVU77
 245              		.loc 1 317 21 is_stmt 0 view .LVU78
 246 0022 8360     		str	r3, [r0, #8]
 318:./Library/stm32f4xx_sai.c **** }
 247              		.loc 1 318 1 view .LVU79
 248 0024 5DF8044B 		ldr	r4, [sp], #4
 249              	.LCFI4:
ARM GAS  /tmp/ccprSx8d.s 			page 11


 250              		.cfi_restore 4
 251              		.cfi_def_cfa_offset 0
 252 0028 7047     		bx	lr
 253              	.L14:
 254 002a 00BF     		.align	2
 255              	.L13:
 256 002c 0080F8FF 		.word	-491520
 257              		.cfi_endproc
 258              	.LFE125:
 260              		.section	.text.SAI_SlotInit,"ax",%progbits
 261              		.align	1
 262              		.global	SAI_SlotInit
 263              		.syntax unified
 264              		.thumb
 265              		.thumb_func
 267              	SAI_SlotInit:
 268              	.LVL20:
 269              	.LFB126:
 319:./Library/stm32f4xx_sai.c **** 
 320:./Library/stm32f4xx_sai.c **** /**
 321:./Library/stm32f4xx_sai.c ****   * @brief  Initializes the SAI Block audio Slot according to the specified 
 322:./Library/stm32f4xx_sai.c ****   *         parameters in the SAI_SlotInitStruct.
 323:./Library/stm32f4xx_sai.c ****   *         
 324:./Library/stm32f4xx_sai.c ****   * @note   this function has no meaning if the AC'97 or SPDIF audio protocol 
 325:./Library/stm32f4xx_sai.c ****   *         are selected.
 326:./Library/stm32f4xx_sai.c ****   *               
 327:./Library/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral.
 328:./Library/stm32f4xx_sai.c ****   * @param  SAI_SlotInitStruct: pointer to an SAI_SlotInitTypeDef structure that
 329:./Library/stm32f4xx_sai.c ****   *         contains the configuration of audio slot for a specified SAI Block                     
 330:./Library/stm32f4xx_sai.c ****   * @retval None
 331:./Library/stm32f4xx_sai.c ****   */
 332:./Library/stm32f4xx_sai.c **** void SAI_SlotInit(SAI_Block_TypeDef* SAI_Block_x, SAI_SlotInitTypeDef* SAI_SlotInitStruct)
 333:./Library/stm32f4xx_sai.c **** {
 270              		.loc 1 333 1 is_stmt 1 view -0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274              		@ link register save eliminated.
 275              		.loc 1 333 1 is_stmt 0 view .LVU81
 276 0000 10B4     		push	{r4}
 277              	.LCFI5:
 278              		.cfi_def_cfa_offset 4
 279              		.cfi_offset 4, -4
 334:./Library/stm32f4xx_sai.c ****   uint32_t tmpreg = 0;
 280              		.loc 1 334 3 is_stmt 1 view .LVU82
 281              	.LVL21:
 335:./Library/stm32f4xx_sai.c ****   
 336:./Library/stm32f4xx_sai.c ****   /* Check the parameters */
 337:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 282              		.loc 1 337 3 view .LVU83
 338:./Library/stm32f4xx_sai.c ****   
 339:./Library/stm32f4xx_sai.c ****   /* Check the SAI Block Slot parameters */
 340:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_FIRSTBIT_OFFSET(SAI_SlotInitStruct->SAI_FirstBitOffset));
 283              		.loc 1 340 3 view .LVU84
 341:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_SLOT_SIZE(SAI_SlotInitStruct->SAI_SlotSize));
 284              		.loc 1 341 3 view .LVU85
 342:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_SLOT_NUMBER(SAI_SlotInitStruct->SAI_SlotNumber));
ARM GAS  /tmp/ccprSx8d.s 			page 12


 285              		.loc 1 342 3 view .LVU86
 343:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_SLOT_ACTIVE(SAI_SlotInitStruct->SAI_SlotActive));
 286              		.loc 1 343 3 view .LVU87
 344:./Library/stm32f4xx_sai.c **** 
 345:./Library/stm32f4xx_sai.c ****   /* SAI Block_x SLOTR Configuration */
 346:./Library/stm32f4xx_sai.c ****   /* Get the SAI Block_x SLOTR value */
 347:./Library/stm32f4xx_sai.c ****   tmpreg = SAI_Block_x->SLOTR;
 287              		.loc 1 347 3 view .LVU88
 288              		.loc 1 347 10 is_stmt 0 view .LVU89
 289 0002 C268     		ldr	r2, [r0, #12]
 290              	.LVL22:
 348:./Library/stm32f4xx_sai.c ****   /* Clear FBOFF, SLOTSZ, NBSLOT, SLOTEN bits */
 349:./Library/stm32f4xx_sai.c ****   tmpreg &= SLOTR_CLEAR_MASK;
 291              		.loc 1 349 3 is_stmt 1 view .LVU90
 292              		.loc 1 349 10 is_stmt 0 view .LVU91
 293 0004 22F47D62 		bic	r2, r2, #4048
 294              	.LVL23:
 295              		.loc 1 349 10 view .LVU92
 296 0008 22F00F02 		bic	r2, r2, #15
 297 000c 1204     		lsls	r2, r2, #16
 298 000e 120C     		lsrs	r2, r2, #16
 299              	.LVL24:
 350:./Library/stm32f4xx_sai.c ****   /* Configure SAI_Block_x Slot: First bit offset, Slot size, Number of Slot in  
 351:./Library/stm32f4xx_sai.c ****      audio frame and slots activated in audio frame */
 352:./Library/stm32f4xx_sai.c ****   /* Set FBOFF bits according to SAI_FirstBitOffset value  */
 353:./Library/stm32f4xx_sai.c ****   /* Set SLOTSZ bits according to SAI_SlotSize value       */
 354:./Library/stm32f4xx_sai.c ****   /* Set NBSLOT bits according to SAI_SlotNumber value     */
 355:./Library/stm32f4xx_sai.c ****   /* Set SLOTEN bits according to SAI_SlotActive value     */
 356:./Library/stm32f4xx_sai.c ****   tmpreg |= (uint32_t)(SAI_SlotInitStruct->SAI_FirstBitOffset | 
 300              		.loc 1 356 3 is_stmt 1 view .LVU93
 301              		.loc 1 356 42 is_stmt 0 view .LVU94
 302 0010 0B68     		ldr	r3, [r1]
 303              		.loc 1 356 63 view .LVU95
 304 0012 4C68     		ldr	r4, [r1, #4]
 305 0014 2343     		orrs	r3, r3, r4
 357:./Library/stm32f4xx_sai.c ****                        SAI_SlotInitStruct->SAI_SlotSize       | 
 306              		.loc 1 357 63 view .LVU96
 307 0016 CC68     		ldr	r4, [r1, #12]
 308 0018 2343     		orrs	r3, r3, r4
 358:./Library/stm32f4xx_sai.c ****                        SAI_SlotInitStruct->SAI_SlotActive     |    
 359:./Library/stm32f4xx_sai.c ****                        (uint32_t)((SAI_SlotInitStruct->SAI_SlotNumber - 1) <<  8));
 309              		.loc 1 359 54 view .LVU97
 310 001a 8968     		ldr	r1, [r1, #8]
 311              	.LVL25:
 312              		.loc 1 359 71 view .LVU98
 313 001c 0139     		subs	r1, r1, #1
 356:./Library/stm32f4xx_sai.c ****                        SAI_SlotInitStruct->SAI_SlotSize       | 
 314              		.loc 1 356 13 view .LVU99
 315 001e 43EA0123 		orr	r3, r3, r1, lsl #8
 356:./Library/stm32f4xx_sai.c ****                        SAI_SlotInitStruct->SAI_SlotSize       | 
 316              		.loc 1 356 10 view .LVU100
 317 0022 1343     		orrs	r3, r3, r2
 318              	.LVL26:
 360:./Library/stm32f4xx_sai.c ****                        
 361:./Library/stm32f4xx_sai.c ****   /* Write to SAI_Block_x SLOTR */
 362:./Library/stm32f4xx_sai.c ****   SAI_Block_x->SLOTR = tmpreg;
 319              		.loc 1 362 3 is_stmt 1 view .LVU101
ARM GAS  /tmp/ccprSx8d.s 			page 13


 320              		.loc 1 362 22 is_stmt 0 view .LVU102
 321 0024 C360     		str	r3, [r0, #12]
 363:./Library/stm32f4xx_sai.c **** }
 322              		.loc 1 363 1 view .LVU103
 323 0026 5DF8044B 		ldr	r4, [sp], #4
 324              	.LCFI6:
 325              		.cfi_restore 4
 326              		.cfi_def_cfa_offset 0
 327 002a 7047     		bx	lr
 328              		.cfi_endproc
 329              	.LFE126:
 331              		.section	.text.SAI_StructInit,"ax",%progbits
 332              		.align	1
 333              		.global	SAI_StructInit
 334              		.syntax unified
 335              		.thumb
 336              		.thumb_func
 338              	SAI_StructInit:
 339              	.LVL27:
 340              	.LFB127:
 364:./Library/stm32f4xx_sai.c **** 
 365:./Library/stm32f4xx_sai.c **** /**
 366:./Library/stm32f4xx_sai.c ****   * @brief  Fills each SAI_InitStruct member with its default value.
 367:./Library/stm32f4xx_sai.c ****   * @param  SAI_InitStruct: pointer to a SAI_InitTypeDef structure which will 
 368:./Library/stm32f4xx_sai.c ****   *         be initialized.  
 369:./Library/stm32f4xx_sai.c ****   * @retval None
 370:./Library/stm32f4xx_sai.c ****   */
 371:./Library/stm32f4xx_sai.c **** void SAI_StructInit(SAI_InitTypeDef* SAI_InitStruct)
 372:./Library/stm32f4xx_sai.c **** {
 341              		.loc 1 372 1 is_stmt 1 view -0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 373:./Library/stm32f4xx_sai.c ****   /* Reset SAI init structure parameters values */
 374:./Library/stm32f4xx_sai.c ****   /* Initialize the SAI_AudioMode member */
 375:./Library/stm32f4xx_sai.c ****   SAI_InitStruct->SAI_AudioMode = SAI_Mode_MasterTx;
 346              		.loc 1 375 3 view .LVU105
 347              		.loc 1 375 33 is_stmt 0 view .LVU106
 348 0000 0023     		movs	r3, #0
 349 0002 0360     		str	r3, [r0]
 376:./Library/stm32f4xx_sai.c ****   /* Initialize the SAI_Protocol member */
 377:./Library/stm32f4xx_sai.c ****   SAI_InitStruct->SAI_Protocol = SAI_Free_Protocol;
 350              		.loc 1 377 3 is_stmt 1 view .LVU107
 351              		.loc 1 377 32 is_stmt 0 view .LVU108
 352 0004 4360     		str	r3, [r0, #4]
 378:./Library/stm32f4xx_sai.c ****   /* Initialize the SAI_DataSize member */
 379:./Library/stm32f4xx_sai.c ****   SAI_InitStruct->SAI_DataSize = SAI_DataSize_8b;
 353              		.loc 1 379 3 is_stmt 1 view .LVU109
 354              		.loc 1 379 32 is_stmt 0 view .LVU110
 355 0006 4022     		movs	r2, #64
 356 0008 8260     		str	r2, [r0, #8]
 380:./Library/stm32f4xx_sai.c ****   /* Initialize the SAI_FirstBit member */
 381:./Library/stm32f4xx_sai.c ****   SAI_InitStruct->SAI_FirstBit = SAI_FirstBit_MSB;
 357              		.loc 1 381 3 is_stmt 1 view .LVU111
 358              		.loc 1 381 32 is_stmt 0 view .LVU112
 359 000a C360     		str	r3, [r0, #12]
ARM GAS  /tmp/ccprSx8d.s 			page 14


 382:./Library/stm32f4xx_sai.c ****   /* Initialize the SAI_ClockStrobing member */
 383:./Library/stm32f4xx_sai.c ****   SAI_InitStruct->SAI_ClockStrobing = SAI_ClockStrobing_FallingEdge;
 360              		.loc 1 383 3 is_stmt 1 view .LVU113
 361              		.loc 1 383 37 is_stmt 0 view .LVU114
 362 000c 0361     		str	r3, [r0, #16]
 384:./Library/stm32f4xx_sai.c ****   /* Initialize the SAI_Synchro member */
 385:./Library/stm32f4xx_sai.c ****   SAI_InitStruct->SAI_Synchro = SAI_Asynchronous;
 363              		.loc 1 385 3 is_stmt 1 view .LVU115
 364              		.loc 1 385 31 is_stmt 0 view .LVU116
 365 000e 4361     		str	r3, [r0, #20]
 386:./Library/stm32f4xx_sai.c ****     /* Initialize the SAI_SynchroExt member */
 387:./Library/stm32f4xx_sai.c ****   SAI_InitStruct->SAI_SynchroExt = SAI_SyncExt_Disable;
 366              		.loc 1 387 3 is_stmt 1 view .LVU117
 367              		.loc 1 387 34 is_stmt 0 view .LVU118
 368 0010 8361     		str	r3, [r0, #24]
 388:./Library/stm32f4xx_sai.c ****   /* Initialize the SAI_OUTDRIV member */
 389:./Library/stm32f4xx_sai.c ****   SAI_InitStruct->SAI_OUTDRIV = SAI_OutputDrive_Disabled;
 369              		.loc 1 389 3 is_stmt 1 view .LVU119
 370              		.loc 1 389 31 is_stmt 0 view .LVU120
 371 0012 C361     		str	r3, [r0, #28]
 390:./Library/stm32f4xx_sai.c ****   /* Initialize the SAI_NoDivider member */
 391:./Library/stm32f4xx_sai.c ****   SAI_InitStruct->SAI_NoDivider = SAI_MasterDivider_Enabled;
 372              		.loc 1 391 3 is_stmt 1 view .LVU121
 373              		.loc 1 391 33 is_stmt 0 view .LVU122
 374 0014 0362     		str	r3, [r0, #32]
 392:./Library/stm32f4xx_sai.c ****   /* Initialize the SAI_MasterDivider member */
 393:./Library/stm32f4xx_sai.c ****   SAI_InitStruct->SAI_MasterDivider = 0;
 375              		.loc 1 393 3 is_stmt 1 view .LVU123
 376              		.loc 1 393 37 is_stmt 0 view .LVU124
 377 0016 4362     		str	r3, [r0, #36]
 394:./Library/stm32f4xx_sai.c ****   /* Initialize the SAI_FIFOThreshold member */
 395:./Library/stm32f4xx_sai.c ****   SAI_InitStruct->SAI_FIFOThreshold = SAI_Threshold_FIFOEmpty;
 378              		.loc 1 395 3 is_stmt 1 view .LVU125
 379              		.loc 1 395 37 is_stmt 0 view .LVU126
 380 0018 8362     		str	r3, [r0, #40]
 396:./Library/stm32f4xx_sai.c **** }
 381              		.loc 1 396 1 view .LVU127
 382 001a 7047     		bx	lr
 383              		.cfi_endproc
 384              	.LFE127:
 386              		.section	.text.SAI_FrameStructInit,"ax",%progbits
 387              		.align	1
 388              		.global	SAI_FrameStructInit
 389              		.syntax unified
 390              		.thumb
 391              		.thumb_func
 393              	SAI_FrameStructInit:
 394              	.LVL28:
 395              	.LFB128:
 397:./Library/stm32f4xx_sai.c **** 
 398:./Library/stm32f4xx_sai.c **** /**
 399:./Library/stm32f4xx_sai.c ****   * @brief  Fills each SAI_FrameInitStruct member with its default value.
 400:./Library/stm32f4xx_sai.c ****   * @param  SAI_FrameInitStruct: pointer to a SAI_FrameInitTypeDef structure 
 401:./Library/stm32f4xx_sai.c ****   *         which will be initialized.                     
 402:./Library/stm32f4xx_sai.c ****   * @retval None
 403:./Library/stm32f4xx_sai.c ****   */
 404:./Library/stm32f4xx_sai.c **** void SAI_FrameStructInit(SAI_FrameInitTypeDef* SAI_FrameInitStruct)
ARM GAS  /tmp/ccprSx8d.s 			page 15


 405:./Library/stm32f4xx_sai.c **** {
 396              		.loc 1 405 1 is_stmt 1 view -0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400              		@ link register save eliminated.
 406:./Library/stm32f4xx_sai.c ****   /* Reset SAI Frame init structure parameters values */
 407:./Library/stm32f4xx_sai.c ****   /* Initialize the SAI_FrameLength member */
 408:./Library/stm32f4xx_sai.c ****   SAI_FrameInitStruct->SAI_FrameLength = 8;
 401              		.loc 1 408 3 view .LVU129
 402              		.loc 1 408 40 is_stmt 0 view .LVU130
 403 0000 0823     		movs	r3, #8
 404 0002 0360     		str	r3, [r0]
 409:./Library/stm32f4xx_sai.c ****   /* Initialize the SAI_ActiveFrameLength member */
 410:./Library/stm32f4xx_sai.c ****   SAI_FrameInitStruct->SAI_ActiveFrameLength = 1;
 405              		.loc 1 410 3 is_stmt 1 view .LVU131
 406              		.loc 1 410 46 is_stmt 0 view .LVU132
 407 0004 0123     		movs	r3, #1
 408 0006 4360     		str	r3, [r0, #4]
 411:./Library/stm32f4xx_sai.c ****   /* Initialize the SAI_FSDefinition member */
 412:./Library/stm32f4xx_sai.c ****   SAI_FrameInitStruct->SAI_FSDefinition = SAI_FS_StartFrame;
 409              		.loc 1 412 3 is_stmt 1 view .LVU133
 410              		.loc 1 412 41 is_stmt 0 view .LVU134
 411 0008 0023     		movs	r3, #0
 412 000a 8360     		str	r3, [r0, #8]
 413:./Library/stm32f4xx_sai.c ****   /* Initialize the SAI_FSPolarity member */
 414:./Library/stm32f4xx_sai.c ****   SAI_FrameInitStruct->SAI_FSPolarity = SAI_FS_ActiveLow;
 413              		.loc 1 414 3 is_stmt 1 view .LVU135
 414              		.loc 1 414 39 is_stmt 0 view .LVU136
 415 000c C360     		str	r3, [r0, #12]
 415:./Library/stm32f4xx_sai.c ****   /* Initialize the SAI_FSOffset member */
 416:./Library/stm32f4xx_sai.c ****   SAI_FrameInitStruct->SAI_FSOffset = SAI_FS_FirstBit;
 416              		.loc 1 416 3 is_stmt 1 view .LVU137
 417              		.loc 1 416 37 is_stmt 0 view .LVU138
 418 000e 0361     		str	r3, [r0, #16]
 417:./Library/stm32f4xx_sai.c **** }
 419              		.loc 1 417 1 view .LVU139
 420 0010 7047     		bx	lr
 421              		.cfi_endproc
 422              	.LFE128:
 424              		.section	.text.SAI_SlotStructInit,"ax",%progbits
 425              		.align	1
 426              		.global	SAI_SlotStructInit
 427              		.syntax unified
 428              		.thumb
 429              		.thumb_func
 431              	SAI_SlotStructInit:
 432              	.LVL29:
 433              	.LFB129:
 418:./Library/stm32f4xx_sai.c **** 
 419:./Library/stm32f4xx_sai.c **** /**
 420:./Library/stm32f4xx_sai.c ****   * @brief  Fills each SAI_SlotInitStruct member with its default value.
 421:./Library/stm32f4xx_sai.c ****   * @param  SAI_SlotInitStruct: pointer to a SAI_SlotInitTypeDef structure 
 422:./Library/stm32f4xx_sai.c ****   *         which will be initialized.                     
 423:./Library/stm32f4xx_sai.c ****   * @retval None
 424:./Library/stm32f4xx_sai.c ****   */
 425:./Library/stm32f4xx_sai.c **** void SAI_SlotStructInit(SAI_SlotInitTypeDef* SAI_SlotInitStruct)
ARM GAS  /tmp/ccprSx8d.s 			page 16


 426:./Library/stm32f4xx_sai.c **** {
 434              		.loc 1 426 1 is_stmt 1 view -0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438              		@ link register save eliminated.
 427:./Library/stm32f4xx_sai.c ****   /* Reset SAI Slot init structure parameters values */
 428:./Library/stm32f4xx_sai.c ****   /* Initialize the SAI_FirstBitOffset member */
 429:./Library/stm32f4xx_sai.c ****   SAI_SlotInitStruct->SAI_FirstBitOffset = 0;
 439              		.loc 1 429 3 view .LVU141
 440              		.loc 1 429 42 is_stmt 0 view .LVU142
 441 0000 0023     		movs	r3, #0
 442 0002 0360     		str	r3, [r0]
 430:./Library/stm32f4xx_sai.c ****   /* Initialize the SAI_SlotSize member */
 431:./Library/stm32f4xx_sai.c ****   SAI_SlotInitStruct->SAI_SlotSize = SAI_SlotSize_DataSize;
 443              		.loc 1 431 3 is_stmt 1 view .LVU143
 444              		.loc 1 431 36 is_stmt 0 view .LVU144
 445 0004 4360     		str	r3, [r0, #4]
 432:./Library/stm32f4xx_sai.c ****   /* Initialize the SAI_SlotNumber member */
 433:./Library/stm32f4xx_sai.c ****   SAI_SlotInitStruct->SAI_SlotNumber = 1;
 446              		.loc 1 433 3 is_stmt 1 view .LVU145
 447              		.loc 1 433 38 is_stmt 0 view .LVU146
 448 0006 0122     		movs	r2, #1
 449 0008 8260     		str	r2, [r0, #8]
 434:./Library/stm32f4xx_sai.c ****   /* Initialize the SAI_SlotActive member */
 435:./Library/stm32f4xx_sai.c ****   SAI_SlotInitStruct->SAI_SlotActive = SAI_Slot_NotActive;
 450              		.loc 1 435 3 is_stmt 1 view .LVU147
 451              		.loc 1 435 38 is_stmt 0 view .LVU148
 452 000a C360     		str	r3, [r0, #12]
 436:./Library/stm32f4xx_sai.c **** 
 437:./Library/stm32f4xx_sai.c **** }
 453              		.loc 1 437 1 view .LVU149
 454 000c 7047     		bx	lr
 455              		.cfi_endproc
 456              	.LFE129:
 458              		.section	.text.SAI_Cmd,"ax",%progbits
 459              		.align	1
 460              		.global	SAI_Cmd
 461              		.syntax unified
 462              		.thumb
 463              		.thumb_func
 465              	SAI_Cmd:
 466              	.LVL30:
 467              	.LFB130:
 438:./Library/stm32f4xx_sai.c **** 
 439:./Library/stm32f4xx_sai.c **** /**
 440:./Library/stm32f4xx_sai.c ****   * @brief  Enables or disables the specified SAI Block peripheral.
 441:./Library/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral.
 442:./Library/stm32f4xx_sai.c ****   * @param  NewState: new state of the SAI_Block_x peripheral. 
 443:./Library/stm32f4xx_sai.c ****   *          This parameter can be: ENABLE or DISABLE.
 444:./Library/stm32f4xx_sai.c ****   * @retval None
 445:./Library/stm32f4xx_sai.c ****   */
 446:./Library/stm32f4xx_sai.c **** void SAI_Cmd(SAI_Block_TypeDef* SAI_Block_x, FunctionalState NewState)
 447:./Library/stm32f4xx_sai.c **** {
 468              		.loc 1 447 1 is_stmt 1 view -0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccprSx8d.s 			page 17


 471              		@ frame_needed = 0, uses_anonymous_args = 0
 472              		@ link register save eliminated.
 448:./Library/stm32f4xx_sai.c ****   /* Check the parameters */
 449:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 473              		.loc 1 449 3 view .LVU151
 450:./Library/stm32f4xx_sai.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 474              		.loc 1 450 3 view .LVU152
 451:./Library/stm32f4xx_sai.c ****   if (NewState != DISABLE)
 475              		.loc 1 451 3 view .LVU153
 476              		.loc 1 451 6 is_stmt 0 view .LVU154
 477 0000 21B1     		cbz	r1, .L21
 452:./Library/stm32f4xx_sai.c ****   {
 453:./Library/stm32f4xx_sai.c ****     /* Enable the selected SAI peripheral */
 454:./Library/stm32f4xx_sai.c ****     SAI_Block_x->CR1 |= SAI_xCR1_SAIEN;
 478              		.loc 1 454 5 is_stmt 1 view .LVU155
 479              		.loc 1 454 16 is_stmt 0 view .LVU156
 480 0002 0368     		ldr	r3, [r0]
 481              		.loc 1 454 22 view .LVU157
 482 0004 43F48033 		orr	r3, r3, #65536
 483 0008 0360     		str	r3, [r0]
 484 000a 7047     		bx	lr
 485              	.L21:
 455:./Library/stm32f4xx_sai.c ****   }
 456:./Library/stm32f4xx_sai.c ****   else
 457:./Library/stm32f4xx_sai.c ****   {
 458:./Library/stm32f4xx_sai.c ****     /* Disable the selected SAI peripheral */
 459:./Library/stm32f4xx_sai.c ****     SAI_Block_x->CR1 &= ~(SAI_xCR1_SAIEN);
 486              		.loc 1 459 5 is_stmt 1 view .LVU158
 487              		.loc 1 459 16 is_stmt 0 view .LVU159
 488 000c 0368     		ldr	r3, [r0]
 489              		.loc 1 459 22 view .LVU160
 490 000e 23F48033 		bic	r3, r3, #65536
 491 0012 0360     		str	r3, [r0]
 460:./Library/stm32f4xx_sai.c ****   }
 461:./Library/stm32f4xx_sai.c **** }
 492              		.loc 1 461 1 view .LVU161
 493 0014 7047     		bx	lr
 494              		.cfi_endproc
 495              	.LFE130:
 497              		.section	.text.SAI_MonoModeConfig,"ax",%progbits
 498              		.align	1
 499              		.global	SAI_MonoModeConfig
 500              		.syntax unified
 501              		.thumb
 502              		.thumb_func
 504              	SAI_MonoModeConfig:
 505              	.LVL31:
 506              	.LFB131:
 462:./Library/stm32f4xx_sai.c **** 
 463:./Library/stm32f4xx_sai.c **** /**
 464:./Library/stm32f4xx_sai.c ****   * @brief  Configures the mono mode for the selected SAI block.
 465:./Library/stm32f4xx_sai.c ****   * 
 466:./Library/stm32f4xx_sai.c ****   * @note  This function has a meaning only when the number of slot is equal to 2. 
 467:./Library/stm32f4xx_sai.c ****   *      
 468:./Library/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral.
 469:./Library/stm32f4xx_sai.c ****   * @param  SAI_MonoMode: specifies the SAI block mono mode.
 470:./Library/stm32f4xx_sai.c ****   *          This parameter can be one of the following values:
ARM GAS  /tmp/ccprSx8d.s 			page 18


 471:./Library/stm32f4xx_sai.c ****   *            @arg SAI_MonoMode : Set mono audio mode
 472:./Library/stm32f4xx_sai.c ****   *            @arg SAI_StreoMode : Set streo audio mode                       
 473:./Library/stm32f4xx_sai.c ****   * @retval None
 474:./Library/stm32f4xx_sai.c ****   */
 475:./Library/stm32f4xx_sai.c **** void SAI_MonoModeConfig(SAI_Block_TypeDef* SAI_Block_x, uint32_t SAI_Mono_StreoMode)
 476:./Library/stm32f4xx_sai.c **** {
 507              		.loc 1 476 1 is_stmt 1 view -0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511              		@ link register save eliminated.
 477:./Library/stm32f4xx_sai.c ****   /* Check the parameters */
 478:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 512              		.loc 1 478 3 view .LVU163
 479:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_MONO_STREO_MODE(SAI_MonoMode));
 513              		.loc 1 479 3 view .LVU164
 480:./Library/stm32f4xx_sai.c ****   /* Clear MONO bit */
 481:./Library/stm32f4xx_sai.c ****   SAI_Block_x->CR1 &= ~(SAI_xCR1_MONO);
 514              		.loc 1 481 3 view .LVU165
 515              		.loc 1 481 14 is_stmt 0 view .LVU166
 516 0000 0368     		ldr	r3, [r0]
 517              		.loc 1 481 20 view .LVU167
 518 0002 23F48053 		bic	r3, r3, #4096
 519 0006 0360     		str	r3, [r0]
 482:./Library/stm32f4xx_sai.c ****   /* Set new Mono Mode value */
 483:./Library/stm32f4xx_sai.c ****   SAI_Block_x->CR1 |= SAI_MonoMode;
 520              		.loc 1 483 3 is_stmt 1 view .LVU168
 521              		.loc 1 483 14 is_stmt 0 view .LVU169
 522 0008 0368     		ldr	r3, [r0]
 523              		.loc 1 483 20 view .LVU170
 524 000a 43F48053 		orr	r3, r3, #4096
 525 000e 0360     		str	r3, [r0]
 484:./Library/stm32f4xx_sai.c **** }
 526              		.loc 1 484 1 view .LVU171
 527 0010 7047     		bx	lr
 528              		.cfi_endproc
 529              	.LFE131:
 531              		.section	.text.SAI_TRIStateConfig,"ax",%progbits
 532              		.align	1
 533              		.global	SAI_TRIStateConfig
 534              		.syntax unified
 535              		.thumb
 536              		.thumb_func
 538              	SAI_TRIStateConfig:
 539              	.LVL32:
 540              	.LFB132:
 485:./Library/stm32f4xx_sai.c **** 
 486:./Library/stm32f4xx_sai.c **** /**
 487:./Library/stm32f4xx_sai.c ****   * @brief  Configures the TRIState management on data line for the selected SAI block.
 488:./Library/stm32f4xx_sai.c ****   * 
 489:./Library/stm32f4xx_sai.c ****   * @note  This function has a meaning only when the SAI block is configured in transmitter 
 490:./Library/stm32f4xx_sai.c ****   *      
 491:./Library/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral.
 492:./Library/stm32f4xx_sai.c ****   * @param  SAI_TRIState: specifies the SAI block TRIState management.
 493:./Library/stm32f4xx_sai.c ****   *          This parameter can be one of the following values:
 494:./Library/stm32f4xx_sai.c ****   *            @arg SAI_Output_NotReleased : SD output line is still driven by the SAI.
 495:./Library/stm32f4xx_sai.c ****   *            @arg SAI_Output_Released : SD output line is released (HI-Z)                       
ARM GAS  /tmp/ccprSx8d.s 			page 19


 496:./Library/stm32f4xx_sai.c ****   * @retval None
 497:./Library/stm32f4xx_sai.c ****   */
 498:./Library/stm32f4xx_sai.c **** void SAI_TRIStateConfig(SAI_Block_TypeDef* SAI_Block_x, uint32_t SAI_TRIState)
 499:./Library/stm32f4xx_sai.c **** {
 541              		.loc 1 499 1 is_stmt 1 view -0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545              		@ link register save eliminated.
 500:./Library/stm32f4xx_sai.c ****   /* Check the parameters */
 501:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 546              		.loc 1 501 3 view .LVU173
 502:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_TRISTATE_MANAGEMENT(SAI_TRIState));
 547              		.loc 1 502 3 view .LVU174
 503:./Library/stm32f4xx_sai.c ****   /* Clear MONO bit */
 504:./Library/stm32f4xx_sai.c ****   SAI_Block_x->CR1 &= ~(SAI_xCR1_MONO);
 548              		.loc 1 504 3 view .LVU175
 549              		.loc 1 504 14 is_stmt 0 view .LVU176
 550 0000 0368     		ldr	r3, [r0]
 551              		.loc 1 504 20 view .LVU177
 552 0002 23F48053 		bic	r3, r3, #4096
 553 0006 0360     		str	r3, [r0]
 505:./Library/stm32f4xx_sai.c ****   /* Set new Mono Mode value */
 506:./Library/stm32f4xx_sai.c ****   SAI_Block_x->CR1 |= SAI_MonoMode;  
 554              		.loc 1 506 3 is_stmt 1 view .LVU178
 555              		.loc 1 506 14 is_stmt 0 view .LVU179
 556 0008 0368     		ldr	r3, [r0]
 557              		.loc 1 506 20 view .LVU180
 558 000a 43F48053 		orr	r3, r3, #4096
 559 000e 0360     		str	r3, [r0]
 507:./Library/stm32f4xx_sai.c ****   
 508:./Library/stm32f4xx_sai.c **** }
 560              		.loc 1 508 1 view .LVU181
 561 0010 7047     		bx	lr
 562              		.cfi_endproc
 563              	.LFE132:
 565              		.section	.text.SAI_CompandingModeConfig,"ax",%progbits
 566              		.align	1
 567              		.global	SAI_CompandingModeConfig
 568              		.syntax unified
 569              		.thumb
 570              		.thumb_func
 572              	SAI_CompandingModeConfig:
 573              	.LVL33:
 574              	.LFB133:
 509:./Library/stm32f4xx_sai.c **** 
 510:./Library/stm32f4xx_sai.c **** /**
 511:./Library/stm32f4xx_sai.c ****   * @brief  Configures the companding mode for the selected SAI block.
 512:./Library/stm32f4xx_sai.c ****   * 
 513:./Library/stm32f4xx_sai.c ****   * @note  The data expansion or data compression are determined by the state of
 514:./Library/stm32f4xx_sai.c ****   *        SAI block selected (transmitter or receiver). 
 515:./Library/stm32f4xx_sai.c **** 
 516:./Library/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral.              
 517:./Library/stm32f4xx_sai.c ****   * @param  SAI_CompandingMode: specifies the SAI block companding mode.
 518:./Library/stm32f4xx_sai.c ****   *          This parameter can be one of the following values:
 519:./Library/stm32f4xx_sai.c ****   *            @arg SAI_NoCompanding : no companding algorithm set
 520:./Library/stm32f4xx_sai.c ****   *            @arg SAI_ULaw_1CPL_Companding : Set U law (algorithm 1's complement representation)
ARM GAS  /tmp/ccprSx8d.s 			page 20


 521:./Library/stm32f4xx_sai.c ****   *            @arg SAI_ALaw_1CPL_Companding : Set A law (algorithm 1's complement representation) 
 522:./Library/stm32f4xx_sai.c ****   *            @arg SAI_ULaw_2CPL_Companding : Set U law (algorithm 2's complement representation)
 523:./Library/stm32f4xx_sai.c ****   *            @arg SAI_ALaw_2CPL_Companding : Set A law (algorithm 2's complement representation) 
 524:./Library/stm32f4xx_sai.c ****   * @retval None
 525:./Library/stm32f4xx_sai.c ****   */
 526:./Library/stm32f4xx_sai.c **** void SAI_CompandingModeConfig(SAI_Block_TypeDef* SAI_Block_x, uint32_t SAI_CompandingMode)
 527:./Library/stm32f4xx_sai.c **** {
 575              		.loc 1 527 1 is_stmt 1 view -0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579              		@ link register save eliminated.
 528:./Library/stm32f4xx_sai.c ****   /* Check the parameters */
 529:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 580              		.loc 1 529 3 view .LVU183
 530:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_COMPANDING_MODE(SAI_CompandingMode));
 581              		.loc 1 530 3 view .LVU184
 531:./Library/stm32f4xx_sai.c ****   /* Clear Companding Mode bits */
 532:./Library/stm32f4xx_sai.c ****   SAI_Block_x->CR2 &= ~(SAI_xCR2_COMP);
 582              		.loc 1 532 3 view .LVU185
 583              		.loc 1 532 14 is_stmt 0 view .LVU186
 584 0000 4368     		ldr	r3, [r0, #4]
 585              		.loc 1 532 20 view .LVU187
 586 0002 23F44043 		bic	r3, r3, #49152
 587 0006 4360     		str	r3, [r0, #4]
 533:./Library/stm32f4xx_sai.c ****   /* Set new Companding Mode value */
 534:./Library/stm32f4xx_sai.c ****   SAI_Block_x->CR2 |= SAI_CompandingMode;
 588              		.loc 1 534 3 is_stmt 1 view .LVU188
 589              		.loc 1 534 14 is_stmt 0 view .LVU189
 590 0008 4368     		ldr	r3, [r0, #4]
 591              		.loc 1 534 20 view .LVU190
 592 000a 0B43     		orrs	r3, r3, r1
 593 000c 4360     		str	r3, [r0, #4]
 535:./Library/stm32f4xx_sai.c **** }
 594              		.loc 1 535 1 view .LVU191
 595 000e 7047     		bx	lr
 596              		.cfi_endproc
 597              	.LFE133:
 599              		.section	.text.SAI_MuteModeCmd,"ax",%progbits
 600              		.align	1
 601              		.global	SAI_MuteModeCmd
 602              		.syntax unified
 603              		.thumb
 604              		.thumb_func
 606              	SAI_MuteModeCmd:
 607              	.LVL34:
 608              	.LFB134:
 536:./Library/stm32f4xx_sai.c **** 
 537:./Library/stm32f4xx_sai.c **** /**
 538:./Library/stm32f4xx_sai.c ****   * @brief  Enables or disables the Mute mode for the selected SAI block.
 539:./Library/stm32f4xx_sai.c ****   *    
 540:./Library/stm32f4xx_sai.c ****   * @note   This function has a meaning only when the audio block is transmitter
 541:./Library/stm32f4xx_sai.c ****   * @note   Mute mode is applied for an entire frame for all the valid slot
 542:./Library/stm32f4xx_sai.c ****   *         It becomes active at the end of an audio frame when set somewhere in a frame. 
 543:./Library/stm32f4xx_sai.c ****   *         Mute mode exit occurs at the end of the frame in which the bit MUTE has been set.
 544:./Library/stm32f4xx_sai.c ****   *
 545:./Library/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral.
ARM GAS  /tmp/ccprSx8d.s 			page 21


 546:./Library/stm32f4xx_sai.c ****   * @param  NewState: new state of the SAIx block. 
 547:./Library/stm32f4xx_sai.c ****   *          This parameter can be: ENABLE or DISABLE.
 548:./Library/stm32f4xx_sai.c ****   * @retval None
 549:./Library/stm32f4xx_sai.c ****   */
 550:./Library/stm32f4xx_sai.c **** void SAI_MuteModeCmd(SAI_Block_TypeDef* SAI_Block_x, FunctionalState NewState)
 551:./Library/stm32f4xx_sai.c **** {
 609              		.loc 1 551 1 is_stmt 1 view -0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 0
 612              		@ frame_needed = 0, uses_anonymous_args = 0
 613              		@ link register save eliminated.
 552:./Library/stm32f4xx_sai.c ****   /* Check the parameters */
 553:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 614              		.loc 1 553 3 view .LVU193
 554:./Library/stm32f4xx_sai.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 615              		.loc 1 554 3 view .LVU194
 555:./Library/stm32f4xx_sai.c ****   if (NewState != DISABLE)
 616              		.loc 1 555 3 view .LVU195
 617              		.loc 1 555 6 is_stmt 0 view .LVU196
 618 0000 21B1     		cbz	r1, .L27
 556:./Library/stm32f4xx_sai.c ****   {
 557:./Library/stm32f4xx_sai.c ****     /* Enable the selected SAI block mute mode */
 558:./Library/stm32f4xx_sai.c ****     SAI_Block_x->CR2 |= SAI_xCR2_MUTE;
 619              		.loc 1 558 5 is_stmt 1 view .LVU197
 620              		.loc 1 558 16 is_stmt 0 view .LVU198
 621 0002 4368     		ldr	r3, [r0, #4]
 622              		.loc 1 558 22 view .LVU199
 623 0004 43F02003 		orr	r3, r3, #32
 624 0008 4360     		str	r3, [r0, #4]
 625 000a 7047     		bx	lr
 626              	.L27:
 559:./Library/stm32f4xx_sai.c ****   }
 560:./Library/stm32f4xx_sai.c ****   else
 561:./Library/stm32f4xx_sai.c ****   {
 562:./Library/stm32f4xx_sai.c ****     /* Disable the selected SAI SS output */
 563:./Library/stm32f4xx_sai.c ****     SAI_Block_x->CR2 &= ~(SAI_xCR2_MUTE);
 627              		.loc 1 563 5 is_stmt 1 view .LVU200
 628              		.loc 1 563 16 is_stmt 0 view .LVU201
 629 000c 4368     		ldr	r3, [r0, #4]
 630              		.loc 1 563 22 view .LVU202
 631 000e 23F02003 		bic	r3, r3, #32
 632 0012 4360     		str	r3, [r0, #4]
 564:./Library/stm32f4xx_sai.c ****   }
 565:./Library/stm32f4xx_sai.c **** }
 633              		.loc 1 565 1 view .LVU203
 634 0014 7047     		bx	lr
 635              		.cfi_endproc
 636              	.LFE134:
 638              		.section	.text.SAI_MuteValueConfig,"ax",%progbits
 639              		.align	1
 640              		.global	SAI_MuteValueConfig
 641              		.syntax unified
 642              		.thumb
 643              		.thumb_func
 645              	SAI_MuteValueConfig:
 646              	.LVL35:
 647              	.LFB135:
ARM GAS  /tmp/ccprSx8d.s 			page 22


 566:./Library/stm32f4xx_sai.c **** 
 567:./Library/stm32f4xx_sai.c **** /**
 568:./Library/stm32f4xx_sai.c ****   * @brief  Configure the mute value for the selected SAI block.
 569:./Library/stm32f4xx_sai.c ****   *    
 570:./Library/stm32f4xx_sai.c ****   * @note   This function has a meaning only when the audio block is transmitter
 571:./Library/stm32f4xx_sai.c ****   * @note   the configuration last value sent during mute mode has only a meaning 
 572:./Library/stm32f4xx_sai.c ****   *          when the number of slot is lower or equal to 2 and if the MUTE bit is set.
 573:./Library/stm32f4xx_sai.c ****   *           
 574:./Library/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral.
 575:./Library/stm32f4xx_sai.c ****   * @param  SAI_MuteValue: specifies the SAI block mute value.
 576:./Library/stm32f4xx_sai.c ****   *          This parameter can be one of the following values:
 577:./Library/stm32f4xx_sai.c ****   *            @arg SAI_ZeroValue : bit value 0 is sent during Mute Mode
 578:./Library/stm32f4xx_sai.c ****   *            @arg SAI_LastSentValue : Last value is sent during Mute Mode  
 579:./Library/stm32f4xx_sai.c ****   * @retval None
 580:./Library/stm32f4xx_sai.c ****   */
 581:./Library/stm32f4xx_sai.c **** void SAI_MuteValueConfig(SAI_Block_TypeDef* SAI_Block_x, uint32_t SAI_MuteValue)
 582:./Library/stm32f4xx_sai.c **** {
 648              		.loc 1 582 1 is_stmt 1 view -0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 0
 651              		@ frame_needed = 0, uses_anonymous_args = 0
 652              		@ link register save eliminated.
 583:./Library/stm32f4xx_sai.c ****   /* Check the parameters */
 584:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 653              		.loc 1 584 3 view .LVU205
 585:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_MUTE_VALUE(SAI_MuteValue));
 654              		.loc 1 585 3 view .LVU206
 586:./Library/stm32f4xx_sai.c ****   
 587:./Library/stm32f4xx_sai.c ****   /* Clear Mute value bits */
 588:./Library/stm32f4xx_sai.c ****   SAI_Block_x->CR2 &= ~(SAI_xCR2_MUTEVAL);
 655              		.loc 1 588 3 view .LVU207
 656              		.loc 1 588 14 is_stmt 0 view .LVU208
 657 0000 4368     		ldr	r3, [r0, #4]
 658              		.loc 1 588 20 view .LVU209
 659 0002 23F04003 		bic	r3, r3, #64
 660 0006 4360     		str	r3, [r0, #4]
 589:./Library/stm32f4xx_sai.c ****   /* Set new Mute value */
 590:./Library/stm32f4xx_sai.c ****   SAI_Block_x->CR2 |= SAI_MuteValue;
 661              		.loc 1 590 3 is_stmt 1 view .LVU210
 662              		.loc 1 590 14 is_stmt 0 view .LVU211
 663 0008 4368     		ldr	r3, [r0, #4]
 664              		.loc 1 590 20 view .LVU212
 665 000a 0B43     		orrs	r3, r3, r1
 666 000c 4360     		str	r3, [r0, #4]
 591:./Library/stm32f4xx_sai.c **** }
 667              		.loc 1 591 1 view .LVU213
 668 000e 7047     		bx	lr
 669              		.cfi_endproc
 670              	.LFE135:
 672              		.section	.text.SAI_MuteFrameCounterConfig,"ax",%progbits
 673              		.align	1
 674              		.global	SAI_MuteFrameCounterConfig
 675              		.syntax unified
 676              		.thumb
 677              		.thumb_func
 679              	SAI_MuteFrameCounterConfig:
 680              	.LVL36:
ARM GAS  /tmp/ccprSx8d.s 			page 23


 681              	.LFB136:
 592:./Library/stm32f4xx_sai.c **** 
 593:./Library/stm32f4xx_sai.c **** /**
 594:./Library/stm32f4xx_sai.c ****   * @brief  Enables or disables the Mute mode for the selected SAI block. 
 595:./Library/stm32f4xx_sai.c ****   *
 596:./Library/stm32f4xx_sai.c ****   * @note   This function has a meaning only when the audio block is Receiver
 597:./Library/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral.
 598:./Library/stm32f4xx_sai.c ****   * @param  SAI_MuteCounter: specifies the SAI block mute value.
 599:./Library/stm32f4xx_sai.c ****   *         This parameter can be a number between 0 and 63.  
 600:./Library/stm32f4xx_sai.c ****  
 601:./Library/stm32f4xx_sai.c ****   * @retval None
 602:./Library/stm32f4xx_sai.c ****   */
 603:./Library/stm32f4xx_sai.c **** void SAI_MuteFrameCounterConfig(SAI_Block_TypeDef* SAI_Block_x, uint32_t SAI_MuteCounter)
 604:./Library/stm32f4xx_sai.c **** {
 682              		.loc 1 604 1 is_stmt 1 view -0
 683              		.cfi_startproc
 684              		@ args = 0, pretend = 0, frame = 0
 685              		@ frame_needed = 0, uses_anonymous_args = 0
 686              		@ link register save eliminated.
 605:./Library/stm32f4xx_sai.c ****   /* Check the parameters */
 606:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 687              		.loc 1 606 3 view .LVU215
 607:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_MUTE_COUNTER(SAI_MuteCounter));
 688              		.loc 1 607 3 view .LVU216
 608:./Library/stm32f4xx_sai.c ****   
 609:./Library/stm32f4xx_sai.c ****   /* Clear Mute value bits */
 610:./Library/stm32f4xx_sai.c ****   SAI_Block_x->CR2 &= ~(SAI_xCR2_MUTECNT);
 689              		.loc 1 610 3 view .LVU217
 690              		.loc 1 610 14 is_stmt 0 view .LVU218
 691 0000 4368     		ldr	r3, [r0, #4]
 692              		.loc 1 610 20 view .LVU219
 693 0002 23F4FC53 		bic	r3, r3, #8064
 694 0006 4360     		str	r3, [r0, #4]
 611:./Library/stm32f4xx_sai.c ****   /* Set new Mute value */
 612:./Library/stm32f4xx_sai.c ****   SAI_Block_x->CR2 |= (SAI_MuteCounter << 7);
 695              		.loc 1 612 3 is_stmt 1 view .LVU220
 696              		.loc 1 612 14 is_stmt 0 view .LVU221
 697 0008 4368     		ldr	r3, [r0, #4]
 698              		.loc 1 612 20 view .LVU222
 699 000a 43EAC113 		orr	r3, r3, r1, lsl #7
 700 000e 4360     		str	r3, [r0, #4]
 613:./Library/stm32f4xx_sai.c **** }
 701              		.loc 1 613 1 view .LVU223
 702 0010 7047     		bx	lr
 703              		.cfi_endproc
 704              	.LFE136:
 706              		.section	.text.SAI_FlushFIFO,"ax",%progbits
 707              		.align	1
 708              		.global	SAI_FlushFIFO
 709              		.syntax unified
 710              		.thumb
 711              		.thumb_func
 713              	SAI_FlushFIFO:
 714              	.LVL37:
 715              	.LFB137:
 614:./Library/stm32f4xx_sai.c **** #if defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx) ||
 615:./Library/stm32f4xx_sai.c ****     defined(STM32F469_479xx) || defined(STM32F413_423xx) || defined(STM32F446xx)
ARM GAS  /tmp/ccprSx8d.s 			page 24


 616:./Library/stm32f4xx_sai.c **** /**
 617:./Library/stm32f4xx_sai.c ****   * @brief  Configure SAI Block synchronization mode 
 618:./Library/stm32f4xx_sai.c ****   * @param  SAI_InitStruct: pointer to a SAI_InitTypeDef structure that
 619:./Library/stm32f4xx_sai.c ****   *         contains the configuration information for the specified SAI Block peripheral.
 620:./Library/stm32f4xx_sai.c ****   * @param  SAIx: To select the SAIx peripheral, where x can be the different instances
 621:./Library/stm32f4xx_sai.c ****   * @retval None 
 622:./Library/stm32f4xx_sai.c ****   */
 623:./Library/stm32f4xx_sai.c **** void SAI_BlockSynchroConfig(SAI_InitTypeDef* SAI_InitStruct, SAI_TypeDef* SAIx)
 624:./Library/stm32f4xx_sai.c **** {
 625:./Library/stm32f4xx_sai.c ****   uint32_t tmpregisterGCR = 0U;
 626:./Library/stm32f4xx_sai.c **** 
 627:./Library/stm32f4xx_sai.c **** #if defined(STM32F446xx)  
 628:./Library/stm32f4xx_sai.c ****   /* This setting must be done with both audio block (A & B) disabled         */
 629:./Library/stm32f4xx_sai.c ****   switch(SAI_InitStruct->SAI_SynchroExt)
 630:./Library/stm32f4xx_sai.c ****   {
 631:./Library/stm32f4xx_sai.c ****   case SAI_SyncExt_Disable :
 632:./Library/stm32f4xx_sai.c ****     tmpregisterGCR = 0U;
 633:./Library/stm32f4xx_sai.c ****     break;
 634:./Library/stm32f4xx_sai.c ****   case SAI_SyncExt_OutBlockA_Enable :
 635:./Library/stm32f4xx_sai.c ****     tmpregisterGCR = SAI_GCR_SYNCOUT_0;
 636:./Library/stm32f4xx_sai.c ****     break;
 637:./Library/stm32f4xx_sai.c ****   case SAI_SyncExt_OutBlockB_Enable :
 638:./Library/stm32f4xx_sai.c ****     tmpregisterGCR = SAI_GCR_SYNCOUT_1;
 639:./Library/stm32f4xx_sai.c ****     break;
 640:./Library/stm32f4xx_sai.c ****   default:
 641:./Library/stm32f4xx_sai.c ****     break;
 642:./Library/stm32f4xx_sai.c ****   }
 643:./Library/stm32f4xx_sai.c **** 
 644:./Library/stm32f4xx_sai.c ****   if(((SAI_InitStruct->SAI_Synchro) == SAI_Synchronous_Ext) && (SAIx == SAI1))
 645:./Library/stm32f4xx_sai.c ****   {
 646:./Library/stm32f4xx_sai.c ****     tmpregisterGCR |= SAI_GCR_SYNCIN_0;
 647:./Library/stm32f4xx_sai.c ****   }
 648:./Library/stm32f4xx_sai.c ****   
 649:./Library/stm32f4xx_sai.c ****   if(SAIx == SAI1)
 650:./Library/stm32f4xx_sai.c ****   {
 651:./Library/stm32f4xx_sai.c ****    SAI1->GCR = tmpregisterGCR;
 652:./Library/stm32f4xx_sai.c ****   }
 653:./Library/stm32f4xx_sai.c ****   else
 654:./Library/stm32f4xx_sai.c ****   {
 655:./Library/stm32f4xx_sai.c ****    SAI2->GCR = tmpregisterGCR; 
 656:./Library/stm32f4xx_sai.c ****   }
 657:./Library/stm32f4xx_sai.c **** 
 658:./Library/stm32f4xx_sai.c **** #endif /* STM32F446xx */
 659:./Library/stm32f4xx_sai.c **** #if defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx) ||
 660:./Library/stm32f4xx_sai.c ****     defined(STM32F469_479xx) || defined(STM32F413_423xx)
 661:./Library/stm32f4xx_sai.c ****   /* This setting must be done with both audio block (A & B) disabled         */
 662:./Library/stm32f4xx_sai.c ****   switch(SAI_InitStruct->SAI_SynchroExt)
 663:./Library/stm32f4xx_sai.c ****   {
 664:./Library/stm32f4xx_sai.c ****   case SAI_SyncExt_Disable :
 665:./Library/stm32f4xx_sai.c ****     tmpregisterGCR = 0U;
 666:./Library/stm32f4xx_sai.c ****     break;
 667:./Library/stm32f4xx_sai.c ****   case SAI_SyncExt_OutBlockA_Enable :
 668:./Library/stm32f4xx_sai.c ****     tmpregisterGCR = SAI_GCR_SYNCOUT_0;
 669:./Library/stm32f4xx_sai.c ****     break;
 670:./Library/stm32f4xx_sai.c ****   case SAI_SyncExt_OutBlockB_Enable :
 671:./Library/stm32f4xx_sai.c ****     tmpregisterGCR = SAI_GCR_SYNCOUT_1;
 672:./Library/stm32f4xx_sai.c ****     break;
ARM GAS  /tmp/ccprSx8d.s 			page 25


 673:./Library/stm32f4xx_sai.c ****   default:
 674:./Library/stm32f4xx_sai.c ****     break;
 675:./Library/stm32f4xx_sai.c ****   }
 676:./Library/stm32f4xx_sai.c ****   SAI1->GCR = tmpregisterGCR;
 677:./Library/stm32f4xx_sai.c **** #endif /* STM32F427xx || STM32F437xx || STM32F429xx || STM32F439xx || STM32F469_479xx || STM32F413_
 678:./Library/stm32f4xx_sai.c **** }
 679:./Library/stm32f4xx_sai.c **** #endif /* STM32F427xx || STM32F437xx || STM32F429xx || STM32F439xx || STM32F469_479xx || STM32F413_
 680:./Library/stm32f4xx_sai.c **** 
 681:./Library/stm32f4xx_sai.c **** /**
 682:./Library/stm32f4xx_sai.c ****   * @brief  Reinitialize the FIFO pointer
 683:./Library/stm32f4xx_sai.c ****   *   
 684:./Library/stm32f4xx_sai.c ****   * @note   The FIFO pointers can be reinitialized at anytime The data present 
 685:./Library/stm32f4xx_sai.c ****   *         into the FIFO, if it is not empty, will be lost. 
 686:./Library/stm32f4xx_sai.c ****   * 
 687:./Library/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral.
 688:./Library/stm32f4xx_sai.c ****   * @param  NewState: new state of the selected SAI TI communication mode.
 689:./Library/stm32f4xx_sai.c ****   *          This parameter can be: ENABLE or DISABLE.
 690:./Library/stm32f4xx_sai.c ****   * @retval None
 691:./Library/stm32f4xx_sai.c ****   */
 692:./Library/stm32f4xx_sai.c **** void SAI_FlushFIFO(SAI_Block_TypeDef* SAI_Block_x)
 693:./Library/stm32f4xx_sai.c **** {
 716              		.loc 1 693 1 is_stmt 1 view -0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 0
 719              		@ frame_needed = 0, uses_anonymous_args = 0
 720              		@ link register save eliminated.
 694:./Library/stm32f4xx_sai.c ****   /* Check the parameters */
 695:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 721              		.loc 1 695 3 view .LVU225
 696:./Library/stm32f4xx_sai.c **** 
 697:./Library/stm32f4xx_sai.c ****   /* FIFO flush */
 698:./Library/stm32f4xx_sai.c ****   SAI_Block_x->CR2 |= SAI_xCR2_FFLUSH;
 722              		.loc 1 698 3 view .LVU226
 723              		.loc 1 698 14 is_stmt 0 view .LVU227
 724 0000 4368     		ldr	r3, [r0, #4]
 725              		.loc 1 698 20 view .LVU228
 726 0002 43F00803 		orr	r3, r3, #8
 727 0006 4360     		str	r3, [r0, #4]
 699:./Library/stm32f4xx_sai.c **** }
 728              		.loc 1 699 1 view .LVU229
 729 0008 7047     		bx	lr
 730              		.cfi_endproc
 731              	.LFE137:
 733              		.section	.text.SAI_ReceiveData,"ax",%progbits
 734              		.align	1
 735              		.global	SAI_ReceiveData
 736              		.syntax unified
 737              		.thumb
 738              		.thumb_func
 740              	SAI_ReceiveData:
 741              	.LVL38:
 742              	.LFB138:
 700:./Library/stm32f4xx_sai.c **** 
 701:./Library/stm32f4xx_sai.c **** /**
 702:./Library/stm32f4xx_sai.c ****   * @}
 703:./Library/stm32f4xx_sai.c ****   */
 704:./Library/stm32f4xx_sai.c **** 
ARM GAS  /tmp/ccprSx8d.s 			page 26


 705:./Library/stm32f4xx_sai.c **** /** @defgroup SAI_Group2 Data transfers functions
 706:./Library/stm32f4xx_sai.c ****  *  @brief   Data transfers functions
 707:./Library/stm32f4xx_sai.c ****  *
 708:./Library/stm32f4xx_sai.c **** @verbatim   
 709:./Library/stm32f4xx_sai.c ****  ===============================================================================
 710:./Library/stm32f4xx_sai.c ****                        ##### Data transfers functions #####
 711:./Library/stm32f4xx_sai.c ****  ===============================================================================  
 712:./Library/stm32f4xx_sai.c ****   [..]
 713:./Library/stm32f4xx_sai.c ****   This section provides a set of functions allowing to manage the SAI data transfers.
 714:./Library/stm32f4xx_sai.c ****   [..]
 715:./Library/stm32f4xx_sai.c ****   In reception, data are received and then stored into an internal FIFO while 
 716:./Library/stm32f4xx_sai.c ****   In transmission, data are first stored into an internal FIFO before being 
 717:./Library/stm32f4xx_sai.c ****   transmitted.
 718:./Library/stm32f4xx_sai.c ****   [..]
 719:./Library/stm32f4xx_sai.c ****   The read access of the SAI_xDR register can be done using the SAI_ReceiveData()
 720:./Library/stm32f4xx_sai.c ****   function and returns the Rx buffered value. Whereas a write access to the SAI_DR 
 721:./Library/stm32f4xx_sai.c ****   can be done using SAI_SendData() function and stores the written data into 
 722:./Library/stm32f4xx_sai.c ****   Tx buffer.
 723:./Library/stm32f4xx_sai.c **** 
 724:./Library/stm32f4xx_sai.c **** @endverbatim
 725:./Library/stm32f4xx_sai.c ****   * @{
 726:./Library/stm32f4xx_sai.c ****   */
 727:./Library/stm32f4xx_sai.c **** 
 728:./Library/stm32f4xx_sai.c **** /**
 729:./Library/stm32f4xx_sai.c ****   * @brief  Returns the most recent received data by the SAI block x peripheral. 
 730:./Library/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral. 
 731:./Library/stm32f4xx_sai.c ****   *         
 732:./Library/stm32f4xx_sai.c ****   * @retval The value of the received data.
 733:./Library/stm32f4xx_sai.c ****   */
 734:./Library/stm32f4xx_sai.c **** uint32_t SAI_ReceiveData(SAI_Block_TypeDef* SAI_Block_x)
 735:./Library/stm32f4xx_sai.c **** {
 743              		.loc 1 735 1 is_stmt 1 view -0
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 0
 746              		@ frame_needed = 0, uses_anonymous_args = 0
 747              		@ link register save eliminated.
 736:./Library/stm32f4xx_sai.c ****   /* Check the parameters */
 737:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 748              		.loc 1 737 3 view .LVU231
 738:./Library/stm32f4xx_sai.c ****   
 739:./Library/stm32f4xx_sai.c ****   /* Return the data in the DR register */
 740:./Library/stm32f4xx_sai.c ****   return SAI_Block_x->DR;
 749              		.loc 1 740 3 view .LVU232
 750              		.loc 1 740 21 is_stmt 0 view .LVU233
 751 0000 C069     		ldr	r0, [r0, #28]
 752              	.LVL39:
 741:./Library/stm32f4xx_sai.c **** }
 753              		.loc 1 741 1 view .LVU234
 754 0002 7047     		bx	lr
 755              		.cfi_endproc
 756              	.LFE138:
 758              		.section	.text.SAI_SendData,"ax",%progbits
 759              		.align	1
 760              		.global	SAI_SendData
 761              		.syntax unified
 762              		.thumb
 763              		.thumb_func
ARM GAS  /tmp/ccprSx8d.s 			page 27


 765              	SAI_SendData:
 766              	.LVL40:
 767              	.LFB139:
 742:./Library/stm32f4xx_sai.c **** 
 743:./Library/stm32f4xx_sai.c **** /**
 744:./Library/stm32f4xx_sai.c ****   * @brief  Transmits a Data through the SAI block x peripheral.
 745:./Library/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral.
 746:./Library/stm32f4xx_sai.c ****   *        
 747:./Library/stm32f4xx_sai.c ****   * @param  Data: Data to be transmitted.
 748:./Library/stm32f4xx_sai.c ****   * @retval None
 749:./Library/stm32f4xx_sai.c ****   */
 750:./Library/stm32f4xx_sai.c **** void SAI_SendData(SAI_Block_TypeDef* SAI_Block_x, uint32_t Data)
 751:./Library/stm32f4xx_sai.c **** {
 768              		.loc 1 751 1 is_stmt 1 view -0
 769              		.cfi_startproc
 770              		@ args = 0, pretend = 0, frame = 0
 771              		@ frame_needed = 0, uses_anonymous_args = 0
 772              		@ link register save eliminated.
 752:./Library/stm32f4xx_sai.c ****   /* Check the parameters */
 753:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 773              		.loc 1 753 3 view .LVU236
 754:./Library/stm32f4xx_sai.c ****   
 755:./Library/stm32f4xx_sai.c ****   /* Write in the DR register the data to be sent */
 756:./Library/stm32f4xx_sai.c ****   SAI_Block_x->DR = Data;
 774              		.loc 1 756 3 view .LVU237
 775              		.loc 1 756 19 is_stmt 0 view .LVU238
 776 0000 C161     		str	r1, [r0, #28]
 757:./Library/stm32f4xx_sai.c **** }
 777              		.loc 1 757 1 view .LVU239
 778 0002 7047     		bx	lr
 779              		.cfi_endproc
 780              	.LFE139:
 782              		.section	.text.SAI_DMACmd,"ax",%progbits
 783              		.align	1
 784              		.global	SAI_DMACmd
 785              		.syntax unified
 786              		.thumb
 787              		.thumb_func
 789              	SAI_DMACmd:
 790              	.LVL41:
 791              	.LFB140:
 758:./Library/stm32f4xx_sai.c **** 
 759:./Library/stm32f4xx_sai.c **** /**
 760:./Library/stm32f4xx_sai.c ****   * @}
 761:./Library/stm32f4xx_sai.c ****   */
 762:./Library/stm32f4xx_sai.c **** 
 763:./Library/stm32f4xx_sai.c **** /** @defgroup SAI_Group3 DMA transfers management functions
 764:./Library/stm32f4xx_sai.c ****  *  @brief   DMA transfers management functions
 765:./Library/stm32f4xx_sai.c ****   *
 766:./Library/stm32f4xx_sai.c **** @verbatim   
 767:./Library/stm32f4xx_sai.c ****  ===============================================================================
 768:./Library/stm32f4xx_sai.c ****                   ##### DMA transfers management functions #####
 769:./Library/stm32f4xx_sai.c ****  ===============================================================================  
 770:./Library/stm32f4xx_sai.c **** 
 771:./Library/stm32f4xx_sai.c **** @endverbatim
 772:./Library/stm32f4xx_sai.c ****   * @{
 773:./Library/stm32f4xx_sai.c ****   */
ARM GAS  /tmp/ccprSx8d.s 			page 28


 774:./Library/stm32f4xx_sai.c **** 
 775:./Library/stm32f4xx_sai.c **** /**
 776:./Library/stm32f4xx_sai.c ****   * @brief  Enables or disables the SAI Block x DMA interface.
 777:./Library/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral. 
 778:./Library/stm32f4xx_sai.c ****   * @param  NewState: new state of the selected SAI block DMA transfer request.
 779:./Library/stm32f4xx_sai.c ****   *          This parameter can be: ENABLE or DISABLE.
 780:./Library/stm32f4xx_sai.c ****   * @retval None
 781:./Library/stm32f4xx_sai.c ****   */
 782:./Library/stm32f4xx_sai.c **** void SAI_DMACmd(SAI_Block_TypeDef* SAI_Block_x, FunctionalState NewState)
 783:./Library/stm32f4xx_sai.c **** {
 792              		.loc 1 783 1 is_stmt 1 view -0
 793              		.cfi_startproc
 794              		@ args = 0, pretend = 0, frame = 0
 795              		@ frame_needed = 0, uses_anonymous_args = 0
 796              		@ link register save eliminated.
 784:./Library/stm32f4xx_sai.c ****   /* Check the parameters */
 785:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 797              		.loc 1 785 3 view .LVU241
 786:./Library/stm32f4xx_sai.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 798              		.loc 1 786 3 view .LVU242
 787:./Library/stm32f4xx_sai.c ****   
 788:./Library/stm32f4xx_sai.c ****   if (NewState != DISABLE)
 799              		.loc 1 788 3 view .LVU243
 800              		.loc 1 788 6 is_stmt 0 view .LVU244
 801 0000 21B1     		cbz	r1, .L35
 789:./Library/stm32f4xx_sai.c ****   {
 790:./Library/stm32f4xx_sai.c ****     /* Enable the selected SAI block mute mode */
 791:./Library/stm32f4xx_sai.c ****     SAI_Block_x->CR1 |= SAI_xCR1_DMAEN;
 802              		.loc 1 791 5 is_stmt 1 view .LVU245
 803              		.loc 1 791 16 is_stmt 0 view .LVU246
 804 0002 0368     		ldr	r3, [r0]
 805              		.loc 1 791 22 view .LVU247
 806 0004 43F40033 		orr	r3, r3, #131072
 807 0008 0360     		str	r3, [r0]
 808 000a 7047     		bx	lr
 809              	.L35:
 792:./Library/stm32f4xx_sai.c ****   }
 793:./Library/stm32f4xx_sai.c ****   else
 794:./Library/stm32f4xx_sai.c ****   {
 795:./Library/stm32f4xx_sai.c ****     /* Disable the selected SAI SS output */
 796:./Library/stm32f4xx_sai.c ****     SAI_Block_x->CR1 &= ~(SAI_xCR1_DMAEN);
 810              		.loc 1 796 5 is_stmt 1 view .LVU248
 811              		.loc 1 796 16 is_stmt 0 view .LVU249
 812 000c 0368     		ldr	r3, [r0]
 813              		.loc 1 796 22 view .LVU250
 814 000e 23F40033 		bic	r3, r3, #131072
 815 0012 0360     		str	r3, [r0]
 797:./Library/stm32f4xx_sai.c ****   }
 798:./Library/stm32f4xx_sai.c **** }
 816              		.loc 1 798 1 view .LVU251
 817 0014 7047     		bx	lr
 818              		.cfi_endproc
 819              	.LFE140:
 821              		.section	.text.SAI_ITConfig,"ax",%progbits
 822              		.align	1
 823              		.global	SAI_ITConfig
 824              		.syntax unified
ARM GAS  /tmp/ccprSx8d.s 			page 29


 825              		.thumb
 826              		.thumb_func
 828              	SAI_ITConfig:
 829              	.LVL42:
 830              	.LFB141:
 799:./Library/stm32f4xx_sai.c **** 
 800:./Library/stm32f4xx_sai.c **** /**
 801:./Library/stm32f4xx_sai.c ****   * @}
 802:./Library/stm32f4xx_sai.c ****   */
 803:./Library/stm32f4xx_sai.c **** 
 804:./Library/stm32f4xx_sai.c **** /** @defgroup SAI_Group4 Interrupts and flags management functions
 805:./Library/stm32f4xx_sai.c ****  *  @brief   Interrupts and flags management functions
 806:./Library/stm32f4xx_sai.c ****   *
 807:./Library/stm32f4xx_sai.c **** @verbatim   
 808:./Library/stm32f4xx_sai.c ****  ===============================================================================
 809:./Library/stm32f4xx_sai.c ****             ##### Interrupts and flags management functions #####
 810:./Library/stm32f4xx_sai.c ****  ===============================================================================  
 811:./Library/stm32f4xx_sai.c ****   [..]
 812:./Library/stm32f4xx_sai.c ****   This section provides a set of functions allowing to configure the SAI Interrupts 
 813:./Library/stm32f4xx_sai.c ****   sources and check or clear the flags or pending bits status.
 814:./Library/stm32f4xx_sai.c ****   The user should identify which mode will be used in his application to manage 
 815:./Library/stm32f4xx_sai.c ****   the communication: Polling mode, Interrupt mode or DMA mode. 
 816:./Library/stm32f4xx_sai.c ****     
 817:./Library/stm32f4xx_sai.c ****   *** Polling Mode ***
 818:./Library/stm32f4xx_sai.c ****   ====================
 819:./Library/stm32f4xx_sai.c ****   [..]
 820:./Library/stm32f4xx_sai.c ****   In Polling Mode, the SAI communication can be managed by 7 flags:
 821:./Library/stm32f4xx_sai.c ****      (#) SAI_FLAG_FREQ : to indicate if there is a FIFO Request to write or to read.
 822:./Library/stm32f4xx_sai.c ****      (#) SAI_FLAG_MUTEDET : to indicate if a MUTE frame detected
 823:./Library/stm32f4xx_sai.c ****      (#) SAI_FLAG_OVRUDR : to indicate if an Overrun or Underrun error occur
 824:./Library/stm32f4xx_sai.c ****      (#) SAI_FLAG_AFSDET : to indicate if there is the detection of a audio frame 
 825:./Library/stm32f4xx_sai.c ****                           synchronisation (FS) earlier than expected
 826:./Library/stm32f4xx_sai.c ****      (#) SAI_FLAG_LFSDET : to indicate if there is the detection of a audio frame 
 827:./Library/stm32f4xx_sai.c ****                           synchronisation (FS) later than expected              
 828:./Library/stm32f4xx_sai.c ****      (#) SAI_FLAG_CNRDY : to indicate if  the codec is not ready to communicate during 
 829:./Library/stm32f4xx_sai.c ****                          the reception of the TAG 0 (slot0) of the AC97 audio frame 
 830:./Library/stm32f4xx_sai.c ****      (#) SAI_FLAG_WCKCFG: to indicate if wrong clock configuration in master mode 
 831:./Library/stm32f4xx_sai.c ****                          error occurs.
 832:./Library/stm32f4xx_sai.c ****   [..]
 833:./Library/stm32f4xx_sai.c ****   In this Mode it is advised to use the following functions:
 834:./Library/stm32f4xx_sai.c ****      (+) FlagStatus SAI_GetFlagStatus(SAI_Block_TypeDef* SAI_Block_x, uint32_t SAI_FLAG);
 835:./Library/stm32f4xx_sai.c ****      (+) void SAI_ClearFlag(SAI_Block_TypeDef* SAI_Block_x, uint32_t SAI_FLAG);
 836:./Library/stm32f4xx_sai.c **** 
 837:./Library/stm32f4xx_sai.c ****   *** Interrupt Mode ***
 838:./Library/stm32f4xx_sai.c ****   ======================
 839:./Library/stm32f4xx_sai.c ****   [..]
 840:./Library/stm32f4xx_sai.c ****   In Interrupt Mode, the SAI communication can be managed by 7 interrupt sources
 841:./Library/stm32f4xx_sai.c ****   and 7 pending bits: 
 842:./Library/stm32f4xx_sai.c ****   (+) Pending Bits:
 843:./Library/stm32f4xx_sai.c ****      (##) SAI_IT_FREQ : to indicate if there is a FIFO Request to write or to read.
 844:./Library/stm32f4xx_sai.c ****      (##) SAI_IT_MUTEDET : to indicate if a MUTE frame detected.
 845:./Library/stm32f4xx_sai.c ****      (##) SAI_IT_OVRUDR : to indicate if an Overrun or Underrun error occur.
 846:./Library/stm32f4xx_sai.c ****      (##) SAI_IT_AFSDET : to indicate if there is the detection of a audio frame 
 847:./Library/stm32f4xx_sai.c ****                           synchronisation (FS) earlier than expected.
 848:./Library/stm32f4xx_sai.c ****      (##) SAI_IT_LFSDET : to indicate if there is the detection of a audio frame 
 849:./Library/stm32f4xx_sai.c ****                           synchronisation (FS) later than expected.              
 850:./Library/stm32f4xx_sai.c ****      (##) SAI_IT_CNRDY : to indicate if  the codec is not ready to communicate during 
ARM GAS  /tmp/ccprSx8d.s 			page 30


 851:./Library/stm32f4xx_sai.c ****                          the reception of the TAG 0 (slot0) of the AC97 audio frame. 
 852:./Library/stm32f4xx_sai.c ****      (##) SAI_IT_WCKCFG: to indicate if wrong clock configuration in master mode 
 853:./Library/stm32f4xx_sai.c ****                          error occurs.
 854:./Library/stm32f4xx_sai.c **** 
 855:./Library/stm32f4xx_sai.c ****   (+) Interrupt Source:
 856:./Library/stm32f4xx_sai.c ****      (##) SAI_IT_FREQ : specifies the interrupt source for FIFO Request.
 857:./Library/stm32f4xx_sai.c ****      (##) SAI_IT_MUTEDET : specifies the interrupt source for MUTE frame detected.
 858:./Library/stm32f4xx_sai.c ****      (##) SAI_IT_OVRUDR : specifies the interrupt source for overrun or underrun error.
 859:./Library/stm32f4xx_sai.c ****      (##) SAI_IT_AFSDET : specifies the interrupt source for anticipated frame synchronization
 860:./Library/stm32f4xx_sai.c ****                           detection interrupt.
 861:./Library/stm32f4xx_sai.c ****      (##) SAI_IT_LFSDET : specifies the interrupt source for late frame synchronization
 862:./Library/stm32f4xx_sai.c ****                           detection interrupt.             
 863:./Library/stm32f4xx_sai.c ****      (##) SAI_IT_CNRDY : specifies the interrupt source for codec not ready interrupt
 864:./Library/stm32f4xx_sai.c ****      (##) SAI_IT_WCKCFG: specifies the interrupt source for wrong clock configuration
 865:./Library/stm32f4xx_sai.c ****                          interrupt.
 866:./Library/stm32f4xx_sai.c ****   [..]                     
 867:./Library/stm32f4xx_sai.c ****   In this Mode it is advised to use the following functions:
 868:./Library/stm32f4xx_sai.c ****      (+) void SAI_ITConfig(SAI_Block_TypeDef* SAI_Block_x, uint32_t SAI_IT, FunctionalState NewStat
 869:./Library/stm32f4xx_sai.c ****      (+) ITStatus SAI_GetITStatus(SAI_Block_TypeDef* SAI_Block_x, uint32_t SAI_IT);
 870:./Library/stm32f4xx_sai.c ****      (+) void SAI_ClearITPendingBit(SAI_Block_TypeDef* SAI_Block_x, uint32_t SAI_IT);
 871:./Library/stm32f4xx_sai.c **** 
 872:./Library/stm32f4xx_sai.c ****   *** DMA Mode ***
 873:./Library/stm32f4xx_sai.c ****   ================
 874:./Library/stm32f4xx_sai.c ****   [..]
 875:./Library/stm32f4xx_sai.c ****   In DMA Mode, each SAI audio block has an independent DMA interface in order to 
 876:./Library/stm32f4xx_sai.c ****   read or to write into the SAI_xDR register (to hit the internal FIFO). 
 877:./Library/stm32f4xx_sai.c ****   There is one DMA channel by audio block following basic DMA request/acknowledge 
 878:./Library/stm32f4xx_sai.c ****   protocol.
 879:./Library/stm32f4xx_sai.c ****   [..]
 880:./Library/stm32f4xx_sai.c ****   In this Mode it is advised to use the following function:
 881:./Library/stm32f4xx_sai.c ****     (+) void SAI_DMACmd(SAI_Block_TypeDef* SAI_Block_x, FunctionalState NewState);
 882:./Library/stm32f4xx_sai.c ****   [..]
 883:./Library/stm32f4xx_sai.c ****   This section provides also functions allowing to
 884:./Library/stm32f4xx_sai.c ****    (+) Check the SAI Block enable status
 885:./Library/stm32f4xx_sai.c ****    (+)Check the FIFO status 
 886:./Library/stm32f4xx_sai.c ****    
 887:./Library/stm32f4xx_sai.c ****   *** SAI Block Enable status ***
 888:./Library/stm32f4xx_sai.c ****   ===============================
 889:./Library/stm32f4xx_sai.c ****   [..]
 890:./Library/stm32f4xx_sai.c ****   After disabling a SAI Block, it is recommended to check (or wait until) the SAI Block 
 891:./Library/stm32f4xx_sai.c ****   is effectively disabled. If a Block is disabled while an audio frame transfer is ongoing
 892:./Library/stm32f4xx_sai.c ****   the current frame will be transferred and the block will be effectively disabled only at 
 893:./Library/stm32f4xx_sai.c ****   the end of audio frame. 
 894:./Library/stm32f4xx_sai.c ****   To monitor this state it is possible to use the following function:
 895:./Library/stm32f4xx_sai.c ****     (+) FunctionalState SAI_GetCmdStatus(SAI_Block_TypeDef* SAI_Block_x); 
 896:./Library/stm32f4xx_sai.c ****  
 897:./Library/stm32f4xx_sai.c ****   *** SAI Block FIFO status ***
 898:./Library/stm32f4xx_sai.c ****   =============================
 899:./Library/stm32f4xx_sai.c ****   [..]
 900:./Library/stm32f4xx_sai.c ****   It is possible to monitor the FIFO status when a transfer is ongoing using the following 
 901:./Library/stm32f4xx_sai.c ****   function:
 902:./Library/stm32f4xx_sai.c ****     (+) uint32_t SAI_GetFIFOStatus(SAI_Block_TypeDef* SAI_Block_x);
 903:./Library/stm32f4xx_sai.c ****     
 904:./Library/stm32f4xx_sai.c **** @endverbatim
 905:./Library/stm32f4xx_sai.c ****   * @{
 906:./Library/stm32f4xx_sai.c ****   */
 907:./Library/stm32f4xx_sai.c **** 
ARM GAS  /tmp/ccprSx8d.s 			page 31


 908:./Library/stm32f4xx_sai.c **** /**
 909:./Library/stm32f4xx_sai.c ****   * @brief  Enables or disables the specified SAI Block interrupts.
 910:./Library/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral. 
 911:./Library/stm32f4xx_sai.c ****   * @param  SAI_IT: specifies the SAI interrupt source to be enabled or disabled. 
 912:./Library/stm32f4xx_sai.c ****   *          This parameter can be one of the following values:
 913:./Library/stm32f4xx_sai.c ****   *            @arg SAI_IT_FREQ: FIFO Request interrupt mask
 914:./Library/stm32f4xx_sai.c ****   *            @arg SAI_IT_MUTEDET: MUTE detection interrupt mask
 915:./Library/stm32f4xx_sai.c ****   *            @arg SAI_IT_OVRUDR: overrun/underrun interrupt mask
 916:./Library/stm32f4xx_sai.c ****   *            @arg SAI_IT_AFSDET: anticipated frame synchronization detection 
 917:./Library/stm32f4xx_sai.c ****   *                                interrupt mask  
 918:./Library/stm32f4xx_sai.c ****   *            @arg SAI_IT_LFSDET: late frame synchronization detection interrupt 
 919:./Library/stm32f4xx_sai.c ****   *                                mask
 920:./Library/stm32f4xx_sai.c ****   *            @arg SAI_IT_CNRDY: codec not ready interrupt mask
 921:./Library/stm32f4xx_sai.c ****   *            @arg SAI_IT_WCKCFG: wrong clock configuration interrupt mask      
 922:./Library/stm32f4xx_sai.c ****   * @param  NewState: new state of the specified SAI interrupt.
 923:./Library/stm32f4xx_sai.c ****   *          This parameter can be: ENABLE or DISABLE.
 924:./Library/stm32f4xx_sai.c ****   * @retval None
 925:./Library/stm32f4xx_sai.c ****   */
 926:./Library/stm32f4xx_sai.c **** void SAI_ITConfig(SAI_Block_TypeDef* SAI_Block_x, uint32_t SAI_IT, FunctionalState NewState)
 927:./Library/stm32f4xx_sai.c **** { 
 831              		.loc 1 927 1 is_stmt 1 view -0
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 0
 834              		@ frame_needed = 0, uses_anonymous_args = 0
 835              		@ link register save eliminated.
 928:./Library/stm32f4xx_sai.c ****   /* Check the parameters */
 929:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 836              		.loc 1 929 3 view .LVU253
 930:./Library/stm32f4xx_sai.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 837              		.loc 1 930 3 view .LVU254
 931:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_CONFIG_IT(SAI_IT));
 838              		.loc 1 931 3 view .LVU255
 932:./Library/stm32f4xx_sai.c **** 
 933:./Library/stm32f4xx_sai.c ****   if (NewState != DISABLE)
 839              		.loc 1 933 3 view .LVU256
 840              		.loc 1 933 6 is_stmt 0 view .LVU257
 841 0000 1AB1     		cbz	r2, .L38
 934:./Library/stm32f4xx_sai.c ****   {
 935:./Library/stm32f4xx_sai.c ****     /* Enable the selected SAI Block interrupt */
 936:./Library/stm32f4xx_sai.c ****     SAI_Block_x->IMR |= SAI_IT;
 842              		.loc 1 936 5 is_stmt 1 view .LVU258
 843              		.loc 1 936 16 is_stmt 0 view .LVU259
 844 0002 0369     		ldr	r3, [r0, #16]
 845              		.loc 1 936 22 view .LVU260
 846 0004 0B43     		orrs	r3, r3, r1
 847 0006 0361     		str	r3, [r0, #16]
 848 0008 7047     		bx	lr
 849              	.L38:
 937:./Library/stm32f4xx_sai.c ****   }
 938:./Library/stm32f4xx_sai.c ****   else
 939:./Library/stm32f4xx_sai.c ****   {
 940:./Library/stm32f4xx_sai.c ****     /* Disable the selected SAI Block interrupt */
 941:./Library/stm32f4xx_sai.c ****     SAI_Block_x->IMR &= ~(SAI_IT);
 850              		.loc 1 941 5 is_stmt 1 view .LVU261
 851              		.loc 1 941 16 is_stmt 0 view .LVU262
 852 000a 0369     		ldr	r3, [r0, #16]
 853              		.loc 1 941 22 view .LVU263
ARM GAS  /tmp/ccprSx8d.s 			page 32


 854 000c 23EA0103 		bic	r3, r3, r1
 855 0010 0361     		str	r3, [r0, #16]
 942:./Library/stm32f4xx_sai.c ****   }
 943:./Library/stm32f4xx_sai.c **** }
 856              		.loc 1 943 1 view .LVU264
 857 0012 7047     		bx	lr
 858              		.cfi_endproc
 859              	.LFE141:
 861              		.section	.text.SAI_GetFlagStatus,"ax",%progbits
 862              		.align	1
 863              		.global	SAI_GetFlagStatus
 864              		.syntax unified
 865              		.thumb
 866              		.thumb_func
 868              	SAI_GetFlagStatus:
 869              	.LVL43:
 870              	.LFB142:
 944:./Library/stm32f4xx_sai.c **** 
 945:./Library/stm32f4xx_sai.c **** /**
 946:./Library/stm32f4xx_sai.c ****   * @brief  Checks whether the specified SAI block x flag is set or not.
 947:./Library/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral. 
 948:./Library/stm32f4xx_sai.c ****   * @param  SAI_FLAG: specifies the SAI block flag to check. 
 949:./Library/stm32f4xx_sai.c ****   *          This parameter can be one of the following values:
 950:./Library/stm32f4xx_sai.c ****   *            @arg SAI_FLAG_FREQ: FIFO Request flag.  
 951:./Library/stm32f4xx_sai.c ****   *            @arg SAI_FLAG_MUTEDET: MUTE detection flag.  
 952:./Library/stm32f4xx_sai.c ****   *            @arg SAI_FLAG_OVRUDR: overrun/underrun flag.
 953:./Library/stm32f4xx_sai.c ****   *            @arg SAI_FLAG_WCKCFG: wrong clock configuration flag.            
 954:./Library/stm32f4xx_sai.c ****   *            @arg SAI_FLAG_CNRDY: codec not ready flag. 
 955:./Library/stm32f4xx_sai.c ****   *            @arg SAI_FLAG_AFSDET: anticipated frame synchronization detection flag.
 956:./Library/stm32f4xx_sai.c ****   *            @arg SAI_FLAG_LFSDET: late frame synchronization detection flag.
 957:./Library/stm32f4xx_sai.c ****   * @retval The new state of SAI_FLAG (SET or RESET).
 958:./Library/stm32f4xx_sai.c ****   */
 959:./Library/stm32f4xx_sai.c **** FlagStatus SAI_GetFlagStatus(SAI_Block_TypeDef* SAI_Block_x, uint32_t SAI_FLAG)
 960:./Library/stm32f4xx_sai.c **** {
 871              		.loc 1 960 1 is_stmt 1 view -0
 872              		.cfi_startproc
 873              		@ args = 0, pretend = 0, frame = 0
 874              		@ frame_needed = 0, uses_anonymous_args = 0
 875              		@ link register save eliminated.
 961:./Library/stm32f4xx_sai.c ****   FlagStatus bitstatus = RESET;
 876              		.loc 1 961 3 view .LVU266
 962:./Library/stm32f4xx_sai.c ****   
 963:./Library/stm32f4xx_sai.c ****   /* Check the parameters */
 964:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 877              		.loc 1 964 3 view .LVU267
 965:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_GET_FLAG(SAI_FLAG));
 878              		.loc 1 965 3 view .LVU268
 966:./Library/stm32f4xx_sai.c ****   
 967:./Library/stm32f4xx_sai.c ****   /* Check the status of the specified SAI flag */
 968:./Library/stm32f4xx_sai.c ****   if ((SAI_Block_x->SR & SAI_FLAG) != (uint32_t)RESET)
 879              		.loc 1 968 3 view .LVU269
 880              		.loc 1 968 19 is_stmt 0 view .LVU270
 881 0000 4369     		ldr	r3, [r0, #20]
 882              		.loc 1 968 6 view .LVU271
 883 0002 0B42     		tst	r3, r1
 884 0004 01D0     		beq	.L42
 969:./Library/stm32f4xx_sai.c ****   {
ARM GAS  /tmp/ccprSx8d.s 			page 33


 970:./Library/stm32f4xx_sai.c ****     /* SAI_FLAG is set */
 971:./Library/stm32f4xx_sai.c ****     bitstatus = SET;
 885              		.loc 1 971 15 view .LVU272
 886 0006 0120     		movs	r0, #1
 887              	.LVL44:
 888              		.loc 1 971 15 view .LVU273
 889 0008 7047     		bx	lr
 890              	.LVL45:
 891              	.L42:
 972:./Library/stm32f4xx_sai.c ****   }
 973:./Library/stm32f4xx_sai.c ****   else
 974:./Library/stm32f4xx_sai.c ****   {
 975:./Library/stm32f4xx_sai.c ****     /* SAI_FLAG is reset */
 976:./Library/stm32f4xx_sai.c ****     bitstatus = RESET;
 892              		.loc 1 976 15 view .LVU274
 893 000a 0020     		movs	r0, #0
 894              	.LVL46:
 977:./Library/stm32f4xx_sai.c ****   }
 978:./Library/stm32f4xx_sai.c ****   /* Return the SAI_FLAG status */
 979:./Library/stm32f4xx_sai.c ****   return  bitstatus;
 895              		.loc 1 979 3 is_stmt 1 view .LVU275
 980:./Library/stm32f4xx_sai.c **** }
 896              		.loc 1 980 1 is_stmt 0 view .LVU276
 897 000c 7047     		bx	lr
 898              		.cfi_endproc
 899              	.LFE142:
 901              		.section	.text.SAI_ClearFlag,"ax",%progbits
 902              		.align	1
 903              		.global	SAI_ClearFlag
 904              		.syntax unified
 905              		.thumb
 906              		.thumb_func
 908              	SAI_ClearFlag:
 909              	.LVL47:
 910              	.LFB143:
 981:./Library/stm32f4xx_sai.c **** 
 982:./Library/stm32f4xx_sai.c **** /**
 983:./Library/stm32f4xx_sai.c ****   * @brief  Clears the specified SAI Block x flag.
 984:./Library/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral. 
 985:./Library/stm32f4xx_sai.c ****   * @param  SAI_FLAG: specifies the SAI block flag to check. 
 986:./Library/stm32f4xx_sai.c ****   *          This parameter can be one of the following values: 
 987:./Library/stm32f4xx_sai.c ****   *            @arg SAI_FLAG_MUTEDET: MUTE detection flag.  
 988:./Library/stm32f4xx_sai.c ****   *            @arg SAI_FLAG_OVRUDR: overrun/underrun flag.
 989:./Library/stm32f4xx_sai.c ****   *            @arg SAI_FLAG_WCKCFG: wrong clock configuration flag.            
 990:./Library/stm32f4xx_sai.c ****   *            @arg SAI_FLAG_CNRDY: codec not ready flag. 
 991:./Library/stm32f4xx_sai.c ****   *            @arg SAI_FLAG_AFSDET: anticipated frame synchronization detection flag.
 992:./Library/stm32f4xx_sai.c ****   *            @arg SAI_FLAG_LFSDET: late frame synchronization detection flag. 
 993:./Library/stm32f4xx_sai.c ****   *  
 994:./Library/stm32f4xx_sai.c ****   * @note    FREQ (FIFO Request) flag is cleared : 
 995:./Library/stm32f4xx_sai.c ****   *          - When the audio block is transmitter and the FIFO is full or the FIFO   
 996:./Library/stm32f4xx_sai.c ****   *            has one data (one buffer mode) depending the bit FTH in the
 997:./Library/stm32f4xx_sai.c ****   *            SAI_xCR2 register.
 998:./Library/stm32f4xx_sai.c ****   *          - When the audio block is receiver and the FIFO is not empty           
 999:./Library/stm32f4xx_sai.c ****   *  
1000:./Library/stm32f4xx_sai.c ****   * @retval None
1001:./Library/stm32f4xx_sai.c ****   */
1002:./Library/stm32f4xx_sai.c **** void SAI_ClearFlag(SAI_Block_TypeDef* SAI_Block_x, uint32_t SAI_FLAG)
ARM GAS  /tmp/ccprSx8d.s 			page 34


1003:./Library/stm32f4xx_sai.c **** {
 911              		.loc 1 1003 1 is_stmt 1 view -0
 912              		.cfi_startproc
 913              		@ args = 0, pretend = 0, frame = 0
 914              		@ frame_needed = 0, uses_anonymous_args = 0
 915              		@ link register save eliminated.
1004:./Library/stm32f4xx_sai.c ****   /* Check the parameters */
1005:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 916              		.loc 1 1005 3 view .LVU278
1006:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_CLEAR_FLAG(SAI_FLAG));
 917              		.loc 1 1006 3 view .LVU279
1007:./Library/stm32f4xx_sai.c ****     
1008:./Library/stm32f4xx_sai.c ****   /* Clear the selected SAI Block flag */
1009:./Library/stm32f4xx_sai.c ****   SAI_Block_x->CLRFR |= SAI_FLAG;
 918              		.loc 1 1009 3 view .LVU280
 919              		.loc 1 1009 14 is_stmt 0 view .LVU281
 920 0000 8369     		ldr	r3, [r0, #24]
 921              		.loc 1 1009 22 view .LVU282
 922 0002 0B43     		orrs	r3, r3, r1
 923 0004 8361     		str	r3, [r0, #24]
1010:./Library/stm32f4xx_sai.c **** }
 924              		.loc 1 1010 1 view .LVU283
 925 0006 7047     		bx	lr
 926              		.cfi_endproc
 927              	.LFE143:
 929              		.section	.text.SAI_GetITStatus,"ax",%progbits
 930              		.align	1
 931              		.global	SAI_GetITStatus
 932              		.syntax unified
 933              		.thumb
 934              		.thumb_func
 936              	SAI_GetITStatus:
 937              	.LVL48:
 938              	.LFB144:
1011:./Library/stm32f4xx_sai.c **** 
1012:./Library/stm32f4xx_sai.c **** /**
1013:./Library/stm32f4xx_sai.c ****   * @brief  Checks whether the specified SAI Block x interrupt has occurred or not.
1014:./Library/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral. 
1015:./Library/stm32f4xx_sai.c ****   * @param  SAI_IT: specifies the SAI interrupt source to be enabled or disabled. 
1016:./Library/stm32f4xx_sai.c ****   *          This parameter can be one of the following values:
1017:./Library/stm32f4xx_sai.c ****   *            @arg SAI_IT_FREQ: FIFO Request interrupt 
1018:./Library/stm32f4xx_sai.c ****   *            @arg SAI_IT_MUTEDET: MUTE detection interrupt 
1019:./Library/stm32f4xx_sai.c ****   *            @arg SAI_IT_OVRUDR: overrun/underrun interrupt 
1020:./Library/stm32f4xx_sai.c ****   *            @arg SAI_IT_AFSDET: anticipated frame synchronization detection interrupt           
1021:./Library/stm32f4xx_sai.c ****   *            @arg SAI_IT_LFSDET: late frame synchronization detection interrupt                  
1022:./Library/stm32f4xx_sai.c ****   *            @arg SAI_IT_CNRDY: codec not ready interrupt 
1023:./Library/stm32f4xx_sai.c ****   *            @arg SAI_IT_WCKCFG: wrong clock configuration interrupt 
1024:./Library/stm32f4xx_sai.c ****   *                
1025:./Library/stm32f4xx_sai.c ****   * @retval The new state of SAI_IT (SET or RESET).
1026:./Library/stm32f4xx_sai.c ****   */
1027:./Library/stm32f4xx_sai.c **** ITStatus SAI_GetITStatus(SAI_Block_TypeDef* SAI_Block_x, uint32_t SAI_IT)
1028:./Library/stm32f4xx_sai.c **** {
 939              		.loc 1 1028 1 is_stmt 1 view -0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 0
 942              		@ frame_needed = 0, uses_anonymous_args = 0
 943              		@ link register save eliminated.
ARM GAS  /tmp/ccprSx8d.s 			page 35


1029:./Library/stm32f4xx_sai.c ****   ITStatus bitstatus = RESET;
 944              		.loc 1 1029 3 view .LVU285
1030:./Library/stm32f4xx_sai.c ****   uint32_t  enablestatus = 0;
 945              		.loc 1 1030 3 view .LVU286
1031:./Library/stm32f4xx_sai.c **** 
1032:./Library/stm32f4xx_sai.c ****   /* Check the parameters */
1033:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 946              		.loc 1 1033 3 view .LVU287
1034:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_CONFIG_IT(SAI_IT));
 947              		.loc 1 1034 3 view .LVU288
1035:./Library/stm32f4xx_sai.c ****   
1036:./Library/stm32f4xx_sai.c ****   /* Get the SAI_IT enable bit status */
1037:./Library/stm32f4xx_sai.c ****   enablestatus = (SAI_Block_x->IMR & SAI_IT) ;
 948              		.loc 1 1037 3 view .LVU289
 949              		.loc 1 1037 30 is_stmt 0 view .LVU290
 950 0000 0369     		ldr	r3, [r0, #16]
 951              		.loc 1 1037 16 view .LVU291
 952 0002 0B40     		ands	r3, r3, r1
 953              	.LVL49:
1038:./Library/stm32f4xx_sai.c **** 
1039:./Library/stm32f4xx_sai.c ****   /* Check the status of the specified SAI interrupt */
1040:./Library/stm32f4xx_sai.c ****   if (((SAI_Block_x->SR & SAI_IT) != (uint32_t)RESET) && (enablestatus != (uint32_t)RESET))
 954              		.loc 1 1040 3 is_stmt 1 view .LVU292
 955              		.loc 1 1040 20 is_stmt 0 view .LVU293
 956 0004 4269     		ldr	r2, [r0, #20]
 957              		.loc 1 1040 6 view .LVU294
 958 0006 0A42     		tst	r2, r1
 959 0008 02D0     		beq	.L46
 960              		.loc 1 1040 55 discriminator 1 view .LVU295
 961 000a 1BB9     		cbnz	r3, .L47
1041:./Library/stm32f4xx_sai.c ****   {
1042:./Library/stm32f4xx_sai.c ****     /* SAI_IT is set */
1043:./Library/stm32f4xx_sai.c ****     bitstatus = SET;
1044:./Library/stm32f4xx_sai.c ****   }
1045:./Library/stm32f4xx_sai.c ****   else
1046:./Library/stm32f4xx_sai.c ****   {
1047:./Library/stm32f4xx_sai.c ****     /* SAI_IT is reset */
1048:./Library/stm32f4xx_sai.c ****     bitstatus = RESET;
 962              		.loc 1 1048 15 view .LVU296
 963 000c 0020     		movs	r0, #0
 964              	.LVL50:
 965              		.loc 1 1048 15 view .LVU297
 966 000e 7047     		bx	lr
 967              	.LVL51:
 968              	.L46:
 969              		.loc 1 1048 15 view .LVU298
 970 0010 0020     		movs	r0, #0
 971              	.LVL52:
 972              		.loc 1 1048 15 view .LVU299
 973 0012 7047     		bx	lr
 974              	.LVL53:
 975              	.L47:
1043:./Library/stm32f4xx_sai.c ****   }
 976              		.loc 1 1043 15 view .LVU300
 977 0014 0120     		movs	r0, #1
 978              	.LVL54:
1049:./Library/stm32f4xx_sai.c ****   }
ARM GAS  /tmp/ccprSx8d.s 			page 36


1050:./Library/stm32f4xx_sai.c ****   /* Return the SAI_IT status */
1051:./Library/stm32f4xx_sai.c ****   return bitstatus;
 979              		.loc 1 1051 3 is_stmt 1 view .LVU301
1052:./Library/stm32f4xx_sai.c **** }
 980              		.loc 1 1052 1 is_stmt 0 view .LVU302
 981 0016 7047     		bx	lr
 982              		.cfi_endproc
 983              	.LFE144:
 985              		.section	.text.SAI_ClearITPendingBit,"ax",%progbits
 986              		.align	1
 987              		.global	SAI_ClearITPendingBit
 988              		.syntax unified
 989              		.thumb
 990              		.thumb_func
 992              	SAI_ClearITPendingBit:
 993              	.LVL55:
 994              	.LFB145:
1053:./Library/stm32f4xx_sai.c **** 
1054:./Library/stm32f4xx_sai.c **** /**
1055:./Library/stm32f4xx_sai.c ****   * @brief  Clears the SAI Block x interrupt pending bit.
1056:./Library/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral. 
1057:./Library/stm32f4xx_sai.c ****   * @param  SAI_IT: specifies the SAI Block interrupt pending bit to clear. 
1058:./Library/stm32f4xx_sai.c ****   *          This parameter can be one of the following values:  
1059:./Library/stm32f4xx_sai.c ****   *            @arg SAI_IT_MUTEDET: MUTE detection interrupt.  
1060:./Library/stm32f4xx_sai.c ****   *            @arg SAI_IT_OVRUDR: overrun/underrun interrupt.
1061:./Library/stm32f4xx_sai.c ****   *            @arg SAI_IT_WCKCFG: wrong clock configuration interrupt.            
1062:./Library/stm32f4xx_sai.c ****   *            @arg SAI_IT_CNRDY: codec not ready interrupt. 
1063:./Library/stm32f4xx_sai.c ****   *            @arg SAI_IT_AFSDET: anticipated frame synchronization detection interrupt.
1064:./Library/stm32f4xx_sai.c ****   *            @arg SAI_IT_LFSDET: late frame synchronization detection interrupt. 
1065:./Library/stm32f4xx_sai.c ****   *  
1066:./Library/stm32f4xx_sai.c ****   * @note    FREQ (FIFO Request) flag is cleared : 
1067:./Library/stm32f4xx_sai.c ****   *          - When the audio block is transmitter and the FIFO is full or the FIFO   
1068:./Library/stm32f4xx_sai.c ****   *            has one data (one buffer mode) depending the bit FTH in the
1069:./Library/stm32f4xx_sai.c ****   *            SAI_xCR2 register.
1070:./Library/stm32f4xx_sai.c ****   *          - When the audio block is receiver and the FIFO is not empty  
1071:./Library/stm32f4xx_sai.c ****   *            
1072:./Library/stm32f4xx_sai.c ****   * @retval None
1073:./Library/stm32f4xx_sai.c ****   */
1074:./Library/stm32f4xx_sai.c **** void SAI_ClearITPendingBit(SAI_Block_TypeDef* SAI_Block_x, uint32_t SAI_IT)
1075:./Library/stm32f4xx_sai.c **** {
 995              		.loc 1 1075 1 is_stmt 1 view -0
 996              		.cfi_startproc
 997              		@ args = 0, pretend = 0, frame = 0
 998              		@ frame_needed = 0, uses_anonymous_args = 0
 999              		@ link register save eliminated.
1076:./Library/stm32f4xx_sai.c ****   /* Check the parameters */
1077:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 1000              		.loc 1 1077 3 view .LVU304
1078:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_CONFIG_IT(SAI_IT));
 1001              		.loc 1 1078 3 view .LVU305
1079:./Library/stm32f4xx_sai.c **** 
1080:./Library/stm32f4xx_sai.c ****   /* Clear the selected SAI Block x interrupt pending bit */
1081:./Library/stm32f4xx_sai.c ****   SAI_Block_x->CLRFR |= SAI_IT; 
 1002              		.loc 1 1081 3 view .LVU306
 1003              		.loc 1 1081 14 is_stmt 0 view .LVU307
 1004 0000 8369     		ldr	r3, [r0, #24]
 1005              		.loc 1 1081 22 view .LVU308
ARM GAS  /tmp/ccprSx8d.s 			page 37


 1006 0002 0B43     		orrs	r3, r3, r1
 1007 0004 8361     		str	r3, [r0, #24]
1082:./Library/stm32f4xx_sai.c **** }
 1008              		.loc 1 1082 1 view .LVU309
 1009 0006 7047     		bx	lr
 1010              		.cfi_endproc
 1011              	.LFE145:
 1013              		.section	.text.SAI_GetCmdStatus,"ax",%progbits
 1014              		.align	1
 1015              		.global	SAI_GetCmdStatus
 1016              		.syntax unified
 1017              		.thumb
 1018              		.thumb_func
 1020              	SAI_GetCmdStatus:
 1021              	.LVL56:
 1022              	.LFB146:
1083:./Library/stm32f4xx_sai.c **** 
1084:./Library/stm32f4xx_sai.c **** /**
1085:./Library/stm32f4xx_sai.c ****   * @brief  Returns the status of EN bit for the specified SAI Block x.
1086:./Library/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral.
1087:./Library/stm32f4xx_sai.c ****   *   
1088:./Library/stm32f4xx_sai.c ****   * @note    After disabling a SAI Block, it is recommended to check (or wait until) 
1089:./Library/stm32f4xx_sai.c ****   *          the SAI Block is effectively disabled. If a Block is disabled while
1090:./Library/stm32f4xx_sai.c ****   *          an audio frame transfer is ongoing, the current frame will be 
1091:./Library/stm32f4xx_sai.c ****   *          transferred and the block will be effectively disabled only at 
1092:./Library/stm32f4xx_sai.c ****   *          the end of audio frame.  
1093:./Library/stm32f4xx_sai.c ****   *      
1094:./Library/stm32f4xx_sai.c ****   * @retval Current state of the DMAy Streamx (ENABLE or DISABLE).
1095:./Library/stm32f4xx_sai.c ****   */
1096:./Library/stm32f4xx_sai.c **** FunctionalState SAI_GetCmdStatus(SAI_Block_TypeDef* SAI_Block_x)
1097:./Library/stm32f4xx_sai.c **** {
 1023              		.loc 1 1097 1 is_stmt 1 view -0
 1024              		.cfi_startproc
 1025              		@ args = 0, pretend = 0, frame = 0
 1026              		@ frame_needed = 0, uses_anonymous_args = 0
 1027              		@ link register save eliminated.
1098:./Library/stm32f4xx_sai.c ****   FunctionalState state = DISABLE;
 1028              		.loc 1 1098 3 view .LVU311
1099:./Library/stm32f4xx_sai.c **** 
1100:./Library/stm32f4xx_sai.c ****   /* Check the parameters */
1101:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 1029              		.loc 1 1101 3 view .LVU312
1102:./Library/stm32f4xx_sai.c ****   if ((SAI_Block_x->CR1 & (uint32_t)SAI_xCR1_SAIEN) != 0)
 1030              		.loc 1 1102 3 view .LVU313
 1031              		.loc 1 1102 19 is_stmt 0 view .LVU314
 1032 0000 0368     		ldr	r3, [r0]
 1033              		.loc 1 1102 6 view .LVU315
 1034 0002 13F4803F 		tst	r3, #65536
 1035 0006 01D0     		beq	.L51
1103:./Library/stm32f4xx_sai.c ****   {
1104:./Library/stm32f4xx_sai.c ****     /* The selected SAI Block x EN bit is set (audio frame transfer is ongoing) */
1105:./Library/stm32f4xx_sai.c ****     state = ENABLE;
 1036              		.loc 1 1105 11 view .LVU316
 1037 0008 0120     		movs	r0, #1
 1038              	.LVL57:
 1039              		.loc 1 1105 11 view .LVU317
 1040 000a 7047     		bx	lr
ARM GAS  /tmp/ccprSx8d.s 			page 38


 1041              	.LVL58:
 1042              	.L51:
1106:./Library/stm32f4xx_sai.c ****   }
1107:./Library/stm32f4xx_sai.c ****   else
1108:./Library/stm32f4xx_sai.c ****   {
1109:./Library/stm32f4xx_sai.c ****     /* The selected SAI Block x EN bit is cleared (SAI Block is disabled and 
1110:./Library/stm32f4xx_sai.c ****         all transfers are complete) */
1111:./Library/stm32f4xx_sai.c ****     state = DISABLE;
 1043              		.loc 1 1111 11 view .LVU318
 1044 000c 0020     		movs	r0, #0
 1045              	.LVL59:
1112:./Library/stm32f4xx_sai.c ****   }
1113:./Library/stm32f4xx_sai.c ****   return state;
 1046              		.loc 1 1113 3 is_stmt 1 view .LVU319
1114:./Library/stm32f4xx_sai.c **** }
 1047              		.loc 1 1114 1 is_stmt 0 view .LVU320
 1048 000e 7047     		bx	lr
 1049              		.cfi_endproc
 1050              	.LFE146:
 1052              		.section	.text.SAI_GetFIFOStatus,"ax",%progbits
 1053              		.align	1
 1054              		.global	SAI_GetFIFOStatus
 1055              		.syntax unified
 1056              		.thumb
 1057              		.thumb_func
 1059              	SAI_GetFIFOStatus:
 1060              	.LVL60:
 1061              	.LFB147:
1115:./Library/stm32f4xx_sai.c **** 
1116:./Library/stm32f4xx_sai.c **** /**
1117:./Library/stm32f4xx_sai.c ****   * @brief  Returns the current SAI Block x FIFO filled level.
1118:./Library/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral.
1119:./Library/stm32f4xx_sai.c ****   *   
1120:./Library/stm32f4xx_sai.c ****   * @retval The FIFO filling state.
1121:./Library/stm32f4xx_sai.c ****   *           - SAI_FIFOStatus_Empty: when FIFO is empty  
1122:./Library/stm32f4xx_sai.c ****   *           - SAI_FIFOStatus_Less1QuarterFull: when FIFO is less than 1 quarter-full 
1123:./Library/stm32f4xx_sai.c ****   *                                               and not empty.
1124:./Library/stm32f4xx_sai.c ****   *           - SAI_FIFOStatus_1QuarterFull: if more than 1 quarter-full.
1125:./Library/stm32f4xx_sai.c ****   *           - SAI_FIFOStatus_HalfFull: if more than 1 half-full.
1126:./Library/stm32f4xx_sai.c ****   *           - SAI_FIFOStatus_3QuartersFull: if more than 3 quarters-full.
1127:./Library/stm32f4xx_sai.c ****   *           - SAI_FIFOStatus_Full: when FIFO is full
1128:./Library/stm32f4xx_sai.c ****   */
1129:./Library/stm32f4xx_sai.c **** uint32_t SAI_GetFIFOStatus(SAI_Block_TypeDef* SAI_Block_x)
1130:./Library/stm32f4xx_sai.c **** {
 1062              		.loc 1 1130 1 is_stmt 1 view -0
 1063              		.cfi_startproc
 1064              		@ args = 0, pretend = 0, frame = 0
 1065              		@ frame_needed = 0, uses_anonymous_args = 0
 1066              		@ link register save eliminated.
1131:./Library/stm32f4xx_sai.c ****   uint32_t tmpreg = 0;
 1067              		.loc 1 1131 3 view .LVU322
1132:./Library/stm32f4xx_sai.c ****  
1133:./Library/stm32f4xx_sai.c ****   /* Check the parameters */
1134:./Library/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 1068              		.loc 1 1134 3 view .LVU323
1135:./Library/stm32f4xx_sai.c ****   
1136:./Library/stm32f4xx_sai.c ****   /* Get the FIFO level bits */
ARM GAS  /tmp/ccprSx8d.s 			page 39


1137:./Library/stm32f4xx_sai.c ****   tmpreg = (uint32_t)((SAI_Block_x->SR & SAI_xSR_FLVL));
 1069              		.loc 1 1137 3 view .LVU324
 1070              		.loc 1 1137 35 is_stmt 0 view .LVU325
 1071 0000 4069     		ldr	r0, [r0, #20]
 1072              	.LVL61:
1138:./Library/stm32f4xx_sai.c ****   
1139:./Library/stm32f4xx_sai.c ****   return tmpreg;
 1073              		.loc 1 1139 3 is_stmt 1 view .LVU326
1140:./Library/stm32f4xx_sai.c **** }
 1074              		.loc 1 1140 1 is_stmt 0 view .LVU327
 1075 0002 00F4E020 		and	r0, r0, #458752
 1076              	.LVL62:
 1077              		.loc 1 1140 1 view .LVU328
 1078 0006 7047     		bx	lr
 1079              		.cfi_endproc
 1080              	.LFE147:
 1082              		.text
 1083              	.Letext0:
 1084              		.file 2 "/usr/lib/gcc/arm-none-eabi/12.2.1/include/stdint.h"
 1085              		.file 3 "./CORE/stm32f4xx.h"
 1086              		.file 4 "./Library/stm32f4xx_sai.h"
 1087              		.file 5 "./Library/stm32f4xx_rcc.h"
ARM GAS  /tmp/ccprSx8d.s 			page 40


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_sai.c
     /tmp/ccprSx8d.s:21     .text.SAI_DeInit:0000000000000000 $t
     /tmp/ccprSx8d.s:27     .text.SAI_DeInit:0000000000000000 SAI_DeInit
     /tmp/ccprSx8d.s:70     .text.SAI_DeInit:0000000000000020 $d
     /tmp/ccprSx8d.s:75     .text.SAI_Init:0000000000000000 $t
     /tmp/ccprSx8d.s:81     .text.SAI_Init:0000000000000000 SAI_Init
     /tmp/ccprSx8d.s:179    .text.SAI_Init:0000000000000048 $d
     /tmp/ccprSx8d.s:184    .text.SAI_FrameInit:0000000000000000 $t
     /tmp/ccprSx8d.s:190    .text.SAI_FrameInit:0000000000000000 SAI_FrameInit
     /tmp/ccprSx8d.s:256    .text.SAI_FrameInit:000000000000002c $d
     /tmp/ccprSx8d.s:261    .text.SAI_SlotInit:0000000000000000 $t
     /tmp/ccprSx8d.s:267    .text.SAI_SlotInit:0000000000000000 SAI_SlotInit
     /tmp/ccprSx8d.s:332    .text.SAI_StructInit:0000000000000000 $t
     /tmp/ccprSx8d.s:338    .text.SAI_StructInit:0000000000000000 SAI_StructInit
     /tmp/ccprSx8d.s:387    .text.SAI_FrameStructInit:0000000000000000 $t
     /tmp/ccprSx8d.s:393    .text.SAI_FrameStructInit:0000000000000000 SAI_FrameStructInit
     /tmp/ccprSx8d.s:425    .text.SAI_SlotStructInit:0000000000000000 $t
     /tmp/ccprSx8d.s:431    .text.SAI_SlotStructInit:0000000000000000 SAI_SlotStructInit
     /tmp/ccprSx8d.s:459    .text.SAI_Cmd:0000000000000000 $t
     /tmp/ccprSx8d.s:465    .text.SAI_Cmd:0000000000000000 SAI_Cmd
     /tmp/ccprSx8d.s:498    .text.SAI_MonoModeConfig:0000000000000000 $t
     /tmp/ccprSx8d.s:504    .text.SAI_MonoModeConfig:0000000000000000 SAI_MonoModeConfig
     /tmp/ccprSx8d.s:532    .text.SAI_TRIStateConfig:0000000000000000 $t
     /tmp/ccprSx8d.s:538    .text.SAI_TRIStateConfig:0000000000000000 SAI_TRIStateConfig
     /tmp/ccprSx8d.s:566    .text.SAI_CompandingModeConfig:0000000000000000 $t
     /tmp/ccprSx8d.s:572    .text.SAI_CompandingModeConfig:0000000000000000 SAI_CompandingModeConfig
     /tmp/ccprSx8d.s:600    .text.SAI_MuteModeCmd:0000000000000000 $t
     /tmp/ccprSx8d.s:606    .text.SAI_MuteModeCmd:0000000000000000 SAI_MuteModeCmd
     /tmp/ccprSx8d.s:639    .text.SAI_MuteValueConfig:0000000000000000 $t
     /tmp/ccprSx8d.s:645    .text.SAI_MuteValueConfig:0000000000000000 SAI_MuteValueConfig
     /tmp/ccprSx8d.s:673    .text.SAI_MuteFrameCounterConfig:0000000000000000 $t
     /tmp/ccprSx8d.s:679    .text.SAI_MuteFrameCounterConfig:0000000000000000 SAI_MuteFrameCounterConfig
     /tmp/ccprSx8d.s:707    .text.SAI_FlushFIFO:0000000000000000 $t
     /tmp/ccprSx8d.s:713    .text.SAI_FlushFIFO:0000000000000000 SAI_FlushFIFO
     /tmp/ccprSx8d.s:734    .text.SAI_ReceiveData:0000000000000000 $t
     /tmp/ccprSx8d.s:740    .text.SAI_ReceiveData:0000000000000000 SAI_ReceiveData
     /tmp/ccprSx8d.s:759    .text.SAI_SendData:0000000000000000 $t
     /tmp/ccprSx8d.s:765    .text.SAI_SendData:0000000000000000 SAI_SendData
     /tmp/ccprSx8d.s:783    .text.SAI_DMACmd:0000000000000000 $t
     /tmp/ccprSx8d.s:789    .text.SAI_DMACmd:0000000000000000 SAI_DMACmd
     /tmp/ccprSx8d.s:822    .text.SAI_ITConfig:0000000000000000 $t
     /tmp/ccprSx8d.s:828    .text.SAI_ITConfig:0000000000000000 SAI_ITConfig
     /tmp/ccprSx8d.s:862    .text.SAI_GetFlagStatus:0000000000000000 $t
     /tmp/ccprSx8d.s:868    .text.SAI_GetFlagStatus:0000000000000000 SAI_GetFlagStatus
     /tmp/ccprSx8d.s:902    .text.SAI_ClearFlag:0000000000000000 $t
     /tmp/ccprSx8d.s:908    .text.SAI_ClearFlag:0000000000000000 SAI_ClearFlag
     /tmp/ccprSx8d.s:930    .text.SAI_GetITStatus:0000000000000000 $t
     /tmp/ccprSx8d.s:936    .text.SAI_GetITStatus:0000000000000000 SAI_GetITStatus
     /tmp/ccprSx8d.s:986    .text.SAI_ClearITPendingBit:0000000000000000 $t
     /tmp/ccprSx8d.s:992    .text.SAI_ClearITPendingBit:0000000000000000 SAI_ClearITPendingBit
     /tmp/ccprSx8d.s:1014   .text.SAI_GetCmdStatus:0000000000000000 $t
     /tmp/ccprSx8d.s:1020   .text.SAI_GetCmdStatus:0000000000000000 SAI_GetCmdStatus
     /tmp/ccprSx8d.s:1053   .text.SAI_GetFIFOStatus:0000000000000000 $t
     /tmp/ccprSx8d.s:1059   .text.SAI_GetFIFOStatus:0000000000000000 SAI_GetFIFOStatus

UNDEFINED SYMBOLS
ARM GAS  /tmp/ccprSx8d.s 			page 41


RCC_APB2PeriphResetCmd
