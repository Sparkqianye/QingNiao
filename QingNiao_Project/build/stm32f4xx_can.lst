ARM GAS  /tmp/ccd0Y8mk.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_can.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "./Library/stm32f4xx_can.c"
  20              		.section	.text.CheckITStatus,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	CheckITStatus:
  27              	.LVL0:
  28              	.LFB147:
   1:./Library/stm32f4xx_can.c **** /**
   2:./Library/stm32f4xx_can.c ****   ******************************************************************************
   3:./Library/stm32f4xx_can.c ****   * @file    stm32f4xx_can.c
   4:./Library/stm32f4xx_can.c ****   * @author  MCD Application Team
   5:./Library/stm32f4xx_can.c ****   * @version V1.8.1
   6:./Library/stm32f4xx_can.c ****   * @date    27-January-2022
   7:./Library/stm32f4xx_can.c ****   * @brief   This file provides firmware functions to manage the following 
   8:./Library/stm32f4xx_can.c ****   *          functionalities of the Controller area network (CAN) peripheral:
   9:./Library/stm32f4xx_can.c ****   *           + Initialization and Configuration 
  10:./Library/stm32f4xx_can.c ****   *           + CAN Frames Transmission
  11:./Library/stm32f4xx_can.c ****   *           + CAN Frames Reception
  12:./Library/stm32f4xx_can.c ****   *           + Operation modes switch
  13:./Library/stm32f4xx_can.c ****   *           + Error management
  14:./Library/stm32f4xx_can.c ****   *           + Interrupts and flags
  15:./Library/stm32f4xx_can.c ****   *
  16:./Library/stm32f4xx_can.c **** @verbatim
  17:./Library/stm32f4xx_can.c ****  ===============================================================================
  18:./Library/stm32f4xx_can.c ****                         ##### How to use this driver #####
  19:./Library/stm32f4xx_can.c ****  ===============================================================================
  20:./Library/stm32f4xx_can.c ****     [..]
  21:./Library/stm32f4xx_can.c ****       (#) Enable the CAN controller interface clock using 
  22:./Library/stm32f4xx_can.c ****           RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE); for CAN1 
  23:./Library/stm32f4xx_can.c ****           and RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN2, ENABLE); for CAN2
  24:./Library/stm32f4xx_can.c ****       -@- In case you are using CAN2 only, you have to enable the CAN1 clock.
  25:./Library/stm32f4xx_can.c ****        
  26:./Library/stm32f4xx_can.c ****       (#) CAN pins configuration
  27:./Library/stm32f4xx_can.c ****         (++) Enable the clock for the CAN GPIOs using the following function:
  28:./Library/stm32f4xx_can.c ****              RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);   
  29:./Library/stm32f4xx_can.c ****         (++) Connect the involved CAN pins to AF9 using the following function 
  30:./Library/stm32f4xx_can.c ****              GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_CANx); 
ARM GAS  /tmp/ccd0Y8mk.s 			page 2


  31:./Library/stm32f4xx_can.c ****         (++) Configure these CAN pins in alternate function mode by calling
  32:./Library/stm32f4xx_can.c ****              the function  GPIO_Init();
  33:./Library/stm32f4xx_can.c ****       
  34:./Library/stm32f4xx_can.c ****       (#) Initialize and configure the CAN using CAN_Init() and 
  35:./Library/stm32f4xx_can.c ****           CAN_FilterInit() functions.   
  36:./Library/stm32f4xx_can.c ****                  
  37:./Library/stm32f4xx_can.c ****       (#) Transmit the desired CAN frame using CAN_Transmit() function.
  38:./Library/stm32f4xx_can.c ****            
  39:./Library/stm32f4xx_can.c ****       (#) Check the transmission of a CAN frame using CAN_TransmitStatus()
  40:./Library/stm32f4xx_can.c ****           function.
  41:./Library/stm32f4xx_can.c ****                  
  42:./Library/stm32f4xx_can.c ****       (#) Cancel the transmission of a CAN frame using CAN_CancelTransmit()
  43:./Library/stm32f4xx_can.c ****           function.  
  44:./Library/stm32f4xx_can.c ****               
  45:./Library/stm32f4xx_can.c ****       (#) Receive a CAN frame using CAN_Receive() function.
  46:./Library/stm32f4xx_can.c ****            
  47:./Library/stm32f4xx_can.c ****       (#) Release the receive FIFOs using CAN_FIFORelease() function.
  48:./Library/stm32f4xx_can.c ****                  
  49:./Library/stm32f4xx_can.c ****       (#) Return the number of pending received frames using 
  50:./Library/stm32f4xx_can.c ****           CAN_MessagePending() function.            
  51:./Library/stm32f4xx_can.c ****                      
  52:./Library/stm32f4xx_can.c ****       (#) To control CAN events you can use one of the following two methods:
  53:./Library/stm32f4xx_can.c ****         (++) Check on CAN flags using the CAN_GetFlagStatus() function.  
  54:./Library/stm32f4xx_can.c ****         (++) Use CAN interrupts through the function CAN_ITConfig() at 
  55:./Library/stm32f4xx_can.c ****              initialization phase and CAN_GetITStatus() function into 
  56:./Library/stm32f4xx_can.c ****              interrupt routines to check if the event has occurred or not.
  57:./Library/stm32f4xx_can.c ****              After checking on a flag you should clear it using CAN_ClearFlag()
  58:./Library/stm32f4xx_can.c ****              function. And after checking on an interrupt event you should 
  59:./Library/stm32f4xx_can.c ****              clear it using CAN_ClearITPendingBit() function.            
  60:./Library/stm32f4xx_can.c **** 
  61:./Library/stm32f4xx_can.c **** @endverbatim
  62:./Library/stm32f4xx_can.c ****            
  63:./Library/stm32f4xx_can.c ****   ******************************************************************************
  64:./Library/stm32f4xx_can.c ****   * @attention
  65:./Library/stm32f4xx_can.c ****   *
  66:./Library/stm32f4xx_can.c ****   * Copyright (c) 2016 STMicroelectronics.
  67:./Library/stm32f4xx_can.c ****   * All rights reserved.
  68:./Library/stm32f4xx_can.c ****   *
  69:./Library/stm32f4xx_can.c ****   * This software is licensed under terms that can be found in the LICENSE file
  70:./Library/stm32f4xx_can.c ****   * in the root directory of this software component.
  71:./Library/stm32f4xx_can.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  72:./Library/stm32f4xx_can.c ****   *
  73:./Library/stm32f4xx_can.c ****   ******************************************************************************
  74:./Library/stm32f4xx_can.c ****   */
  75:./Library/stm32f4xx_can.c **** 
  76:./Library/stm32f4xx_can.c **** /* Includes ------------------------------------------------------------------*/
  77:./Library/stm32f4xx_can.c **** #include "stm32f4xx_can.h"
  78:./Library/stm32f4xx_can.c **** #include "stm32f4xx_rcc.h"
  79:./Library/stm32f4xx_can.c **** 
  80:./Library/stm32f4xx_can.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  81:./Library/stm32f4xx_can.c ****   * @{
  82:./Library/stm32f4xx_can.c ****   */
  83:./Library/stm32f4xx_can.c **** 
  84:./Library/stm32f4xx_can.c **** /** @defgroup CAN 
  85:./Library/stm32f4xx_can.c ****   * @brief CAN driver modules
  86:./Library/stm32f4xx_can.c ****   * @{
  87:./Library/stm32f4xx_can.c ****   */ 
ARM GAS  /tmp/ccd0Y8mk.s 			page 3


  88:./Library/stm32f4xx_can.c **** /* Private typedef -----------------------------------------------------------*/
  89:./Library/stm32f4xx_can.c **** /* Private define ------------------------------------------------------------*/
  90:./Library/stm32f4xx_can.c **** 
  91:./Library/stm32f4xx_can.c **** /* CAN Master Control Register bits */
  92:./Library/stm32f4xx_can.c **** #define MCR_DBF           ((uint32_t)0x00010000) /* software master reset */
  93:./Library/stm32f4xx_can.c **** 
  94:./Library/stm32f4xx_can.c **** /* CAN Mailbox Transmit Request */
  95:./Library/stm32f4xx_can.c **** #define TMIDxR_TXRQ       ((uint32_t)0x00000001) /* Transmit mailbox request */
  96:./Library/stm32f4xx_can.c **** 
  97:./Library/stm32f4xx_can.c **** /* CAN Filter Master Register bits */
  98:./Library/stm32f4xx_can.c **** #define FMR_FINIT         ((uint32_t)0x00000001) /* Filter init mode */
  99:./Library/stm32f4xx_can.c **** 
 100:./Library/stm32f4xx_can.c **** /* Time out for INAK bit */
 101:./Library/stm32f4xx_can.c **** #define INAK_TIMEOUT      ((uint32_t)0x0000FFFF)
 102:./Library/stm32f4xx_can.c **** /* Time out for SLAK bit */
 103:./Library/stm32f4xx_can.c **** #define SLAK_TIMEOUT      ((uint32_t)0x0000FFFF)
 104:./Library/stm32f4xx_can.c **** 
 105:./Library/stm32f4xx_can.c **** /* Flags in TSR register */
 106:./Library/stm32f4xx_can.c **** #define CAN_FLAGS_TSR     ((uint32_t)0x08000000) 
 107:./Library/stm32f4xx_can.c **** /* Flags in RF1R register */
 108:./Library/stm32f4xx_can.c **** #define CAN_FLAGS_RF1R    ((uint32_t)0x04000000) 
 109:./Library/stm32f4xx_can.c **** /* Flags in RF0R register */
 110:./Library/stm32f4xx_can.c **** #define CAN_FLAGS_RF0R    ((uint32_t)0x02000000) 
 111:./Library/stm32f4xx_can.c **** /* Flags in MSR register */
 112:./Library/stm32f4xx_can.c **** #define CAN_FLAGS_MSR     ((uint32_t)0x01000000) 
 113:./Library/stm32f4xx_can.c **** /* Flags in ESR register */
 114:./Library/stm32f4xx_can.c **** #define CAN_FLAGS_ESR     ((uint32_t)0x00F00000) 
 115:./Library/stm32f4xx_can.c **** 
 116:./Library/stm32f4xx_can.c **** /* Mailboxes definition */
 117:./Library/stm32f4xx_can.c **** #define CAN_TXMAILBOX_0   ((uint8_t)0x00)
 118:./Library/stm32f4xx_can.c **** #define CAN_TXMAILBOX_1   ((uint8_t)0x01)
 119:./Library/stm32f4xx_can.c **** #define CAN_TXMAILBOX_2   ((uint8_t)0x02) 
 120:./Library/stm32f4xx_can.c **** 
 121:./Library/stm32f4xx_can.c **** #define CAN_MODE_MASK     ((uint32_t) 0x00000003)
 122:./Library/stm32f4xx_can.c **** 
 123:./Library/stm32f4xx_can.c **** /* Private macro -------------------------------------------------------------*/
 124:./Library/stm32f4xx_can.c **** /* Private variables ---------------------------------------------------------*/
 125:./Library/stm32f4xx_can.c **** /* Private function prototypes -----------------------------------------------*/
 126:./Library/stm32f4xx_can.c **** /* Private functions ---------------------------------------------------------*/
 127:./Library/stm32f4xx_can.c **** static ITStatus CheckITStatus(uint32_t CAN_Reg, uint32_t It_Bit);
 128:./Library/stm32f4xx_can.c **** 
 129:./Library/stm32f4xx_can.c **** /** @defgroup CAN_Private_Functions
 130:./Library/stm32f4xx_can.c ****   * @{
 131:./Library/stm32f4xx_can.c ****   */
 132:./Library/stm32f4xx_can.c **** 
 133:./Library/stm32f4xx_can.c **** /** @defgroup CAN_Group1 Initialization and Configuration functions
 134:./Library/stm32f4xx_can.c ****  *  @brief    Initialization and Configuration functions 
 135:./Library/stm32f4xx_can.c ****  *
 136:./Library/stm32f4xx_can.c **** @verbatim    
 137:./Library/stm32f4xx_can.c ****  ===============================================================================
 138:./Library/stm32f4xx_can.c ****               ##### Initialization and Configuration functions #####
 139:./Library/stm32f4xx_can.c ****  ===============================================================================  
 140:./Library/stm32f4xx_can.c ****     [..] This section provides functions allowing to 
 141:./Library/stm32f4xx_can.c ****       (+) Initialize the CAN peripherals : Prescaler, operating mode, the maximum 
 142:./Library/stm32f4xx_can.c ****           number of time quanta to perform resynchronization, the number of time 
 143:./Library/stm32f4xx_can.c ****           quanta in Bit Segment 1 and 2 and many other modes. 
 144:./Library/stm32f4xx_can.c ****           Refer to  @ref CAN_InitTypeDef  for more details.
ARM GAS  /tmp/ccd0Y8mk.s 			page 4


 145:./Library/stm32f4xx_can.c ****       (+) Configures the CAN reception filter.                                      
 146:./Library/stm32f4xx_can.c ****       (+) Select the start bank filter for slave CAN.
 147:./Library/stm32f4xx_can.c ****       (+) Enables or disables the Debug Freeze mode for CAN
 148:./Library/stm32f4xx_can.c ****       (+)Enables or disables the CAN Time Trigger Operation communication mode
 149:./Library/stm32f4xx_can.c ****    
 150:./Library/stm32f4xx_can.c **** @endverbatim
 151:./Library/stm32f4xx_can.c ****   * @{
 152:./Library/stm32f4xx_can.c ****   */
 153:./Library/stm32f4xx_can.c ****   
 154:./Library/stm32f4xx_can.c **** /**
 155:./Library/stm32f4xx_can.c ****   * @brief  Deinitializes the CAN peripheral registers to their default reset values.
 156:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
 157:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
 158:./Library/stm32f4xx_can.c ****   * @retval None.
 159:./Library/stm32f4xx_can.c ****   */
 160:./Library/stm32f4xx_can.c **** void CAN_DeInit(CAN_TypeDef* CANx)
 161:./Library/stm32f4xx_can.c **** {
 162:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 163:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 164:./Library/stm32f4xx_can.c ****  
 165:./Library/stm32f4xx_can.c ****   if (CANx == CAN1)
 166:./Library/stm32f4xx_can.c ****   {
 167:./Library/stm32f4xx_can.c ****     /* Enable CAN1 reset state */
 168:./Library/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, ENABLE);
 169:./Library/stm32f4xx_can.c ****     /* Release CAN1 from reset state */
 170:./Library/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, DISABLE);
 171:./Library/stm32f4xx_can.c ****   }
 172:./Library/stm32f4xx_can.c **** #if defined(STM32F413_423xx)
 173:./Library/stm32f4xx_can.c ****   else if(CANx == CAN2)
 174:./Library/stm32f4xx_can.c ****   {  
 175:./Library/stm32f4xx_can.c ****     /* Enable CAN2 reset state */
 176:./Library/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, ENABLE);
 177:./Library/stm32f4xx_can.c ****     /* Release CAN2 from reset state */
 178:./Library/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, DISABLE);
 179:./Library/stm32f4xx_can.c ****   }
 180:./Library/stm32f4xx_can.c ****   
 181:./Library/stm32f4xx_can.c ****   else /* CAN3 available only for STM32F413_423xx */
 182:./Library/stm32f4xx_can.c ****   {
 183:./Library/stm32f4xx_can.c ****     /* Enable CAN3 reset state */
 184:./Library/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN3, ENABLE);
 185:./Library/stm32f4xx_can.c ****     /* Release CAN3 from reset state */
 186:./Library/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN3, DISABLE); 
 187:./Library/stm32f4xx_can.c ****   }
 188:./Library/stm32f4xx_can.c **** #else
 189:./Library/stm32f4xx_can.c ****   else
 190:./Library/stm32f4xx_can.c ****   {
 191:./Library/stm32f4xx_can.c ****     /* Enable CAN2 reset state */
 192:./Library/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, ENABLE);
 193:./Library/stm32f4xx_can.c ****     /* Release CAN2 from reset state */
 194:./Library/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, DISABLE);
 195:./Library/stm32f4xx_can.c ****   }
 196:./Library/stm32f4xx_can.c **** #endif /* STM32F413_423xx */
 197:./Library/stm32f4xx_can.c **** }
 198:./Library/stm32f4xx_can.c **** 
 199:./Library/stm32f4xx_can.c **** /**
 200:./Library/stm32f4xx_can.c ****   * @brief  Initializes the CAN peripheral according to the specified
 201:./Library/stm32f4xx_can.c ****   *         parameters in the CAN_InitStruct.
ARM GAS  /tmp/ccd0Y8mk.s 			page 5


 202:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
 203:./Library/stm32f4xx_can.c ****   * @param  CAN_InitStruct: pointer to a CAN_InitTypeDef structure that contains
 204:./Library/stm32f4xx_can.c ****   *         the configuration information for the CAN peripheral.
 205:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
 206:./Library/stm32f4xx_can.c ****   * @retval Constant indicates initialization succeed which will be 
 207:./Library/stm32f4xx_can.c ****   *         CAN_InitStatus_Failed or CAN_InitStatus_Success.
 208:./Library/stm32f4xx_can.c ****   */
 209:./Library/stm32f4xx_can.c **** uint8_t CAN_Init(CAN_TypeDef* CANx, CAN_InitTypeDef* CAN_InitStruct)
 210:./Library/stm32f4xx_can.c **** {
 211:./Library/stm32f4xx_can.c ****   uint8_t InitStatus = CAN_InitStatus_Failed;
 212:./Library/stm32f4xx_can.c ****   uint32_t wait_ack = 0x00000000;
 213:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 214:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 215:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TTCM));
 216:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_ABOM));
 217:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_AWUM));
 218:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_NART));
 219:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_RFLM));
 220:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TXFP));
 221:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_MODE(CAN_InitStruct->CAN_Mode));
 222:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_SJW(CAN_InitStruct->CAN_SJW));
 223:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_BS1(CAN_InitStruct->CAN_BS1));
 224:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_BS2(CAN_InitStruct->CAN_BS2));
 225:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_PRESCALER(CAN_InitStruct->CAN_Prescaler));
 226:./Library/stm32f4xx_can.c **** 
 227:./Library/stm32f4xx_can.c ****   /* Exit from sleep mode */
 228:./Library/stm32f4xx_can.c ****   CANx->MCR &= (~(uint32_t)CAN_MCR_SLEEP);
 229:./Library/stm32f4xx_can.c **** 
 230:./Library/stm32f4xx_can.c ****   /* Request initialisation */
 231:./Library/stm32f4xx_can.c ****   CANx->MCR |= CAN_MCR_INRQ ;
 232:./Library/stm32f4xx_can.c **** 
 233:./Library/stm32f4xx_can.c ****   /* Wait the acknowledge */
 234:./Library/stm32f4xx_can.c ****   while (((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 235:./Library/stm32f4xx_can.c ****   {
 236:./Library/stm32f4xx_can.c ****     wait_ack++;
 237:./Library/stm32f4xx_can.c ****   }
 238:./Library/stm32f4xx_can.c **** 
 239:./Library/stm32f4xx_can.c ****   /* Check acknowledge */
 240:./Library/stm32f4xx_can.c ****   if ((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK)
 241:./Library/stm32f4xx_can.c ****   {
 242:./Library/stm32f4xx_can.c ****     InitStatus = CAN_InitStatus_Failed;
 243:./Library/stm32f4xx_can.c ****   }
 244:./Library/stm32f4xx_can.c ****   else 
 245:./Library/stm32f4xx_can.c ****   {
 246:./Library/stm32f4xx_can.c ****     /* Set the time triggered communication mode */
 247:./Library/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_TTCM == ENABLE)
 248:./Library/stm32f4xx_can.c ****     {
 249:./Library/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_TTCM;
 250:./Library/stm32f4xx_can.c ****     }
 251:./Library/stm32f4xx_can.c ****     else
 252:./Library/stm32f4xx_can.c ****     {
 253:./Library/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_TTCM;
 254:./Library/stm32f4xx_can.c ****     }
 255:./Library/stm32f4xx_can.c **** 
 256:./Library/stm32f4xx_can.c ****     /* Set the automatic bus-off management */
 257:./Library/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_ABOM == ENABLE)
 258:./Library/stm32f4xx_can.c ****     {
ARM GAS  /tmp/ccd0Y8mk.s 			page 6


 259:./Library/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_ABOM;
 260:./Library/stm32f4xx_can.c ****     }
 261:./Library/stm32f4xx_can.c ****     else
 262:./Library/stm32f4xx_can.c ****     {
 263:./Library/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_ABOM;
 264:./Library/stm32f4xx_can.c ****     }
 265:./Library/stm32f4xx_can.c **** 
 266:./Library/stm32f4xx_can.c ****     /* Set the automatic wake-up mode */
 267:./Library/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_AWUM == ENABLE)
 268:./Library/stm32f4xx_can.c ****     {
 269:./Library/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_AWUM;
 270:./Library/stm32f4xx_can.c ****     }
 271:./Library/stm32f4xx_can.c ****     else
 272:./Library/stm32f4xx_can.c ****     {
 273:./Library/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_AWUM;
 274:./Library/stm32f4xx_can.c ****     }
 275:./Library/stm32f4xx_can.c **** 
 276:./Library/stm32f4xx_can.c ****     /* Set the no automatic retransmission */
 277:./Library/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_NART == ENABLE)
 278:./Library/stm32f4xx_can.c ****     {
 279:./Library/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_NART;
 280:./Library/stm32f4xx_can.c ****     }
 281:./Library/stm32f4xx_can.c ****     else
 282:./Library/stm32f4xx_can.c ****     {
 283:./Library/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_NART;
 284:./Library/stm32f4xx_can.c ****     }
 285:./Library/stm32f4xx_can.c **** 
 286:./Library/stm32f4xx_can.c ****     /* Set the receive FIFO locked mode */
 287:./Library/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_RFLM == ENABLE)
 288:./Library/stm32f4xx_can.c ****     {
 289:./Library/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_RFLM;
 290:./Library/stm32f4xx_can.c ****     }
 291:./Library/stm32f4xx_can.c ****     else
 292:./Library/stm32f4xx_can.c ****     {
 293:./Library/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_RFLM;
 294:./Library/stm32f4xx_can.c ****     }
 295:./Library/stm32f4xx_can.c **** 
 296:./Library/stm32f4xx_can.c ****     /* Set the transmit FIFO priority */
 297:./Library/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_TXFP == ENABLE)
 298:./Library/stm32f4xx_can.c ****     {
 299:./Library/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_TXFP;
 300:./Library/stm32f4xx_can.c ****     }
 301:./Library/stm32f4xx_can.c ****     else
 302:./Library/stm32f4xx_can.c ****     {
 303:./Library/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_TXFP;
 304:./Library/stm32f4xx_can.c ****     }
 305:./Library/stm32f4xx_can.c **** 
 306:./Library/stm32f4xx_can.c ****     /* Set the bit timing register */
 307:./Library/stm32f4xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 308:./Library/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 309:./Library/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 310:./Library/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
 311:./Library/stm32f4xx_can.c ****                ((uint32_t)CAN_InitStruct->CAN_Prescaler - 1);
 312:./Library/stm32f4xx_can.c **** 
 313:./Library/stm32f4xx_can.c ****     /* Request leave initialisation */
 314:./Library/stm32f4xx_can.c ****     CANx->MCR &= ~(uint32_t)CAN_MCR_INRQ;
 315:./Library/stm32f4xx_can.c **** 
ARM GAS  /tmp/ccd0Y8mk.s 			page 7


 316:./Library/stm32f4xx_can.c ****    /* Wait the acknowledge */
 317:./Library/stm32f4xx_can.c ****    wait_ack = 0;
 318:./Library/stm32f4xx_can.c **** 
 319:./Library/stm32f4xx_can.c ****    while (((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 320:./Library/stm32f4xx_can.c ****    {
 321:./Library/stm32f4xx_can.c ****      wait_ack++;
 322:./Library/stm32f4xx_can.c ****    }
 323:./Library/stm32f4xx_can.c **** 
 324:./Library/stm32f4xx_can.c ****     /* ...and check acknowledged */
 325:./Library/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK)
 326:./Library/stm32f4xx_can.c ****     {
 327:./Library/stm32f4xx_can.c ****       InitStatus = CAN_InitStatus_Failed;
 328:./Library/stm32f4xx_can.c ****     }
 329:./Library/stm32f4xx_can.c ****     else
 330:./Library/stm32f4xx_can.c ****     {
 331:./Library/stm32f4xx_can.c ****       InitStatus = CAN_InitStatus_Success ;
 332:./Library/stm32f4xx_can.c ****     }
 333:./Library/stm32f4xx_can.c ****   }
 334:./Library/stm32f4xx_can.c **** 
 335:./Library/stm32f4xx_can.c ****   /* At this step, return the status of initialization */
 336:./Library/stm32f4xx_can.c ****   return InitStatus;
 337:./Library/stm32f4xx_can.c **** }
 338:./Library/stm32f4xx_can.c **** 
 339:./Library/stm32f4xx_can.c **** #if defined(STM32F413_423xx)
 340:./Library/stm32f4xx_can.c **** /**
 341:./Library/stm32f4xx_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 342:./Library/stm32f4xx_can.c ****   *         parameters in the CAN_FilterInitStruct.
 343:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 3 to select the CAN peripheral.
 344:./Library/stm32f4xx_can.c ****   * @param  CAN_FilterInitStruct: pointer to a CAN_FilterInitTypeDef structure that
 345:./Library/stm32f4xx_can.c ****   *         contains the configuration information.
 346:./Library/stm32f4xx_can.c ****   * @retval None
 347:./Library/stm32f4xx_can.c ****   */
 348:./Library/stm32f4xx_can.c **** void CAN_FilterInit(CAN_TypeDef* CANx, CAN_FilterInitTypeDef* CAN_FilterInitStruct)
 349:./Library/stm32f4xx_can.c **** {
 350:./Library/stm32f4xx_can.c ****   uint32_t filter_number_bit_pos = 0;
 351:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 352:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_NUMBER(CAN_FilterInitStruct->CAN_FilterNumber));
 353:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_MODE(CAN_FilterInitStruct->CAN_FilterMode));
 354:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_SCALE(CAN_FilterInitStruct->CAN_FilterScale));
 355:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_FIFO(CAN_FilterInitStruct->CAN_FilterFIFOAssignment));
 356:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_FilterInitStruct->CAN_FilterActivation));
 357:./Library/stm32f4xx_can.c ****   
 358:./Library/stm32f4xx_can.c ****   filter_number_bit_pos = ((uint32_t)1) << CAN_FilterInitStruct->CAN_FilterNumber;
 359:./Library/stm32f4xx_can.c **** 
 360:./Library/stm32f4xx_can.c ****   /* Initialisation mode for the filter */
 361:./Library/stm32f4xx_can.c ****   CANx->FMR |= FMR_FINIT;
 362:./Library/stm32f4xx_can.c **** 
 363:./Library/stm32f4xx_can.c ****   /* Filter Deactivation */
 364:./Library/stm32f4xx_can.c ****   CANx->FA1R &= ~(uint32_t)filter_number_bit_pos;
 365:./Library/stm32f4xx_can.c **** 
 366:./Library/stm32f4xx_can.c ****   /* Filter Scale */
 367:./Library/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_16bit)
 368:./Library/stm32f4xx_can.c ****   {
 369:./Library/stm32f4xx_can.c ****     /* 16-bit scale for the filter */
 370:./Library/stm32f4xx_can.c ****     CANx->FS1R &= ~(uint32_t)filter_number_bit_pos;
 371:./Library/stm32f4xx_can.c **** 
 372:./Library/stm32f4xx_can.c ****     /* First 16-bit identifier and First 16-bit mask */
ARM GAS  /tmp/ccd0Y8mk.s 			page 8


 373:./Library/stm32f4xx_can.c ****     /* Or First 16-bit identifier and Second 16-bit identifier */
 374:./Library/stm32f4xx_can.c ****     CANx->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 375:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 376:./Library/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 377:./Library/stm32f4xx_can.c **** 
 378:./Library/stm32f4xx_can.c ****     /* Second 16-bit identifier and Second 16-bit mask */
 379:./Library/stm32f4xx_can.c ****     /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 380:./Library/stm32f4xx_can.c ****     CANx->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 381:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 382:./Library/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh);
 383:./Library/stm32f4xx_can.c ****   }
 384:./Library/stm32f4xx_can.c **** 
 385:./Library/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_32bit)
 386:./Library/stm32f4xx_can.c ****   {
 387:./Library/stm32f4xx_can.c ****     /* 32-bit scale for the filter */
 388:./Library/stm32f4xx_can.c ****     CANx->FS1R |= filter_number_bit_pos;
 389:./Library/stm32f4xx_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 390:./Library/stm32f4xx_can.c ****     CANx->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 391:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 392:./Library/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 393:./Library/stm32f4xx_can.c ****     /* 32-bit mask or Second 32-bit identifier */
 394:./Library/stm32f4xx_can.c ****     CANx->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 395:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 396:./Library/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow);
 397:./Library/stm32f4xx_can.c ****   }
 398:./Library/stm32f4xx_can.c **** 
 399:./Library/stm32f4xx_can.c ****   /* Filter Mode */
 400:./Library/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdMask)
 401:./Library/stm32f4xx_can.c ****   {
 402:./Library/stm32f4xx_can.c ****     /*Id/Mask mode for the filter*/
 403:./Library/stm32f4xx_can.c ****     CANx->FM1R &= ~(uint32_t)filter_number_bit_pos;
 404:./Library/stm32f4xx_can.c ****   }
 405:./Library/stm32f4xx_can.c ****   else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 406:./Library/stm32f4xx_can.c ****   {
 407:./Library/stm32f4xx_can.c ****     /*Identifier list mode for the filter*/
 408:./Library/stm32f4xx_can.c ****     CANx->FM1R |= (uint32_t)filter_number_bit_pos;
 409:./Library/stm32f4xx_can.c ****   }
 410:./Library/stm32f4xx_can.c **** 
 411:./Library/stm32f4xx_can.c ****   /* Filter FIFO assignment */
 412:./Library/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO0)
 413:./Library/stm32f4xx_can.c ****   {
 414:./Library/stm32f4xx_can.c ****     /* FIFO 0 assignation for the filter */
 415:./Library/stm32f4xx_can.c ****     CANx->FFA1R &= ~(uint32_t)filter_number_bit_pos;
 416:./Library/stm32f4xx_can.c ****   }
 417:./Library/stm32f4xx_can.c **** 
 418:./Library/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO1)
 419:./Library/stm32f4xx_can.c ****   {
 420:./Library/stm32f4xx_can.c ****     /* FIFO 1 assignation for the filter */
 421:./Library/stm32f4xx_can.c ****     CANx->FFA1R |= (uint32_t)filter_number_bit_pos;
 422:./Library/stm32f4xx_can.c ****   }
 423:./Library/stm32f4xx_can.c ****   
 424:./Library/stm32f4xx_can.c ****   /* Filter activation */
 425:./Library/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterActivation == ENABLE)
 426:./Library/stm32f4xx_can.c ****   {
 427:./Library/stm32f4xx_can.c ****     CANx->FA1R |= filter_number_bit_pos;
 428:./Library/stm32f4xx_can.c ****   }
 429:./Library/stm32f4xx_can.c **** 
ARM GAS  /tmp/ccd0Y8mk.s 			page 9


 430:./Library/stm32f4xx_can.c ****   /* Leave the initialisation mode for the filter */
 431:./Library/stm32f4xx_can.c ****   CANx->FMR &= ~FMR_FINIT;
 432:./Library/stm32f4xx_can.c **** }
 433:./Library/stm32f4xx_can.c **** #else
 434:./Library/stm32f4xx_can.c **** /**
 435:./Library/stm32f4xx_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 436:./Library/stm32f4xx_can.c ****   *         parameters in the CAN_FilterInitStruct.
 437:./Library/stm32f4xx_can.c ****   * @param  CAN_FilterInitStruct: pointer to a CAN_FilterInitTypeDef structure that
 438:./Library/stm32f4xx_can.c ****   *         contains the configuration information.
 439:./Library/stm32f4xx_can.c ****   * @retval None
 440:./Library/stm32f4xx_can.c ****   */
 441:./Library/stm32f4xx_can.c **** void CAN_FilterInit(CAN_FilterInitTypeDef* CAN_FilterInitStruct)
 442:./Library/stm32f4xx_can.c **** {
 443:./Library/stm32f4xx_can.c ****   uint32_t filter_number_bit_pos = 0;
 444:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 445:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_NUMBER(CAN_FilterInitStruct->CAN_FilterNumber));
 446:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_MODE(CAN_FilterInitStruct->CAN_FilterMode));
 447:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_SCALE(CAN_FilterInitStruct->CAN_FilterScale));
 448:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_FIFO(CAN_FilterInitStruct->CAN_FilterFIFOAssignment));
 449:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_FilterInitStruct->CAN_FilterActivation));
 450:./Library/stm32f4xx_can.c **** 
 451:./Library/stm32f4xx_can.c ****   filter_number_bit_pos = ((uint32_t)1) << CAN_FilterInitStruct->CAN_FilterNumber;
 452:./Library/stm32f4xx_can.c **** 
 453:./Library/stm32f4xx_can.c ****   /* Initialisation mode for the filter */
 454:./Library/stm32f4xx_can.c ****   CAN1->FMR |= FMR_FINIT;
 455:./Library/stm32f4xx_can.c **** 
 456:./Library/stm32f4xx_can.c ****   /* Filter Deactivation */
 457:./Library/stm32f4xx_can.c ****   CAN1->FA1R &= ~(uint32_t)filter_number_bit_pos;
 458:./Library/stm32f4xx_can.c **** 
 459:./Library/stm32f4xx_can.c ****   /* Filter Scale */
 460:./Library/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_16bit)
 461:./Library/stm32f4xx_can.c ****   {
 462:./Library/stm32f4xx_can.c ****     /* 16-bit scale for the filter */
 463:./Library/stm32f4xx_can.c ****     CAN1->FS1R &= ~(uint32_t)filter_number_bit_pos;
 464:./Library/stm32f4xx_can.c **** 
 465:./Library/stm32f4xx_can.c ****     /* First 16-bit identifier and First 16-bit mask */
 466:./Library/stm32f4xx_can.c ****     /* Or First 16-bit identifier and Second 16-bit identifier */
 467:./Library/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 468:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 469:./Library/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 470:./Library/stm32f4xx_can.c **** 
 471:./Library/stm32f4xx_can.c ****     /* Second 16-bit identifier and Second 16-bit mask */
 472:./Library/stm32f4xx_can.c ****     /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 473:./Library/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 474:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 475:./Library/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh);
 476:./Library/stm32f4xx_can.c ****   }
 477:./Library/stm32f4xx_can.c **** 
 478:./Library/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_32bit)
 479:./Library/stm32f4xx_can.c ****   {
 480:./Library/stm32f4xx_can.c ****     /* 32-bit scale for the filter */
 481:./Library/stm32f4xx_can.c ****     CAN1->FS1R |= filter_number_bit_pos;
 482:./Library/stm32f4xx_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 483:./Library/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 484:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 485:./Library/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 486:./Library/stm32f4xx_can.c ****     /* 32-bit mask or Second 32-bit identifier */
ARM GAS  /tmp/ccd0Y8mk.s 			page 10


 487:./Library/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 488:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 489:./Library/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow);
 490:./Library/stm32f4xx_can.c ****   }
 491:./Library/stm32f4xx_can.c **** 
 492:./Library/stm32f4xx_can.c ****   /* Filter Mode */
 493:./Library/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdMask)
 494:./Library/stm32f4xx_can.c ****   {
 495:./Library/stm32f4xx_can.c ****     /*Id/Mask mode for the filter*/
 496:./Library/stm32f4xx_can.c ****     CAN1->FM1R &= ~(uint32_t)filter_number_bit_pos;
 497:./Library/stm32f4xx_can.c ****   }
 498:./Library/stm32f4xx_can.c ****   else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 499:./Library/stm32f4xx_can.c ****   {
 500:./Library/stm32f4xx_can.c ****     /*Identifier list mode for the filter*/
 501:./Library/stm32f4xx_can.c ****     CAN1->FM1R |= (uint32_t)filter_number_bit_pos;
 502:./Library/stm32f4xx_can.c ****   }
 503:./Library/stm32f4xx_can.c **** 
 504:./Library/stm32f4xx_can.c ****   /* Filter FIFO assignment */
 505:./Library/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO0)
 506:./Library/stm32f4xx_can.c ****   {
 507:./Library/stm32f4xx_can.c ****     /* FIFO 0 assignation for the filter */
 508:./Library/stm32f4xx_can.c ****     CAN1->FFA1R &= ~(uint32_t)filter_number_bit_pos;
 509:./Library/stm32f4xx_can.c ****   }
 510:./Library/stm32f4xx_can.c **** 
 511:./Library/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO1)
 512:./Library/stm32f4xx_can.c ****   {
 513:./Library/stm32f4xx_can.c ****     /* FIFO 1 assignation for the filter */
 514:./Library/stm32f4xx_can.c ****     CAN1->FFA1R |= (uint32_t)filter_number_bit_pos;
 515:./Library/stm32f4xx_can.c ****   }
 516:./Library/stm32f4xx_can.c ****   
 517:./Library/stm32f4xx_can.c ****   /* Filter activation */
 518:./Library/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterActivation == ENABLE)
 519:./Library/stm32f4xx_can.c ****   {
 520:./Library/stm32f4xx_can.c ****     CAN1->FA1R |= filter_number_bit_pos;
 521:./Library/stm32f4xx_can.c ****   }
 522:./Library/stm32f4xx_can.c **** 
 523:./Library/stm32f4xx_can.c ****   /* Leave the initialisation mode for the filter */
 524:./Library/stm32f4xx_can.c ****   CAN1->FMR &= ~FMR_FINIT;
 525:./Library/stm32f4xx_can.c **** }
 526:./Library/stm32f4xx_can.c **** #endif /* STM32F413_423xx */
 527:./Library/stm32f4xx_can.c **** 
 528:./Library/stm32f4xx_can.c **** /**
 529:./Library/stm32f4xx_can.c ****   * @brief  Fills each CAN_InitStruct member with its default value.
 530:./Library/stm32f4xx_can.c ****   * @param  CAN_InitStruct: pointer to a CAN_InitTypeDef structure which ill be initialized.
 531:./Library/stm32f4xx_can.c ****   * @retval None
 532:./Library/stm32f4xx_can.c ****   */
 533:./Library/stm32f4xx_can.c **** void CAN_StructInit(CAN_InitTypeDef* CAN_InitStruct)
 534:./Library/stm32f4xx_can.c **** {
 535:./Library/stm32f4xx_can.c ****   /* Reset CAN init structure parameters values */
 536:./Library/stm32f4xx_can.c ****   
 537:./Library/stm32f4xx_can.c ****   /* Initialize the time triggered communication mode */
 538:./Library/stm32f4xx_can.c ****   CAN_InitStruct->CAN_TTCM = DISABLE;
 539:./Library/stm32f4xx_can.c ****   
 540:./Library/stm32f4xx_can.c ****   /* Initialize the automatic bus-off management */
 541:./Library/stm32f4xx_can.c ****   CAN_InitStruct->CAN_ABOM = DISABLE;
 542:./Library/stm32f4xx_can.c ****   
 543:./Library/stm32f4xx_can.c ****   /* Initialize the automatic wake-up mode */
ARM GAS  /tmp/ccd0Y8mk.s 			page 11


 544:./Library/stm32f4xx_can.c ****   CAN_InitStruct->CAN_AWUM = DISABLE;
 545:./Library/stm32f4xx_can.c ****   
 546:./Library/stm32f4xx_can.c ****   /* Initialize the no automatic retransmission */
 547:./Library/stm32f4xx_can.c ****   CAN_InitStruct->CAN_NART = DISABLE;
 548:./Library/stm32f4xx_can.c ****   
 549:./Library/stm32f4xx_can.c ****   /* Initialize the receive FIFO locked mode */
 550:./Library/stm32f4xx_can.c ****   CAN_InitStruct->CAN_RFLM = DISABLE;
 551:./Library/stm32f4xx_can.c ****   
 552:./Library/stm32f4xx_can.c ****   /* Initialize the transmit FIFO priority */
 553:./Library/stm32f4xx_can.c ****   CAN_InitStruct->CAN_TXFP = DISABLE;
 554:./Library/stm32f4xx_can.c ****   
 555:./Library/stm32f4xx_can.c ****   /* Initialize the CAN_Mode member */
 556:./Library/stm32f4xx_can.c ****   CAN_InitStruct->CAN_Mode = CAN_Mode_Normal;
 557:./Library/stm32f4xx_can.c ****   
 558:./Library/stm32f4xx_can.c ****   /* Initialize the CAN_SJW member */
 559:./Library/stm32f4xx_can.c ****   CAN_InitStruct->CAN_SJW = CAN_SJW_1tq;
 560:./Library/stm32f4xx_can.c ****   
 561:./Library/stm32f4xx_can.c ****   /* Initialize the CAN_BS1 member */
 562:./Library/stm32f4xx_can.c ****   CAN_InitStruct->CAN_BS1 = CAN_BS1_4tq;
 563:./Library/stm32f4xx_can.c ****   
 564:./Library/stm32f4xx_can.c ****   /* Initialize the CAN_BS2 member */
 565:./Library/stm32f4xx_can.c ****   CAN_InitStruct->CAN_BS2 = CAN_BS2_3tq;
 566:./Library/stm32f4xx_can.c ****   
 567:./Library/stm32f4xx_can.c ****   /* Initialize the CAN_Prescaler member */
 568:./Library/stm32f4xx_can.c ****   CAN_InitStruct->CAN_Prescaler = 1;
 569:./Library/stm32f4xx_can.c **** }
 570:./Library/stm32f4xx_can.c **** 
 571:./Library/stm32f4xx_can.c **** #if defined(STM32F413_423xx)
 572:./Library/stm32f4xx_can.c **** /**
 573:./Library/stm32f4xx_can.c ****   * @brief  Select the start bank filter for slave CAN.
 574:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 3 to select the CAN peripheral.
 575:./Library/stm32f4xx_can.c ****   * @param  CAN_BankNumber: Select the start slave bank filter from 1..27.
 576:./Library/stm32f4xx_can.c ****   * @retval None
 577:./Library/stm32f4xx_can.c ****   */
 578:./Library/stm32f4xx_can.c **** void CAN_SlaveStartBank(CAN_TypeDef* CANx, uint8_t CAN_BankNumber) 
 579:./Library/stm32f4xx_can.c **** {
 580:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 581:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_BANKNUMBER(CAN_BankNumber));
 582:./Library/stm32f4xx_can.c ****   
 583:./Library/stm32f4xx_can.c ****   /* Enter Initialisation mode for the filter */
 584:./Library/stm32f4xx_can.c ****   CANx->FMR |= FMR_FINIT;
 585:./Library/stm32f4xx_can.c ****   
 586:./Library/stm32f4xx_can.c ****   /* Select the start slave bank */
 587:./Library/stm32f4xx_can.c ****   CANx->FMR &= (uint32_t)0xFFFFC0F1 ;
 588:./Library/stm32f4xx_can.c ****   CANx->FMR |= (uint32_t)(CAN_BankNumber)<<8;
 589:./Library/stm32f4xx_can.c ****   
 590:./Library/stm32f4xx_can.c ****   /* Leave Initialisation mode for the filter */
 591:./Library/stm32f4xx_can.c ****   CANx->FMR &= ~FMR_FINIT;
 592:./Library/stm32f4xx_can.c **** }
 593:./Library/stm32f4xx_can.c **** #else
 594:./Library/stm32f4xx_can.c **** /**
 595:./Library/stm32f4xx_can.c ****   * @brief  Select the start bank filter for slave CAN.
 596:./Library/stm32f4xx_can.c ****   * @param  CAN_BankNumber: Select the start slave bank filter from 1..27.
 597:./Library/stm32f4xx_can.c ****   * @retval None
 598:./Library/stm32f4xx_can.c ****   */
 599:./Library/stm32f4xx_can.c **** void CAN_SlaveStartBank(uint8_t CAN_BankNumber) 
 600:./Library/stm32f4xx_can.c **** {
ARM GAS  /tmp/ccd0Y8mk.s 			page 12


 601:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 602:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_BANKNUMBER(CAN_BankNumber));
 603:./Library/stm32f4xx_can.c ****   
 604:./Library/stm32f4xx_can.c ****   /* Enter Initialisation mode for the filter */
 605:./Library/stm32f4xx_can.c ****   CAN1->FMR |= FMR_FINIT;
 606:./Library/stm32f4xx_can.c ****   
 607:./Library/stm32f4xx_can.c ****   /* Select the start slave bank */
 608:./Library/stm32f4xx_can.c ****   CAN1->FMR &= (uint32_t)0xFFFFC0F1 ;
 609:./Library/stm32f4xx_can.c ****   CAN1->FMR |= (uint32_t)(CAN_BankNumber)<<8;
 610:./Library/stm32f4xx_can.c ****   
 611:./Library/stm32f4xx_can.c ****   /* Leave Initialisation mode for the filter */
 612:./Library/stm32f4xx_can.c ****   CAN1->FMR &= ~FMR_FINIT;
 613:./Library/stm32f4xx_can.c **** }
 614:./Library/stm32f4xx_can.c **** #endif /* STM32F413_423xx */
 615:./Library/stm32f4xx_can.c **** /**
 616:./Library/stm32f4xx_can.c ****   * @brief  Enables or disables the DBG Freeze for CAN.
 617:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
 618:./Library/stm32f4xx_can.c ****   * @param  NewState: new state of the CAN peripheral. 
 619:./Library/stm32f4xx_can.c ****   *          This parameter can be: ENABLE (CAN reception/transmission is frozen
 620:./Library/stm32f4xx_can.c ****   *          during debug. Reception FIFOs can still be accessed/controlled normally) 
 621:./Library/stm32f4xx_can.c ****   *          or DISABLE (CAN is working during debug).
 622:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
 623:./Library/stm32f4xx_can.c ****   * @retval None
 624:./Library/stm32f4xx_can.c ****   */
 625:./Library/stm32f4xx_can.c **** void CAN_DBGFreeze(CAN_TypeDef* CANx, FunctionalState NewState)
 626:./Library/stm32f4xx_can.c **** {
 627:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 628:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 629:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 630:./Library/stm32f4xx_can.c ****   
 631:./Library/stm32f4xx_can.c ****   if (NewState != DISABLE)
 632:./Library/stm32f4xx_can.c ****   {
 633:./Library/stm32f4xx_can.c ****     /* Enable Debug Freeze  */
 634:./Library/stm32f4xx_can.c ****     CANx->MCR |= MCR_DBF;
 635:./Library/stm32f4xx_can.c ****   }
 636:./Library/stm32f4xx_can.c ****   else
 637:./Library/stm32f4xx_can.c ****   {
 638:./Library/stm32f4xx_can.c ****     /* Disable Debug Freeze */
 639:./Library/stm32f4xx_can.c ****     CANx->MCR &= ~MCR_DBF;
 640:./Library/stm32f4xx_can.c ****   }
 641:./Library/stm32f4xx_can.c **** }
 642:./Library/stm32f4xx_can.c **** 
 643:./Library/stm32f4xx_can.c **** 
 644:./Library/stm32f4xx_can.c **** /**
 645:./Library/stm32f4xx_can.c ****   * @brief  Enables or disables the CAN Time TriggerOperation communication mode.
 646:./Library/stm32f4xx_can.c ****   * @note   DLC must be programmed as 8 in order Time Stamp (2 bytes) to be 
 647:./Library/stm32f4xx_can.c ****   *         sent over the CAN bus.  
 648:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
 649:./Library/stm32f4xx_can.c ****   * @param  NewState: Mode new state. This parameter can be: ENABLE or DISABLE.
 650:./Library/stm32f4xx_can.c ****   *         When enabled, Time stamp (TIME[15:0]) value is  sent in the last two
 651:./Library/stm32f4xx_can.c ****   *         data bytes of the 8-byte message: TIME[7:0] in data byte 6 and TIME[15:8] 
 652:./Library/stm32f4xx_can.c ****   *         in data byte 7.
 653:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
 654:./Library/stm32f4xx_can.c ****   * @retval None
 655:./Library/stm32f4xx_can.c ****   */
 656:./Library/stm32f4xx_can.c **** void CAN_TTComModeCmd(CAN_TypeDef* CANx, FunctionalState NewState)
 657:./Library/stm32f4xx_can.c **** {
ARM GAS  /tmp/ccd0Y8mk.s 			page 13


 658:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 659:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 660:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 661:./Library/stm32f4xx_can.c ****   if (NewState != DISABLE)
 662:./Library/stm32f4xx_can.c ****   {
 663:./Library/stm32f4xx_can.c ****     /* Enable the TTCM mode */
 664:./Library/stm32f4xx_can.c ****     CANx->MCR |= CAN_MCR_TTCM;
 665:./Library/stm32f4xx_can.c **** 
 666:./Library/stm32f4xx_can.c ****     /* Set TGT bits */
 667:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[0].TDTR |= ((uint32_t)CAN_TDT0R_TGT);
 668:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR |= ((uint32_t)CAN_TDT1R_TGT);
 669:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR |= ((uint32_t)CAN_TDT2R_TGT);
 670:./Library/stm32f4xx_can.c ****   }
 671:./Library/stm32f4xx_can.c ****   else
 672:./Library/stm32f4xx_can.c ****   {
 673:./Library/stm32f4xx_can.c ****     /* Disable the TTCM mode */
 674:./Library/stm32f4xx_can.c ****     CANx->MCR &= (uint32_t)(~(uint32_t)CAN_MCR_TTCM);
 675:./Library/stm32f4xx_can.c **** 
 676:./Library/stm32f4xx_can.c ****     /* Reset TGT bits */
 677:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[0].TDTR &= ((uint32_t)~CAN_TDT0R_TGT);
 678:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR &= ((uint32_t)~CAN_TDT1R_TGT);
 679:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR &= ((uint32_t)~CAN_TDT2R_TGT);
 680:./Library/stm32f4xx_can.c ****   }
 681:./Library/stm32f4xx_can.c **** }
 682:./Library/stm32f4xx_can.c **** /**
 683:./Library/stm32f4xx_can.c ****   * @}
 684:./Library/stm32f4xx_can.c ****   */
 685:./Library/stm32f4xx_can.c **** 
 686:./Library/stm32f4xx_can.c **** 
 687:./Library/stm32f4xx_can.c **** /** @defgroup CAN_Group2 CAN Frames Transmission functions
 688:./Library/stm32f4xx_can.c ****  *  @brief    CAN Frames Transmission functions 
 689:./Library/stm32f4xx_can.c ****  *
 690:./Library/stm32f4xx_can.c **** @verbatim    
 691:./Library/stm32f4xx_can.c ****  ===============================================================================
 692:./Library/stm32f4xx_can.c ****                 ##### CAN Frames Transmission functions #####
 693:./Library/stm32f4xx_can.c ****  ===============================================================================  
 694:./Library/stm32f4xx_can.c ****     [..] This section provides functions allowing to 
 695:./Library/stm32f4xx_can.c ****       (+) Initiate and transmit a CAN frame message (if there is an empty mailbox).
 696:./Library/stm32f4xx_can.c ****       (+) Check the transmission status of a CAN Frame
 697:./Library/stm32f4xx_can.c ****       (+) Cancel a transmit request
 698:./Library/stm32f4xx_can.c ****    
 699:./Library/stm32f4xx_can.c **** @endverbatim
 700:./Library/stm32f4xx_can.c ****   * @{
 701:./Library/stm32f4xx_can.c ****   */
 702:./Library/stm32f4xx_can.c **** 
 703:./Library/stm32f4xx_can.c **** /**
 704:./Library/stm32f4xx_can.c ****   * @brief  Initiates and transmits a CAN frame message.
 705:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
 706:./Library/stm32f4xx_can.c ****   * @param  TxMessage: pointer to a structure which contains CAN Id, CAN DLC and CAN data.
 707:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
 708:./Library/stm32f4xx_can.c ****   * @retval The number of the mailbox that is used for transmission or
 709:./Library/stm32f4xx_can.c ****   *         CAN_TxStatus_NoMailBox if there is no empty mailbox.
 710:./Library/stm32f4xx_can.c ****   */
 711:./Library/stm32f4xx_can.c **** uint8_t CAN_Transmit(CAN_TypeDef* CANx, CanTxMsg* TxMessage)
 712:./Library/stm32f4xx_can.c **** {
 713:./Library/stm32f4xx_can.c ****   uint8_t transmit_mailbox = 0;
 714:./Library/stm32f4xx_can.c ****   /* Check the parameters */
ARM GAS  /tmp/ccd0Y8mk.s 			page 14


 715:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 716:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_IDTYPE(TxMessage->IDE));
 717:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_RTR(TxMessage->RTR));
 718:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_DLC(TxMessage->DLC));
 719:./Library/stm32f4xx_can.c **** 
 720:./Library/stm32f4xx_can.c ****   /* Select one empty transmit mailbox */
 721:./Library/stm32f4xx_can.c ****   if ((CANx->TSR&CAN_TSR_TME0) == CAN_TSR_TME0)
 722:./Library/stm32f4xx_can.c ****   {
 723:./Library/stm32f4xx_can.c ****     transmit_mailbox = 0;
 724:./Library/stm32f4xx_can.c ****   }
 725:./Library/stm32f4xx_can.c ****   else if ((CANx->TSR&CAN_TSR_TME1) == CAN_TSR_TME1)
 726:./Library/stm32f4xx_can.c ****   {
 727:./Library/stm32f4xx_can.c ****     transmit_mailbox = 1;
 728:./Library/stm32f4xx_can.c ****   }
 729:./Library/stm32f4xx_can.c ****   else if ((CANx->TSR&CAN_TSR_TME2) == CAN_TSR_TME2)
 730:./Library/stm32f4xx_can.c ****   {
 731:./Library/stm32f4xx_can.c ****     transmit_mailbox = 2;
 732:./Library/stm32f4xx_can.c ****   }
 733:./Library/stm32f4xx_can.c ****   else
 734:./Library/stm32f4xx_can.c ****   {
 735:./Library/stm32f4xx_can.c ****     transmit_mailbox = CAN_TxStatus_NoMailBox;
 736:./Library/stm32f4xx_can.c ****   }
 737:./Library/stm32f4xx_can.c **** 
 738:./Library/stm32f4xx_can.c ****   if (transmit_mailbox != CAN_TxStatus_NoMailBox)
 739:./Library/stm32f4xx_can.c ****   {
 740:./Library/stm32f4xx_can.c ****     /* Set up the Id */
 741:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TIR &= TMIDxR_TXRQ;
 742:./Library/stm32f4xx_can.c ****     if (TxMessage->IDE == CAN_Id_Standard)
 743:./Library/stm32f4xx_can.c ****     {
 744:./Library/stm32f4xx_can.c ****       assert_param(IS_CAN_STDID(TxMessage->StdId));  
 745:./Library/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->StdId << 21) | \
 746:./Library/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 747:./Library/stm32f4xx_can.c ****     }
 748:./Library/stm32f4xx_can.c ****     else
 749:./Library/stm32f4xx_can.c ****     {
 750:./Library/stm32f4xx_can.c ****       assert_param(IS_CAN_EXTID(TxMessage->ExtId));
 751:./Library/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 752:./Library/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 753:./Library/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 754:./Library/stm32f4xx_can.c ****     }
 755:./Library/stm32f4xx_can.c ****     
 756:./Library/stm32f4xx_can.c ****     /* Set up the DLC */
 757:./Library/stm32f4xx_can.c ****     TxMessage->DLC &= (uint8_t)0x0000000F;
 758:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR &= (uint32_t)0xFFFFFFF0;
 759:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR |= TxMessage->DLC;
 760:./Library/stm32f4xx_can.c **** 
 761:./Library/stm32f4xx_can.c ****     /* Set up the data field */
 762:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 763:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 764:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 765:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[0]));
 766:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 767:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 768:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 769:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[4]));
 770:./Library/stm32f4xx_can.c ****     /* Request transmission */
 771:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TIR |= TMIDxR_TXRQ;
ARM GAS  /tmp/ccd0Y8mk.s 			page 15


 772:./Library/stm32f4xx_can.c ****   }
 773:./Library/stm32f4xx_can.c ****   return transmit_mailbox;
 774:./Library/stm32f4xx_can.c **** }
 775:./Library/stm32f4xx_can.c **** 
 776:./Library/stm32f4xx_can.c **** /**
 777:./Library/stm32f4xx_can.c ****   * @brief  Checks the transmission status of a CAN Frame.
 778:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
 779:./Library/stm32f4xx_can.c ****   * @param  TransmitMailbox: the number of the mailbox that is used for transmission.
 780:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
 781:./Library/stm32f4xx_can.c ****   * @retval CAN_TxStatus_Ok if the CAN driver transmits the message, 
 782:./Library/stm32f4xx_can.c ****   *         CAN_TxStatus_Failed in an other case.
 783:./Library/stm32f4xx_can.c ****   */
 784:./Library/stm32f4xx_can.c **** uint8_t CAN_TransmitStatus(CAN_TypeDef* CANx, uint8_t TransmitMailbox)
 785:./Library/stm32f4xx_can.c **** {
 786:./Library/stm32f4xx_can.c ****   uint32_t state = 0;
 787:./Library/stm32f4xx_can.c **** 
 788:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 789:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 790:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_TRANSMITMAILBOX(TransmitMailbox));
 791:./Library/stm32f4xx_can.c ****  
 792:./Library/stm32f4xx_can.c ****   switch (TransmitMailbox)
 793:./Library/stm32f4xx_can.c ****   {
 794:./Library/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_0): 
 795:./Library/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP0 | CAN_TSR_TXOK0 | CAN_TSR_TME0);
 796:./Library/stm32f4xx_can.c ****       break;
 797:./Library/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): 
 798:./Library/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1);
 799:./Library/stm32f4xx_can.c ****       break;
 800:./Library/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): 
 801:./Library/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2);
 802:./Library/stm32f4xx_can.c ****       break;
 803:./Library/stm32f4xx_can.c ****     default:
 804:./Library/stm32f4xx_can.c ****       state = CAN_TxStatus_Failed;
 805:./Library/stm32f4xx_can.c ****       break;
 806:./Library/stm32f4xx_can.c ****   }
 807:./Library/stm32f4xx_can.c ****   switch (state)
 808:./Library/stm32f4xx_can.c ****   {
 809:./Library/stm32f4xx_can.c ****       /* transmit pending  */
 810:./Library/stm32f4xx_can.c ****     case (0x0): state = CAN_TxStatus_Pending;
 811:./Library/stm32f4xx_can.c ****       break;
 812:./Library/stm32f4xx_can.c ****       /* transmit failed  */
 813:./Library/stm32f4xx_can.c ****      case (CAN_TSR_RQCP0 | CAN_TSR_TME0): state = CAN_TxStatus_Failed;
 814:./Library/stm32f4xx_can.c ****       break;
 815:./Library/stm32f4xx_can.c ****      case (CAN_TSR_RQCP1 | CAN_TSR_TME1): state = CAN_TxStatus_Failed;
 816:./Library/stm32f4xx_can.c ****       break;
 817:./Library/stm32f4xx_can.c ****      case (CAN_TSR_RQCP2 | CAN_TSR_TME2): state = CAN_TxStatus_Failed;
 818:./Library/stm32f4xx_can.c ****       break;
 819:./Library/stm32f4xx_can.c ****       /* transmit succeeded  */
 820:./Library/stm32f4xx_can.c ****     case (CAN_TSR_RQCP0 | CAN_TSR_TXOK0 | CAN_TSR_TME0):state = CAN_TxStatus_Ok;
 821:./Library/stm32f4xx_can.c ****       break;
 822:./Library/stm32f4xx_can.c ****     case (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1):state = CAN_TxStatus_Ok;
 823:./Library/stm32f4xx_can.c ****       break;
 824:./Library/stm32f4xx_can.c ****     case (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2):state = CAN_TxStatus_Ok;
 825:./Library/stm32f4xx_can.c ****       break;
 826:./Library/stm32f4xx_can.c ****     default: state = CAN_TxStatus_Failed;
 827:./Library/stm32f4xx_can.c ****       break;
 828:./Library/stm32f4xx_can.c ****   }
ARM GAS  /tmp/ccd0Y8mk.s 			page 16


 829:./Library/stm32f4xx_can.c ****   return (uint8_t) state;
 830:./Library/stm32f4xx_can.c **** }
 831:./Library/stm32f4xx_can.c **** 
 832:./Library/stm32f4xx_can.c **** /**
 833:./Library/stm32f4xx_can.c ****   * @brief  Cancels a transmit request.
 834:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
 835:./Library/stm32f4xx_can.c ****   * @param  Mailbox: Mailbox number.
 836:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
 837:./Library/stm32f4xx_can.c ****   * @retval None
 838:./Library/stm32f4xx_can.c ****   */
 839:./Library/stm32f4xx_can.c **** void CAN_CancelTransmit(CAN_TypeDef* CANx, uint8_t Mailbox)
 840:./Library/stm32f4xx_can.c **** {
 841:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 842:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 843:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_TRANSMITMAILBOX(Mailbox));
 844:./Library/stm32f4xx_can.c ****   /* abort transmission */
 845:./Library/stm32f4xx_can.c ****   switch (Mailbox)
 846:./Library/stm32f4xx_can.c ****   {
 847:./Library/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_0): CANx->TSR = CAN_TSR_ABRQ0;
 848:./Library/stm32f4xx_can.c ****       break;
 849:./Library/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): CANx->TSR = CAN_TSR_ABRQ1;
 850:./Library/stm32f4xx_can.c ****       break;
 851:./Library/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): CANx->TSR = CAN_TSR_ABRQ2;
 852:./Library/stm32f4xx_can.c ****       break;
 853:./Library/stm32f4xx_can.c ****     default:
 854:./Library/stm32f4xx_can.c ****       break;
 855:./Library/stm32f4xx_can.c ****   }
 856:./Library/stm32f4xx_can.c **** }
 857:./Library/stm32f4xx_can.c **** /**
 858:./Library/stm32f4xx_can.c ****   * @}
 859:./Library/stm32f4xx_can.c ****   */
 860:./Library/stm32f4xx_can.c **** 
 861:./Library/stm32f4xx_can.c **** 
 862:./Library/stm32f4xx_can.c **** /** @defgroup CAN_Group3 CAN Frames Reception functions
 863:./Library/stm32f4xx_can.c ****  *  @brief    CAN Frames Reception functions 
 864:./Library/stm32f4xx_can.c ****  *
 865:./Library/stm32f4xx_can.c **** @verbatim    
 866:./Library/stm32f4xx_can.c ****  ===============================================================================
 867:./Library/stm32f4xx_can.c ****                 ##### CAN Frames Reception functions #####
 868:./Library/stm32f4xx_can.c ****  ===============================================================================  
 869:./Library/stm32f4xx_can.c ****     [..] This section provides functions allowing to 
 870:./Library/stm32f4xx_can.c ****       (+) Receive a correct CAN frame
 871:./Library/stm32f4xx_can.c ****       (+) Release a specified receive FIFO (2 FIFOs are available)
 872:./Library/stm32f4xx_can.c ****       (+) Return the number of the pending received CAN frames
 873:./Library/stm32f4xx_can.c ****    
 874:./Library/stm32f4xx_can.c **** @endverbatim
 875:./Library/stm32f4xx_can.c ****   * @{
 876:./Library/stm32f4xx_can.c ****   */
 877:./Library/stm32f4xx_can.c **** 
 878:./Library/stm32f4xx_can.c **** /**
 879:./Library/stm32f4xx_can.c ****   * @brief  Receives a correct CAN frame.
 880:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
 881:./Library/stm32f4xx_can.c ****   * @param  FIFONumber: Receive FIFO number, CAN_FIFO0 or CAN_FIFO1.
 882:./Library/stm32f4xx_can.c ****   * @param  RxMessage: pointer to a structure receive frame which contains CAN Id,
 883:./Library/stm32f4xx_can.c ****   *         CAN DLC, CAN data and FMI number.
 884:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
 885:./Library/stm32f4xx_can.c ****   * @retval None
ARM GAS  /tmp/ccd0Y8mk.s 			page 17


 886:./Library/stm32f4xx_can.c ****   */
 887:./Library/stm32f4xx_can.c **** void CAN_Receive(CAN_TypeDef* CANx, uint8_t FIFONumber, CanRxMsg* RxMessage)
 888:./Library/stm32f4xx_can.c **** {
 889:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 890:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 891:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 892:./Library/stm32f4xx_can.c ****   /* Get the Id */
 893:./Library/stm32f4xx_can.c ****   RxMessage->IDE = (uint8_t)0x04 & CANx->sFIFOMailBox[FIFONumber].RIR;
 894:./Library/stm32f4xx_can.c ****   if (RxMessage->IDE == CAN_Id_Standard)
 895:./Library/stm32f4xx_can.c ****   {
 896:./Library/stm32f4xx_can.c ****     RxMessage->StdId = (uint32_t)0x000007FF & (CANx->sFIFOMailBox[FIFONumber].RIR >> 21);
 897:./Library/stm32f4xx_can.c ****   }
 898:./Library/stm32f4xx_can.c ****   else
 899:./Library/stm32f4xx_can.c ****   {
 900:./Library/stm32f4xx_can.c ****     RxMessage->ExtId = (uint32_t)0x1FFFFFFF & (CANx->sFIFOMailBox[FIFONumber].RIR >> 3);
 901:./Library/stm32f4xx_can.c ****   }
 902:./Library/stm32f4xx_can.c ****   
 903:./Library/stm32f4xx_can.c ****   RxMessage->RTR = (uint8_t)0x02 & CANx->sFIFOMailBox[FIFONumber].RIR;
 904:./Library/stm32f4xx_can.c ****   /* Get the DLC */
 905:./Library/stm32f4xx_can.c ****   RxMessage->DLC = (uint8_t)0x0F & CANx->sFIFOMailBox[FIFONumber].RDTR;
 906:./Library/stm32f4xx_can.c ****   /* Get the FMI */
 907:./Library/stm32f4xx_can.c ****   RxMessage->FMI = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDTR >> 8);
 908:./Library/stm32f4xx_can.c ****   /* Get the data field */
 909:./Library/stm32f4xx_can.c ****   RxMessage->Data[0] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDLR;
 910:./Library/stm32f4xx_can.c ****   RxMessage->Data[1] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 8);
 911:./Library/stm32f4xx_can.c ****   RxMessage->Data[2] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 16);
 912:./Library/stm32f4xx_can.c ****   RxMessage->Data[3] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 24);
 913:./Library/stm32f4xx_can.c ****   RxMessage->Data[4] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDHR;
 914:./Library/stm32f4xx_can.c ****   RxMessage->Data[5] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 8);
 915:./Library/stm32f4xx_can.c ****   RxMessage->Data[6] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 16);
 916:./Library/stm32f4xx_can.c ****   RxMessage->Data[7] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 24);
 917:./Library/stm32f4xx_can.c ****   /* Release the FIFO */
 918:./Library/stm32f4xx_can.c ****   /* Release FIFO0 */
 919:./Library/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 920:./Library/stm32f4xx_can.c ****   {
 921:./Library/stm32f4xx_can.c ****     CANx->RF0R = CAN_RF0R_RFOM0;
 922:./Library/stm32f4xx_can.c ****   }
 923:./Library/stm32f4xx_can.c ****   /* Release FIFO1 */
 924:./Library/stm32f4xx_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 925:./Library/stm32f4xx_can.c ****   {
 926:./Library/stm32f4xx_can.c ****     CANx->RF1R = CAN_RF1R_RFOM1;
 927:./Library/stm32f4xx_can.c ****   }
 928:./Library/stm32f4xx_can.c **** }
 929:./Library/stm32f4xx_can.c **** 
 930:./Library/stm32f4xx_can.c **** /**
 931:./Library/stm32f4xx_can.c ****   * @brief  Releases the specified receive FIFO.
 932:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
 933:./Library/stm32f4xx_can.c ****   * @param  FIFONumber: FIFO to release, CAN_FIFO0 or CAN_FIFO1.
 934:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
 935:./Library/stm32f4xx_can.c ****   * @retval None
 936:./Library/stm32f4xx_can.c ****   */
 937:./Library/stm32f4xx_can.c **** void CAN_FIFORelease(CAN_TypeDef* CANx, uint8_t FIFONumber)
 938:./Library/stm32f4xx_can.c **** {
 939:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 940:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 941:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 942:./Library/stm32f4xx_can.c ****   /* Release FIFO0 */
ARM GAS  /tmp/ccd0Y8mk.s 			page 18


 943:./Library/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 944:./Library/stm32f4xx_can.c ****   {
 945:./Library/stm32f4xx_can.c ****     CANx->RF0R = CAN_RF0R_RFOM0;
 946:./Library/stm32f4xx_can.c ****   }
 947:./Library/stm32f4xx_can.c ****   /* Release FIFO1 */
 948:./Library/stm32f4xx_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 949:./Library/stm32f4xx_can.c ****   {
 950:./Library/stm32f4xx_can.c ****     CANx->RF1R = CAN_RF1R_RFOM1;
 951:./Library/stm32f4xx_can.c ****   }
 952:./Library/stm32f4xx_can.c **** }
 953:./Library/stm32f4xx_can.c **** 
 954:./Library/stm32f4xx_can.c **** /**
 955:./Library/stm32f4xx_can.c ****   * @brief  Returns the number of pending received messages.
 956:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
 957:./Library/stm32f4xx_can.c ****   * @param  FIFONumber: Receive FIFO number, CAN_FIFO0 or CAN_FIFO1.
 958:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
 959:./Library/stm32f4xx_can.c ****   * @retval NbMessage : which is the number of pending message.
 960:./Library/stm32f4xx_can.c ****   */
 961:./Library/stm32f4xx_can.c **** uint8_t CAN_MessagePending(CAN_TypeDef* CANx, uint8_t FIFONumber)
 962:./Library/stm32f4xx_can.c **** {
 963:./Library/stm32f4xx_can.c ****   uint8_t message_pending=0;
 964:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 965:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 966:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 967:./Library/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 968:./Library/stm32f4xx_can.c ****   {
 969:./Library/stm32f4xx_can.c ****     message_pending = (uint8_t)(CANx->RF0R&(uint32_t)0x03);
 970:./Library/stm32f4xx_can.c ****   }
 971:./Library/stm32f4xx_can.c ****   else if (FIFONumber == CAN_FIFO1)
 972:./Library/stm32f4xx_can.c ****   {
 973:./Library/stm32f4xx_can.c ****     message_pending = (uint8_t)(CANx->RF1R&(uint32_t)0x03);
 974:./Library/stm32f4xx_can.c ****   }
 975:./Library/stm32f4xx_can.c ****   else
 976:./Library/stm32f4xx_can.c ****   {
 977:./Library/stm32f4xx_can.c ****     message_pending = 0;
 978:./Library/stm32f4xx_can.c ****   }
 979:./Library/stm32f4xx_can.c ****   return message_pending;
 980:./Library/stm32f4xx_can.c **** }
 981:./Library/stm32f4xx_can.c **** /**
 982:./Library/stm32f4xx_can.c ****   * @}
 983:./Library/stm32f4xx_can.c ****   */
 984:./Library/stm32f4xx_can.c **** 
 985:./Library/stm32f4xx_can.c **** 
 986:./Library/stm32f4xx_can.c **** /** @defgroup CAN_Group4 CAN Operation modes functions
 987:./Library/stm32f4xx_can.c ****  *  @brief    CAN Operation modes functions 
 988:./Library/stm32f4xx_can.c ****  *
 989:./Library/stm32f4xx_can.c **** @verbatim    
 990:./Library/stm32f4xx_can.c ****  ===============================================================================
 991:./Library/stm32f4xx_can.c ****                     ##### CAN Operation modes functions #####
 992:./Library/stm32f4xx_can.c ****  ===============================================================================  
 993:./Library/stm32f4xx_can.c ****     [..] This section provides functions allowing to select the CAN Operation modes
 994:./Library/stm32f4xx_can.c ****       (+) sleep mode
 995:./Library/stm32f4xx_can.c ****       (+) normal mode 
 996:./Library/stm32f4xx_can.c ****       (+) initialization mode
 997:./Library/stm32f4xx_can.c ****    
 998:./Library/stm32f4xx_can.c **** @endverbatim
 999:./Library/stm32f4xx_can.c ****   * @{
ARM GAS  /tmp/ccd0Y8mk.s 			page 19


1000:./Library/stm32f4xx_can.c ****   */
1001:./Library/stm32f4xx_can.c ****   
1002:./Library/stm32f4xx_can.c ****   
1003:./Library/stm32f4xx_can.c **** /**
1004:./Library/stm32f4xx_can.c ****   * @brief  Selects the CAN Operation mode.
1005:./Library/stm32f4xx_can.c ****   * @param  CAN_OperatingMode: CAN Operating Mode.
1006:./Library/stm32f4xx_can.c ****   *         This parameter can be one of @ref CAN_OperatingMode_TypeDef enumeration.
1007:./Library/stm32f4xx_can.c ****   * @retval status of the requested mode which can be 
1008:./Library/stm32f4xx_can.c ****   *         - CAN_ModeStatus_Failed:  CAN failed entering the specific mode 
1009:./Library/stm32f4xx_can.c ****   *         - CAN_ModeStatus_Success: CAN Succeed entering the specific mode 
1010:./Library/stm32f4xx_can.c ****   */
1011:./Library/stm32f4xx_can.c **** uint8_t CAN_OperatingModeRequest(CAN_TypeDef* CANx, uint8_t CAN_OperatingMode)
1012:./Library/stm32f4xx_can.c **** {
1013:./Library/stm32f4xx_can.c ****   uint8_t status = CAN_ModeStatus_Failed;
1014:./Library/stm32f4xx_can.c ****   
1015:./Library/stm32f4xx_can.c ****   /* Timeout for INAK or also for SLAK bits*/
1016:./Library/stm32f4xx_can.c ****   uint32_t timeout = INAK_TIMEOUT; 
1017:./Library/stm32f4xx_can.c **** 
1018:./Library/stm32f4xx_can.c ****   /* Check the parameters */
1019:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1020:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_OPERATING_MODE(CAN_OperatingMode));
1021:./Library/stm32f4xx_can.c **** 
1022:./Library/stm32f4xx_can.c ****   if (CAN_OperatingMode == CAN_OperatingMode_Initialization)
1023:./Library/stm32f4xx_can.c ****   {
1024:./Library/stm32f4xx_can.c ****     /* Request initialisation */
1025:./Library/stm32f4xx_can.c ****     CANx->MCR = (uint32_t)((CANx->MCR & (uint32_t)(~(uint32_t)CAN_MCR_SLEEP)) | CAN_MCR_INRQ);
1026:./Library/stm32f4xx_can.c **** 
1027:./Library/stm32f4xx_can.c ****     /* Wait the acknowledge */
1028:./Library/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK) && (timeout != 0))
1029:./Library/stm32f4xx_can.c ****     {
1030:./Library/stm32f4xx_can.c ****       timeout--;
1031:./Library/stm32f4xx_can.c ****     }
1032:./Library/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK)
1033:./Library/stm32f4xx_can.c ****     {
1034:./Library/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
1035:./Library/stm32f4xx_can.c ****     }
1036:./Library/stm32f4xx_can.c ****     else
1037:./Library/stm32f4xx_can.c ****     {
1038:./Library/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
1039:./Library/stm32f4xx_can.c ****     }
1040:./Library/stm32f4xx_can.c ****   }
1041:./Library/stm32f4xx_can.c ****   else  if (CAN_OperatingMode == CAN_OperatingMode_Normal)
1042:./Library/stm32f4xx_can.c ****   {
1043:./Library/stm32f4xx_can.c ****     /* Request leave initialisation and sleep mode  and enter Normal mode */
1044:./Library/stm32f4xx_can.c ****     CANx->MCR &= (uint32_t)(~(CAN_MCR_SLEEP|CAN_MCR_INRQ));
1045:./Library/stm32f4xx_can.c **** 
1046:./Library/stm32f4xx_can.c ****     /* Wait the acknowledge */
1047:./Library/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
1048:./Library/stm32f4xx_can.c ****     {
1049:./Library/stm32f4xx_can.c ****       timeout--;
1050:./Library/stm32f4xx_can.c ****     }
1051:./Library/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != 0)
1052:./Library/stm32f4xx_can.c ****     {
1053:./Library/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
1054:./Library/stm32f4xx_can.c ****     }
1055:./Library/stm32f4xx_can.c ****     else
1056:./Library/stm32f4xx_can.c ****     {
ARM GAS  /tmp/ccd0Y8mk.s 			page 20


1057:./Library/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
1058:./Library/stm32f4xx_can.c ****     }
1059:./Library/stm32f4xx_can.c ****   }
1060:./Library/stm32f4xx_can.c ****   else  if (CAN_OperatingMode == CAN_OperatingMode_Sleep)
1061:./Library/stm32f4xx_can.c ****   {
1062:./Library/stm32f4xx_can.c ****     /* Request Sleep mode */
1063:./Library/stm32f4xx_can.c ****     CANx->MCR = (uint32_t)((CANx->MCR & (uint32_t)(~(uint32_t)CAN_MCR_INRQ)) | CAN_MCR_SLEEP);
1064:./Library/stm32f4xx_can.c **** 
1065:./Library/stm32f4xx_can.c ****     /* Wait the acknowledge */
1066:./Library/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
1067:./Library/stm32f4xx_can.c ****     {
1068:./Library/stm32f4xx_can.c ****       timeout--;
1069:./Library/stm32f4xx_can.c ****     }
1070:./Library/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK)
1071:./Library/stm32f4xx_can.c ****     {
1072:./Library/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
1073:./Library/stm32f4xx_can.c ****     }
1074:./Library/stm32f4xx_can.c ****     else
1075:./Library/stm32f4xx_can.c ****     {
1076:./Library/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
1077:./Library/stm32f4xx_can.c ****     }
1078:./Library/stm32f4xx_can.c ****   }
1079:./Library/stm32f4xx_can.c ****   else
1080:./Library/stm32f4xx_can.c ****   {
1081:./Library/stm32f4xx_can.c ****     status = CAN_ModeStatus_Failed;
1082:./Library/stm32f4xx_can.c ****   }
1083:./Library/stm32f4xx_can.c **** 
1084:./Library/stm32f4xx_can.c ****   return  (uint8_t) status;
1085:./Library/stm32f4xx_can.c **** }
1086:./Library/stm32f4xx_can.c **** 
1087:./Library/stm32f4xx_can.c **** /**
1088:./Library/stm32f4xx_can.c ****   * @brief  Enters the Sleep (low power) mode.
1089:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
1090:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
1091:./Library/stm32f4xx_can.c ****   * @retval CAN_Sleep_Ok if sleep entered, CAN_Sleep_Failed otherwise.
1092:./Library/stm32f4xx_can.c ****   */
1093:./Library/stm32f4xx_can.c **** uint8_t CAN_Sleep(CAN_TypeDef* CANx)
1094:./Library/stm32f4xx_can.c **** {
1095:./Library/stm32f4xx_can.c ****   uint8_t sleepstatus = CAN_Sleep_Failed;
1096:./Library/stm32f4xx_can.c ****   
1097:./Library/stm32f4xx_can.c ****   /* Check the parameters */
1098:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1099:./Library/stm32f4xx_can.c ****     
1100:./Library/stm32f4xx_can.c ****   /* Request Sleep mode */
1101:./Library/stm32f4xx_can.c ****    CANx->MCR = (((CANx->MCR) & (uint32_t)(~(uint32_t)CAN_MCR_INRQ)) | CAN_MCR_SLEEP);
1102:./Library/stm32f4xx_can.c ****    
1103:./Library/stm32f4xx_can.c ****   /* Sleep mode status */
1104:./Library/stm32f4xx_can.c ****   if ((CANx->MSR & (CAN_MSR_SLAK|CAN_MSR_INAK)) == CAN_MSR_SLAK)
1105:./Library/stm32f4xx_can.c ****   {
1106:./Library/stm32f4xx_can.c ****     /* Sleep mode not entered */
1107:./Library/stm32f4xx_can.c ****     sleepstatus =  CAN_Sleep_Ok;
1108:./Library/stm32f4xx_can.c ****   }
1109:./Library/stm32f4xx_can.c ****   /* return sleep mode status */
1110:./Library/stm32f4xx_can.c ****    return (uint8_t)sleepstatus;
1111:./Library/stm32f4xx_can.c **** }
1112:./Library/stm32f4xx_can.c **** 
1113:./Library/stm32f4xx_can.c **** /**
ARM GAS  /tmp/ccd0Y8mk.s 			page 21


1114:./Library/stm32f4xx_can.c ****   * @brief  Wakes up the CAN peripheral from sleep mode .
1115:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
1116:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
1117:./Library/stm32f4xx_can.c ****   * @retval CAN_WakeUp_Ok if sleep mode left, CAN_WakeUp_Failed otherwise.
1118:./Library/stm32f4xx_can.c ****   */
1119:./Library/stm32f4xx_can.c **** uint8_t CAN_WakeUp(CAN_TypeDef* CANx)
1120:./Library/stm32f4xx_can.c **** {
1121:./Library/stm32f4xx_can.c ****   uint32_t wait_slak = SLAK_TIMEOUT;
1122:./Library/stm32f4xx_can.c ****   uint8_t wakeupstatus = CAN_WakeUp_Failed;
1123:./Library/stm32f4xx_can.c ****   
1124:./Library/stm32f4xx_can.c ****   /* Check the parameters */
1125:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1126:./Library/stm32f4xx_can.c ****     
1127:./Library/stm32f4xx_can.c ****   /* Wake up request */
1128:./Library/stm32f4xx_can.c ****   CANx->MCR &= ~(uint32_t)CAN_MCR_SLEEP;
1129:./Library/stm32f4xx_can.c ****     
1130:./Library/stm32f4xx_can.c ****   /* Sleep mode status */
1131:./Library/stm32f4xx_can.c ****   while(((CANx->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)&&(wait_slak!=0x00))
1132:./Library/stm32f4xx_can.c ****   {
1133:./Library/stm32f4xx_can.c ****    wait_slak--;
1134:./Library/stm32f4xx_can.c ****   }
1135:./Library/stm32f4xx_can.c ****   if((CANx->MSR & CAN_MSR_SLAK) != CAN_MSR_SLAK)
1136:./Library/stm32f4xx_can.c ****   {
1137:./Library/stm32f4xx_can.c ****    /* wake up done : Sleep mode exited */
1138:./Library/stm32f4xx_can.c ****     wakeupstatus = CAN_WakeUp_Ok;
1139:./Library/stm32f4xx_can.c ****   }
1140:./Library/stm32f4xx_can.c ****   /* return wakeup status */
1141:./Library/stm32f4xx_can.c ****   return (uint8_t)wakeupstatus;
1142:./Library/stm32f4xx_can.c **** }
1143:./Library/stm32f4xx_can.c **** /**
1144:./Library/stm32f4xx_can.c ****   * @}
1145:./Library/stm32f4xx_can.c ****   */
1146:./Library/stm32f4xx_can.c **** 
1147:./Library/stm32f4xx_can.c **** 
1148:./Library/stm32f4xx_can.c **** /** @defgroup CAN_Group5 CAN Bus Error management functions
1149:./Library/stm32f4xx_can.c ****  *  @brief    CAN Bus Error management functions 
1150:./Library/stm32f4xx_can.c ****  *
1151:./Library/stm32f4xx_can.c **** @verbatim    
1152:./Library/stm32f4xx_can.c ****  ===============================================================================
1153:./Library/stm32f4xx_can.c ****                 ##### CAN Bus Error management functions #####
1154:./Library/stm32f4xx_can.c ****  ===============================================================================  
1155:./Library/stm32f4xx_can.c ****     [..] This section provides functions allowing to 
1156:./Library/stm32f4xx_can.c ****       (+) Return the CANx's last error code (LEC)
1157:./Library/stm32f4xx_can.c ****       (+) Return the CANx Receive Error Counter (REC)
1158:./Library/stm32f4xx_can.c ****       (+) Return the LSB of the 9-bit CANx Transmit Error Counter(TEC).
1159:./Library/stm32f4xx_can.c ****    
1160:./Library/stm32f4xx_can.c ****       -@- If TEC is greater than 255, The CAN is in bus-off state.
1161:./Library/stm32f4xx_can.c ****       -@- if REC or TEC are greater than 96, an Error warning flag occurs.
1162:./Library/stm32f4xx_can.c ****       -@- if REC or TEC are greater than 127, an Error Passive Flag occurs.
1163:./Library/stm32f4xx_can.c ****                         
1164:./Library/stm32f4xx_can.c **** @endverbatim
1165:./Library/stm32f4xx_can.c ****   * @{
1166:./Library/stm32f4xx_can.c ****   */
1167:./Library/stm32f4xx_can.c ****   
1168:./Library/stm32f4xx_can.c **** /**
1169:./Library/stm32f4xx_can.c ****   * @brief  Returns the CANx's last error code (LEC).
1170:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
ARM GAS  /tmp/ccd0Y8mk.s 			page 22


1171:./Library/stm32f4xx_can.c ****   * @retval Error code: 
1172:./Library/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_NoErr: No Error  
1173:./Library/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_StuffErr: Stuff Error
1174:./Library/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_FormErr: Form Error
1175:./Library/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_ACKErr : Acknowledgment Error
1176:./Library/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_BitRecessiveErr: Bit Recessive Error
1177:./Library/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_BitDominantErr: Bit Dominant Error
1178:./Library/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_CRCErr: CRC Error
1179:./Library/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_SoftwareSetErr: Software Set Error  
1180:./Library/stm32f4xx_can.c ****   */
1181:./Library/stm32f4xx_can.c **** uint8_t CAN_GetLastErrorCode(CAN_TypeDef* CANx)
1182:./Library/stm32f4xx_can.c **** {
1183:./Library/stm32f4xx_can.c ****   uint8_t errorcode=0;
1184:./Library/stm32f4xx_can.c ****   
1185:./Library/stm32f4xx_can.c ****   /* Check the parameters */
1186:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1187:./Library/stm32f4xx_can.c ****   
1188:./Library/stm32f4xx_can.c ****   /* Get the error code*/
1189:./Library/stm32f4xx_can.c ****   errorcode = (((uint8_t)CANx->ESR) & (uint8_t)CAN_ESR_LEC);
1190:./Library/stm32f4xx_can.c ****   
1191:./Library/stm32f4xx_can.c ****   /* Return the error code*/
1192:./Library/stm32f4xx_can.c ****   return errorcode;
1193:./Library/stm32f4xx_can.c **** }
1194:./Library/stm32f4xx_can.c **** 
1195:./Library/stm32f4xx_can.c **** /**
1196:./Library/stm32f4xx_can.c ****   * @brief  Returns the CANx Receive Error Counter (REC).
1197:./Library/stm32f4xx_can.c ****   * @note   In case of an error during reception, this counter is incremented 
1198:./Library/stm32f4xx_can.c ****   *         by 1 or by 8 depending on the error condition as defined by the CAN 
1199:./Library/stm32f4xx_can.c ****   *         standard. After every successful reception, the counter is 
1200:./Library/stm32f4xx_can.c ****   *         decremented by 1 or reset to 120 if its value was higher than 128. 
1201:./Library/stm32f4xx_can.c ****   *         When the counter value exceeds 127, the CAN controller enters the 
1202:./Library/stm32f4xx_can.c ****   *         error passive state.  
1203:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
1204:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
1205:./Library/stm32f4xx_can.c ****   * @retval CAN Receive Error Counter. 
1206:./Library/stm32f4xx_can.c ****   */
1207:./Library/stm32f4xx_can.c **** uint8_t CAN_GetReceiveErrorCounter(CAN_TypeDef* CANx)
1208:./Library/stm32f4xx_can.c **** {
1209:./Library/stm32f4xx_can.c ****   uint8_t counter=0;
1210:./Library/stm32f4xx_can.c ****   
1211:./Library/stm32f4xx_can.c ****   /* Check the parameters */
1212:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1213:./Library/stm32f4xx_can.c ****   
1214:./Library/stm32f4xx_can.c ****   /* Get the Receive Error Counter*/
1215:./Library/stm32f4xx_can.c ****   counter = (uint8_t)((CANx->ESR & CAN_ESR_REC)>> 24);
1216:./Library/stm32f4xx_can.c ****   
1217:./Library/stm32f4xx_can.c ****   /* Return the Receive Error Counter*/
1218:./Library/stm32f4xx_can.c ****   return counter;
1219:./Library/stm32f4xx_can.c **** }
1220:./Library/stm32f4xx_can.c **** 
1221:./Library/stm32f4xx_can.c **** 
1222:./Library/stm32f4xx_can.c **** /**
1223:./Library/stm32f4xx_can.c ****   * @brief  Returns the LSB of the 9-bit CANx Transmit Error Counter(TEC).
1224:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
1225:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
1226:./Library/stm32f4xx_can.c ****   * @retval LSB of the 9-bit CAN Transmit Error Counter. 
1227:./Library/stm32f4xx_can.c ****   */
ARM GAS  /tmp/ccd0Y8mk.s 			page 23


1228:./Library/stm32f4xx_can.c **** uint8_t CAN_GetLSBTransmitErrorCounter(CAN_TypeDef* CANx)
1229:./Library/stm32f4xx_can.c **** {
1230:./Library/stm32f4xx_can.c ****   uint8_t counter=0;
1231:./Library/stm32f4xx_can.c ****   
1232:./Library/stm32f4xx_can.c ****   /* Check the parameters */
1233:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1234:./Library/stm32f4xx_can.c ****   
1235:./Library/stm32f4xx_can.c ****   /* Get the LSB of the 9-bit CANx Transmit Error Counter(TEC) */
1236:./Library/stm32f4xx_can.c ****   counter = (uint8_t)((CANx->ESR & CAN_ESR_TEC)>> 16);
1237:./Library/stm32f4xx_can.c ****   
1238:./Library/stm32f4xx_can.c ****   /* Return the LSB of the 9-bit CANx Transmit Error Counter(TEC) */
1239:./Library/stm32f4xx_can.c ****   return counter;
1240:./Library/stm32f4xx_can.c **** }
1241:./Library/stm32f4xx_can.c **** /**
1242:./Library/stm32f4xx_can.c ****   * @}
1243:./Library/stm32f4xx_can.c ****   */
1244:./Library/stm32f4xx_can.c **** 
1245:./Library/stm32f4xx_can.c **** /** @defgroup CAN_Group6 Interrupts and flags management functions
1246:./Library/stm32f4xx_can.c ****  *  @brief   Interrupts and flags management functions
1247:./Library/stm32f4xx_can.c ****  *
1248:./Library/stm32f4xx_can.c **** @verbatim   
1249:./Library/stm32f4xx_can.c ****  ===============================================================================
1250:./Library/stm32f4xx_can.c ****               ##### Interrupts and flags management functions #####
1251:./Library/stm32f4xx_can.c ****  ===============================================================================  
1252:./Library/stm32f4xx_can.c **** 
1253:./Library/stm32f4xx_can.c ****      [..] This section provides functions allowing to configure the CAN Interrupts 
1254:./Library/stm32f4xx_can.c ****           and to get the status and clear flags and Interrupts pending bits.
1255:./Library/stm32f4xx_can.c ****   
1256:./Library/stm32f4xx_can.c ****           The CAN provides 14 Interrupts sources and 15 Flags:
1257:./Library/stm32f4xx_can.c **** 
1258:./Library/stm32f4xx_can.c ****    
1259:./Library/stm32f4xx_can.c ****   *** Flags ***
1260:./Library/stm32f4xx_can.c ****   =============
1261:./Library/stm32f4xx_can.c ****     [..] The 15 flags can be divided on 4 groups: 
1262:./Library/stm32f4xx_can.c **** 
1263:./Library/stm32f4xx_can.c ****       (+) Transmit Flags
1264:./Library/stm32f4xx_can.c ****         (++) CAN_FLAG_RQCP0, 
1265:./Library/stm32f4xx_can.c ****         (++) CAN_FLAG_RQCP1, 
1266:./Library/stm32f4xx_can.c ****         (++) CAN_FLAG_RQCP2  : Request completed MailBoxes 0, 1 and 2  Flags
1267:./Library/stm32f4xx_can.c ****                                Set when the last request (transmit or abort)
1268:./Library/stm32f4xx_can.c ****                                has been performed. 
1269:./Library/stm32f4xx_can.c **** 
1270:./Library/stm32f4xx_can.c ****       (+) Receive Flags
1271:./Library/stm32f4xx_can.c **** 
1272:./Library/stm32f4xx_can.c **** 
1273:./Library/stm32f4xx_can.c ****         (++) CAN_FLAG_FMP0,
1274:./Library/stm32f4xx_can.c ****         (++) CAN_FLAG_FMP1   : FIFO 0 and 1 Message Pending Flags 
1275:./Library/stm32f4xx_can.c ****                                set to signal that messages are pending in the receive 
1276:./Library/stm32f4xx_can.c ****                                FIFO.
1277:./Library/stm32f4xx_can.c ****                                These Flags are cleared only by hardware. 
1278:./Library/stm32f4xx_can.c **** 
1279:./Library/stm32f4xx_can.c ****         (++) CAN_FLAG_FF0,
1280:./Library/stm32f4xx_can.c ****         (++) CAN_FLAG_FF1    : FIFO 0 and 1 Full Flags
1281:./Library/stm32f4xx_can.c ****                                set when three messages are stored in the selected 
1282:./Library/stm32f4xx_can.c ****                                FIFO.                        
1283:./Library/stm32f4xx_can.c **** 
1284:./Library/stm32f4xx_can.c ****         (++) CAN_FLAG_FOV0              
ARM GAS  /tmp/ccd0Y8mk.s 			page 24


1285:./Library/stm32f4xx_can.c ****         (++) CAN_FLAG_FOV1   : FIFO 0 and 1 Overrun Flags
1286:./Library/stm32f4xx_can.c ****                                set when a new message has been received and passed 
1287:./Library/stm32f4xx_can.c ****                                the filter while the FIFO was full.         
1288:./Library/stm32f4xx_can.c **** 
1289:./Library/stm32f4xx_can.c ****       (+) Operating Mode Flags
1290:./Library/stm32f4xx_can.c **** 
1291:./Library/stm32f4xx_can.c ****         (++) CAN_FLAG_WKU    : Wake up Flag
1292:./Library/stm32f4xx_can.c ****                                set to signal that a SOF bit has been detected while 
1293:./Library/stm32f4xx_can.c ****                                the CAN hardware was in Sleep mode. 
1294:./Library/stm32f4xx_can.c ****         
1295:./Library/stm32f4xx_can.c ****         (++) CAN_FLAG_SLAK   : Sleep acknowledge Flag
1296:./Library/stm32f4xx_can.c ****                                Set to signal that the CAN has entered Sleep Mode. 
1297:./Library/stm32f4xx_can.c ****     
1298:./Library/stm32f4xx_can.c ****       (+) Error Flags
1299:./Library/stm32f4xx_can.c **** 
1300:./Library/stm32f4xx_can.c ****         (++) CAN_FLAG_EWG    : Error Warning Flag
1301:./Library/stm32f4xx_can.c ****                                Set when the warning limit has been reached (Receive 
1302:./Library/stm32f4xx_can.c ****                                Error Counter or Transmit Error Counter greater than 96). 
1303:./Library/stm32f4xx_can.c ****                                This Flag is cleared only by hardware.
1304:./Library/stm32f4xx_can.c ****                             
1305:./Library/stm32f4xx_can.c ****         (++) CAN_FLAG_EPV    : Error Passive Flag
1306:./Library/stm32f4xx_can.c ****                                Set when the Error Passive limit has been reached 
1307:./Library/stm32f4xx_can.c ****                                (Receive Error Counter or Transmit Error Counter 
1308:./Library/stm32f4xx_can.c ****                                greater than 127).
1309:./Library/stm32f4xx_can.c ****                                This Flag is cleared only by hardware.
1310:./Library/stm32f4xx_can.c ****                              
1311:./Library/stm32f4xx_can.c ****         (++) CAN_FLAG_BOF    : Bus-Off Flag
1312:./Library/stm32f4xx_can.c ****                                set when CAN enters the bus-off state. The bus-off 
1313:./Library/stm32f4xx_can.c ****                                state is entered on TEC overflow, greater than 255.
1314:./Library/stm32f4xx_can.c ****                                This Flag is cleared only by hardware.
1315:./Library/stm32f4xx_can.c ****                                    
1316:./Library/stm32f4xx_can.c ****         (++) CAN_FLAG_LEC    : Last error code Flag
1317:./Library/stm32f4xx_can.c ****                                set If a message has been transferred (reception or
1318:./Library/stm32f4xx_can.c ****                                transmission) with error, and the error code is hold.              
1319:./Library/stm32f4xx_can.c ****                            
1320:./Library/stm32f4xx_can.c ****   *** Interrupts ***
1321:./Library/stm32f4xx_can.c ****   ==================
1322:./Library/stm32f4xx_can.c ****     [..] The 14 interrupts can be divided on 4 groups: 
1323:./Library/stm32f4xx_can.c ****   
1324:./Library/stm32f4xx_can.c ****       (+) Transmit interrupt
1325:./Library/stm32f4xx_can.c ****   
1326:./Library/stm32f4xx_can.c ****         (++) CAN_IT_TME   :  Transmit mailbox empty Interrupt
1327:./Library/stm32f4xx_can.c ****                              if enabled, this interrupt source is pending when 
1328:./Library/stm32f4xx_can.c ****                              no transmit request are pending for Tx mailboxes.      
1329:./Library/stm32f4xx_can.c **** 
1330:./Library/stm32f4xx_can.c ****       (+) Receive Interrupts
1331:./Library/stm32f4xx_can.c ****          
1332:./Library/stm32f4xx_can.c ****         (++) CAN_IT_FMP0,
1333:./Library/stm32f4xx_can.c ****         (++) CAN_IT_FMP1    :  FIFO 0 and FIFO1 message pending Interrupts
1334:./Library/stm32f4xx_can.c ****                                if enabled, these interrupt sources are pending 
1335:./Library/stm32f4xx_can.c ****                                when messages are pending in the receive FIFO.
1336:./Library/stm32f4xx_can.c ****                                The corresponding interrupt pending bits are cleared 
1337:./Library/stm32f4xx_can.c ****                                only by hardware.
1338:./Library/stm32f4xx_can.c ****                 
1339:./Library/stm32f4xx_can.c ****         (++) CAN_IT_FF0,              
1340:./Library/stm32f4xx_can.c ****         (++) CAN_IT_FF1     :  FIFO 0 and FIFO1 full Interrupts
1341:./Library/stm32f4xx_can.c ****                                if enabled, these interrupt sources are pending 
ARM GAS  /tmp/ccd0Y8mk.s 			page 25


1342:./Library/stm32f4xx_can.c ****                                when three messages are stored in the selected FIFO.
1343:./Library/stm32f4xx_can.c ****         
1344:./Library/stm32f4xx_can.c ****         (++) CAN_IT_FOV0,        
1345:./Library/stm32f4xx_can.c ****         (++) CAN_IT_FOV1    :  FIFO 0 and FIFO1 overrun Interrupts        
1346:./Library/stm32f4xx_can.c ****                                if enabled, these interrupt sources are pending 
1347:./Library/stm32f4xx_can.c ****                                when a new message has been received and passed 
1348:./Library/stm32f4xx_can.c ****                                the filter while the FIFO was full.
1349:./Library/stm32f4xx_can.c **** 
1350:./Library/stm32f4xx_can.c ****       (+) Operating Mode Interrupts
1351:./Library/stm32f4xx_can.c ****          
1352:./Library/stm32f4xx_can.c ****         (++) CAN_IT_WKU     :  Wake-up Interrupt
1353:./Library/stm32f4xx_can.c ****                                if enabled, this interrupt source is pending when 
1354:./Library/stm32f4xx_can.c ****                                a SOF bit has been detected while the CAN hardware 
1355:./Library/stm32f4xx_can.c ****                                was in Sleep mode.
1356:./Library/stm32f4xx_can.c ****                                   
1357:./Library/stm32f4xx_can.c ****         (++) CAN_IT_SLK     :  Sleep acknowledge Interrupt
1358:./Library/stm32f4xx_can.c ****                                if enabled, this interrupt source is pending when 
1359:./Library/stm32f4xx_can.c ****                                the CAN has entered Sleep Mode.       
1360:./Library/stm32f4xx_can.c **** 
1361:./Library/stm32f4xx_can.c ****       (+) Error Interrupts 
1362:./Library/stm32f4xx_can.c ****         
1363:./Library/stm32f4xx_can.c ****         (++) CAN_IT_EWG     :  Error warning Interrupt 
1364:./Library/stm32f4xx_can.c ****                                if enabled, this interrupt source is pending when
1365:./Library/stm32f4xx_can.c ****                                the warning limit has been reached (Receive Error 
1366:./Library/stm32f4xx_can.c ****                                Counter or Transmit Error Counter=96). 
1367:./Library/stm32f4xx_can.c ****                                
1368:./Library/stm32f4xx_can.c ****         (++) CAN_IT_EPV     :  Error passive Interrupt        
1369:./Library/stm32f4xx_can.c ****                                if enabled, this interrupt source is pending when
1370:./Library/stm32f4xx_can.c ****                                the Error Passive limit has been reached (Receive 
1371:./Library/stm32f4xx_can.c ****                                Error Counter or Transmit Error Counter>127).
1372:./Library/stm32f4xx_can.c ****                           
1373:./Library/stm32f4xx_can.c ****         (++) CAN_IT_BOF     :  Bus-off Interrupt
1374:./Library/stm32f4xx_can.c ****                                if enabled, this interrupt source is pending when
1375:./Library/stm32f4xx_can.c ****                                CAN enters the bus-off state. The bus-off state is 
1376:./Library/stm32f4xx_can.c ****                                entered on TEC overflow, greater than 255.
1377:./Library/stm32f4xx_can.c ****                                This Flag is cleared only by hardware.
1378:./Library/stm32f4xx_can.c ****                                   
1379:./Library/stm32f4xx_can.c ****         (++) CAN_IT_LEC     :  Last error code Interrupt        
1380:./Library/stm32f4xx_can.c ****                                if enabled, this interrupt source is pending  when
1381:./Library/stm32f4xx_can.c ****                                a message has been transferred (reception or
1382:./Library/stm32f4xx_can.c ****                                transmission) with error, and the error code is hold.
1383:./Library/stm32f4xx_can.c ****                           
1384:./Library/stm32f4xx_can.c ****         (++) CAN_IT_ERR     :  Error Interrupt
1385:./Library/stm32f4xx_can.c ****                                if enabled, this interrupt source is pending when 
1386:./Library/stm32f4xx_can.c ****                                an error condition is pending.      
1387:./Library/stm32f4xx_can.c ****                       
1388:./Library/stm32f4xx_can.c ****     [..] Managing the CAN controller events :
1389:./Library/stm32f4xx_can.c ****  
1390:./Library/stm32f4xx_can.c ****          The user should identify which mode will be used in his application to 
1391:./Library/stm32f4xx_can.c ****          manage the CAN controller events: Polling mode or Interrupt mode.
1392:./Library/stm32f4xx_can.c ****   
1393:./Library/stm32f4xx_can.c ****       (#) In the Polling Mode it is advised to use the following functions:
1394:./Library/stm32f4xx_can.c ****         (++) CAN_GetFlagStatus() : to check if flags events occur. 
1395:./Library/stm32f4xx_can.c ****         (++) CAN_ClearFlag()     : to clear the flags events.
1396:./Library/stm32f4xx_can.c ****   
1397:./Library/stm32f4xx_can.c **** 
1398:./Library/stm32f4xx_can.c ****   
ARM GAS  /tmp/ccd0Y8mk.s 			page 26


1399:./Library/stm32f4xx_can.c ****       (#) In the Interrupt Mode it is advised to use the following functions:
1400:./Library/stm32f4xx_can.c ****         (++) CAN_ITConfig()       : to enable or disable the interrupt source.
1401:./Library/stm32f4xx_can.c ****         (++) CAN_GetITStatus()    : to check if Interrupt occurs.
1402:./Library/stm32f4xx_can.c ****         (++) CAN_ClearITPendingBit() : to clear the Interrupt pending Bit 
1403:./Library/stm32f4xx_can.c ****             (corresponding Flag).
1404:./Library/stm32f4xx_can.c ****         -@@-  This function has no impact on CAN_IT_FMP0 and CAN_IT_FMP1 Interrupts 
1405:./Library/stm32f4xx_can.c ****              pending bits since there are cleared only by hardware. 
1406:./Library/stm32f4xx_can.c ****   
1407:./Library/stm32f4xx_can.c **** @endverbatim
1408:./Library/stm32f4xx_can.c ****   * @{
1409:./Library/stm32f4xx_can.c ****   */ 
1410:./Library/stm32f4xx_can.c **** /**
1411:./Library/stm32f4xx_can.c ****   * @brief  Enables or disables the specified CANx interrupts.
1412:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
1413:./Library/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the CAN interrupt sources to be enabled or disabled.
1414:./Library/stm32f4xx_can.c ****   *          This parameter can be: 
1415:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt 
1416:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP0: FIFO 0 message pending Interrupt 
1417:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1418:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1419:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP1: FIFO 1 message pending Interrupt 
1420:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1421:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1422:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1423:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1424:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1425:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1426:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1427:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1428:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt
1429:./Library/stm32f4xx_can.c ****   * @param  NewState: new state of the CAN interrupts.
1430:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
1431:./Library/stm32f4xx_can.c ****   *          This parameter can be: ENABLE or DISABLE.
1432:./Library/stm32f4xx_can.c ****   * @retval None
1433:./Library/stm32f4xx_can.c ****   */
1434:./Library/stm32f4xx_can.c **** void CAN_ITConfig(CAN_TypeDef* CANx, uint32_t CAN_IT, FunctionalState NewState)
1435:./Library/stm32f4xx_can.c **** {
1436:./Library/stm32f4xx_can.c ****   /* Check the parameters */
1437:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1438:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_IT(CAN_IT));
1439:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1440:./Library/stm32f4xx_can.c **** 
1441:./Library/stm32f4xx_can.c ****   if (NewState != DISABLE)
1442:./Library/stm32f4xx_can.c ****   {
1443:./Library/stm32f4xx_can.c ****     /* Enable the selected CANx interrupt */
1444:./Library/stm32f4xx_can.c ****     CANx->IER |= CAN_IT;
1445:./Library/stm32f4xx_can.c ****   }
1446:./Library/stm32f4xx_can.c ****   else
1447:./Library/stm32f4xx_can.c ****   {
1448:./Library/stm32f4xx_can.c ****     /* Disable the selected CANx interrupt */
1449:./Library/stm32f4xx_can.c ****     CANx->IER &= ~CAN_IT;
1450:./Library/stm32f4xx_can.c ****   }
1451:./Library/stm32f4xx_can.c **** }
1452:./Library/stm32f4xx_can.c **** /**
1453:./Library/stm32f4xx_can.c ****   * @brief  Checks whether the specified CAN flag is set or not.
1454:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
1455:./Library/stm32f4xx_can.c ****   * @param  CAN_FLAG: specifies the flag to check.
ARM GAS  /tmp/ccd0Y8mk.s 			page 27


1456:./Library/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1457:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP0: Request MailBox0 Flag
1458:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP1: Request MailBox1 Flag
1459:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP2: Request MailBox2 Flag
1460:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FMP0: FIFO 0 Message Pending Flag   
1461:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF0: FIFO 0 Full Flag       
1462:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV0: FIFO 0 Overrun Flag 
1463:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FMP1: FIFO 1 Message Pending Flag   
1464:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF1: FIFO 1 Full Flag        
1465:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV1: FIFO 1 Overrun Flag     
1466:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_WKU: Wake up Flag
1467:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_SLAK: Sleep acknowledge Flag 
1468:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_EWG: Error Warning Flag
1469:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_EPV: Error Passive Flag  
1470:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_BOF: Bus-Off Flag    
1471:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_LEC: Last error code Flag
1472:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
1473:./Library/stm32f4xx_can.c ****   * @retval The new state of CAN_FLAG (SET or RESET).
1474:./Library/stm32f4xx_can.c ****   */
1475:./Library/stm32f4xx_can.c **** FlagStatus CAN_GetFlagStatus(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
1476:./Library/stm32f4xx_can.c **** {
1477:./Library/stm32f4xx_can.c ****   FlagStatus bitstatus = RESET;
1478:./Library/stm32f4xx_can.c ****   
1479:./Library/stm32f4xx_can.c ****   /* Check the parameters */
1480:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1481:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_GET_FLAG(CAN_FLAG));
1482:./Library/stm32f4xx_can.c ****   
1483:./Library/stm32f4xx_can.c **** 
1484:./Library/stm32f4xx_can.c ****   if((CAN_FLAG & CAN_FLAGS_ESR) != (uint32_t)RESET)
1485:./Library/stm32f4xx_can.c ****   { 
1486:./Library/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1487:./Library/stm32f4xx_can.c ****     if ((CANx->ESR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
1488:./Library/stm32f4xx_can.c ****     { 
1489:./Library/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1490:./Library/stm32f4xx_can.c ****       bitstatus = SET;
1491:./Library/stm32f4xx_can.c ****     }
1492:./Library/stm32f4xx_can.c ****     else
1493:./Library/stm32f4xx_can.c ****     { 
1494:./Library/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1495:./Library/stm32f4xx_can.c ****       bitstatus = RESET;
1496:./Library/stm32f4xx_can.c ****     }
1497:./Library/stm32f4xx_can.c ****   }
1498:./Library/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_MSR) != (uint32_t)RESET)
1499:./Library/stm32f4xx_can.c ****   { 
1500:./Library/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1501:./Library/stm32f4xx_can.c ****     if ((CANx->MSR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
1502:./Library/stm32f4xx_can.c ****     { 
1503:./Library/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1504:./Library/stm32f4xx_can.c ****       bitstatus = SET;
1505:./Library/stm32f4xx_can.c ****     }
1506:./Library/stm32f4xx_can.c ****     else
1507:./Library/stm32f4xx_can.c ****     { 
1508:./Library/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1509:./Library/stm32f4xx_can.c ****       bitstatus = RESET;
1510:./Library/stm32f4xx_can.c ****     }
1511:./Library/stm32f4xx_can.c ****   }
1512:./Library/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_TSR) != (uint32_t)RESET)
ARM GAS  /tmp/ccd0Y8mk.s 			page 28


1513:./Library/stm32f4xx_can.c ****   { 
1514:./Library/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1515:./Library/stm32f4xx_can.c ****     if ((CANx->TSR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
1516:./Library/stm32f4xx_can.c ****     { 
1517:./Library/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1518:./Library/stm32f4xx_can.c ****       bitstatus = SET;
1519:./Library/stm32f4xx_can.c ****     }
1520:./Library/stm32f4xx_can.c ****     else
1521:./Library/stm32f4xx_can.c ****     { 
1522:./Library/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1523:./Library/stm32f4xx_can.c ****       bitstatus = RESET;
1524:./Library/stm32f4xx_can.c ****     }
1525:./Library/stm32f4xx_can.c ****   }
1526:./Library/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_RF0R) != (uint32_t)RESET)
1527:./Library/stm32f4xx_can.c ****   { 
1528:./Library/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1529:./Library/stm32f4xx_can.c ****     if ((CANx->RF0R & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
1530:./Library/stm32f4xx_can.c ****     { 
1531:./Library/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1532:./Library/stm32f4xx_can.c ****       bitstatus = SET;
1533:./Library/stm32f4xx_can.c ****     }
1534:./Library/stm32f4xx_can.c ****     else
1535:./Library/stm32f4xx_can.c ****     { 
1536:./Library/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1537:./Library/stm32f4xx_can.c ****       bitstatus = RESET;
1538:./Library/stm32f4xx_can.c ****     }
1539:./Library/stm32f4xx_can.c ****   }
1540:./Library/stm32f4xx_can.c ****   else /* If(CAN_FLAG & CAN_FLAGS_RF1R != (uint32_t)RESET) */
1541:./Library/stm32f4xx_can.c ****   { 
1542:./Library/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1543:./Library/stm32f4xx_can.c ****     if ((uint32_t)(CANx->RF1R & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
1544:./Library/stm32f4xx_can.c ****     { 
1545:./Library/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1546:./Library/stm32f4xx_can.c ****       bitstatus = SET;
1547:./Library/stm32f4xx_can.c ****     }
1548:./Library/stm32f4xx_can.c ****     else
1549:./Library/stm32f4xx_can.c ****     { 
1550:./Library/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1551:./Library/stm32f4xx_can.c ****       bitstatus = RESET;
1552:./Library/stm32f4xx_can.c ****     }
1553:./Library/stm32f4xx_can.c ****   }
1554:./Library/stm32f4xx_can.c ****   /* Return the CAN_FLAG status */
1555:./Library/stm32f4xx_can.c ****   return  bitstatus;
1556:./Library/stm32f4xx_can.c **** }
1557:./Library/stm32f4xx_can.c **** 
1558:./Library/stm32f4xx_can.c **** /**
1559:./Library/stm32f4xx_can.c ****   * @brief  Clears the CAN's pending flags.
1560:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
1561:./Library/stm32f4xx_can.c ****   * @param  CAN_FLAG: specifies the flag to clear.
1562:./Library/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1563:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP0: Request MailBox0 Flag
1564:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP1: Request MailBox1 Flag
1565:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP2: Request MailBox2 Flag 
1566:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF0: FIFO 0 Full Flag       
1567:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV0: FIFO 0 Overrun Flag  
1568:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF1: FIFO 1 Full Flag        
1569:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV1: FIFO 1 Overrun Flag     
ARM GAS  /tmp/ccd0Y8mk.s 			page 29


1570:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_WKU: Wake up Flag
1571:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_SLAK: Sleep acknowledge Flag    
1572:./Library/stm32f4xx_can.c ****   *            @arg CAN_FLAG_LEC: Last error code Flag
1573:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
1574:./Library/stm32f4xx_can.c ****   * @retval None
1575:./Library/stm32f4xx_can.c ****   */
1576:./Library/stm32f4xx_can.c **** void CAN_ClearFlag(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
1577:./Library/stm32f4xx_can.c **** {
1578:./Library/stm32f4xx_can.c ****   uint32_t flagtmp=0;
1579:./Library/stm32f4xx_can.c ****   /* Check the parameters */
1580:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1581:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_CLEAR_FLAG(CAN_FLAG));
1582:./Library/stm32f4xx_can.c ****   
1583:./Library/stm32f4xx_can.c ****   if (CAN_FLAG == CAN_FLAG_LEC) /* ESR register */
1584:./Library/stm32f4xx_can.c ****   {
1585:./Library/stm32f4xx_can.c ****     /* Clear the selected CAN flags */
1586:./Library/stm32f4xx_can.c ****     CANx->ESR = (uint32_t)RESET;
1587:./Library/stm32f4xx_can.c ****   }
1588:./Library/stm32f4xx_can.c ****   else /* MSR or TSR or RF0R or RF1R */
1589:./Library/stm32f4xx_can.c ****   {
1590:./Library/stm32f4xx_can.c ****     flagtmp = CAN_FLAG & 0x000FFFFF;
1591:./Library/stm32f4xx_can.c **** 
1592:./Library/stm32f4xx_can.c ****     if ((CAN_FLAG & CAN_FLAGS_RF0R)!=(uint32_t)RESET)
1593:./Library/stm32f4xx_can.c ****     {
1594:./Library/stm32f4xx_can.c ****       /* Receive Flags */
1595:./Library/stm32f4xx_can.c ****       CANx->RF0R = (uint32_t)(flagtmp);
1596:./Library/stm32f4xx_can.c ****     }
1597:./Library/stm32f4xx_can.c ****     else if ((CAN_FLAG & CAN_FLAGS_RF1R)!=(uint32_t)RESET)
1598:./Library/stm32f4xx_can.c ****     {
1599:./Library/stm32f4xx_can.c ****       /* Receive Flags */
1600:./Library/stm32f4xx_can.c ****       CANx->RF1R = (uint32_t)(flagtmp);
1601:./Library/stm32f4xx_can.c ****     }
1602:./Library/stm32f4xx_can.c ****     else if ((CAN_FLAG & CAN_FLAGS_TSR)!=(uint32_t)RESET)
1603:./Library/stm32f4xx_can.c ****     {
1604:./Library/stm32f4xx_can.c ****       /* Transmit Flags */
1605:./Library/stm32f4xx_can.c ****       CANx->TSR = (uint32_t)(flagtmp);
1606:./Library/stm32f4xx_can.c ****     }
1607:./Library/stm32f4xx_can.c ****     else /* If((CAN_FLAG & CAN_FLAGS_MSR)!=(uint32_t)RESET) */
1608:./Library/stm32f4xx_can.c ****     {
1609:./Library/stm32f4xx_can.c ****       /* Operating mode Flags */
1610:./Library/stm32f4xx_can.c ****       CANx->MSR = (uint32_t)(flagtmp);
1611:./Library/stm32f4xx_can.c ****     }
1612:./Library/stm32f4xx_can.c ****   }
1613:./Library/stm32f4xx_can.c **** }
1614:./Library/stm32f4xx_can.c **** 
1615:./Library/stm32f4xx_can.c **** /**
1616:./Library/stm32f4xx_can.c ****   * @brief  Checks whether the specified CANx interrupt has occurred or not.
1617:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
1618:./Library/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the CAN interrupt source to check.
1619:./Library/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1620:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt 
1621:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP0: FIFO 0 message pending Interrupt 
1622:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1623:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1624:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP1: FIFO 1 message pending Interrupt 
1625:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1626:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
ARM GAS  /tmp/ccd0Y8mk.s 			page 30


1627:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1628:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1629:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1630:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1631:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1632:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1633:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt
1634:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
1635:./Library/stm32f4xx_can.c ****   * @retval The current state of CAN_IT (SET or RESET).
1636:./Library/stm32f4xx_can.c ****   */
1637:./Library/stm32f4xx_can.c **** ITStatus CAN_GetITStatus(CAN_TypeDef* CANx, uint32_t CAN_IT)
1638:./Library/stm32f4xx_can.c **** {
1639:./Library/stm32f4xx_can.c ****   ITStatus itstatus = RESET;
1640:./Library/stm32f4xx_can.c ****   /* Check the parameters */
1641:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1642:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_IT(CAN_IT));
1643:./Library/stm32f4xx_can.c ****   
1644:./Library/stm32f4xx_can.c ****   /* check the interrupt enable bit */
1645:./Library/stm32f4xx_can.c ****  if((CANx->IER & CAN_IT) != RESET)
1646:./Library/stm32f4xx_can.c ****  {
1647:./Library/stm32f4xx_can.c ****    /* in case the Interrupt is enabled, .... */
1648:./Library/stm32f4xx_can.c ****     switch (CAN_IT)
1649:./Library/stm32f4xx_can.c ****     {
1650:./Library/stm32f4xx_can.c ****       case CAN_IT_TME:
1651:./Library/stm32f4xx_can.c ****         /* Check CAN_TSR_RQCPx bits */
1652:./Library/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->TSR, CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2);  
1653:./Library/stm32f4xx_can.c ****         break;
1654:./Library/stm32f4xx_can.c ****       case CAN_IT_FMP0:
1655:./Library/stm32f4xx_can.c ****         /* Check CAN_RF0R_FMP0 bit */
1656:./Library/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FMP0);  
1657:./Library/stm32f4xx_can.c ****         break;
1658:./Library/stm32f4xx_can.c ****       case CAN_IT_FF0:
1659:./Library/stm32f4xx_can.c ****         /* Check CAN_RF0R_FULL0 bit */
1660:./Library/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FULL0);  
1661:./Library/stm32f4xx_can.c ****         break;
1662:./Library/stm32f4xx_can.c ****       case CAN_IT_FOV0:
1663:./Library/stm32f4xx_can.c ****         /* Check CAN_RF0R_FOVR0 bit */
1664:./Library/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FOVR0);  
1665:./Library/stm32f4xx_can.c ****         break;
1666:./Library/stm32f4xx_can.c ****       case CAN_IT_FMP1:
1667:./Library/stm32f4xx_can.c ****         /* Check CAN_RF1R_FMP1 bit */
1668:./Library/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FMP1);  
1669:./Library/stm32f4xx_can.c ****         break;
1670:./Library/stm32f4xx_can.c ****       case CAN_IT_FF1:
1671:./Library/stm32f4xx_can.c ****         /* Check CAN_RF1R_FULL1 bit */
1672:./Library/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FULL1);  
1673:./Library/stm32f4xx_can.c ****         break;
1674:./Library/stm32f4xx_can.c ****       case CAN_IT_FOV1:
1675:./Library/stm32f4xx_can.c ****         /* Check CAN_RF1R_FOVR1 bit */
1676:./Library/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FOVR1);  
1677:./Library/stm32f4xx_can.c ****         break;
1678:./Library/stm32f4xx_can.c ****       case CAN_IT_WKU:
1679:./Library/stm32f4xx_can.c ****         /* Check CAN_MSR_WKUI bit */
1680:./Library/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_WKUI);  
1681:./Library/stm32f4xx_can.c ****         break;
1682:./Library/stm32f4xx_can.c ****       case CAN_IT_SLK:
1683:./Library/stm32f4xx_can.c ****         /* Check CAN_MSR_SLAKI bit */
ARM GAS  /tmp/ccd0Y8mk.s 			page 31


1684:./Library/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_SLAKI);  
1685:./Library/stm32f4xx_can.c ****         break;
1686:./Library/stm32f4xx_can.c ****       case CAN_IT_EWG:
1687:./Library/stm32f4xx_can.c ****         /* Check CAN_ESR_EWGF bit */
1688:./Library/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EWGF);  
1689:./Library/stm32f4xx_can.c ****         break;
1690:./Library/stm32f4xx_can.c ****       case CAN_IT_EPV:
1691:./Library/stm32f4xx_can.c ****         /* Check CAN_ESR_EPVF bit */
1692:./Library/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EPVF);  
1693:./Library/stm32f4xx_can.c ****         break;
1694:./Library/stm32f4xx_can.c ****       case CAN_IT_BOF:
1695:./Library/stm32f4xx_can.c ****         /* Check CAN_ESR_BOFF bit */
1696:./Library/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_BOFF);  
1697:./Library/stm32f4xx_can.c ****         break;
1698:./Library/stm32f4xx_can.c ****       case CAN_IT_LEC:
1699:./Library/stm32f4xx_can.c ****         /* Check CAN_ESR_LEC bit */
1700:./Library/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_LEC);  
1701:./Library/stm32f4xx_can.c ****         break;
1702:./Library/stm32f4xx_can.c ****       case CAN_IT_ERR:
1703:./Library/stm32f4xx_can.c ****         /* Check CAN_MSR_ERRI bit */ 
1704:./Library/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_ERRI); 
1705:./Library/stm32f4xx_can.c ****         break;
1706:./Library/stm32f4xx_can.c ****       default:
1707:./Library/stm32f4xx_can.c ****         /* in case of error, return RESET */
1708:./Library/stm32f4xx_can.c ****         itstatus = RESET;
1709:./Library/stm32f4xx_can.c ****         break;
1710:./Library/stm32f4xx_can.c ****     }
1711:./Library/stm32f4xx_can.c ****   }
1712:./Library/stm32f4xx_can.c ****   else
1713:./Library/stm32f4xx_can.c ****   {
1714:./Library/stm32f4xx_can.c ****    /* in case the Interrupt is not enabled, return RESET */
1715:./Library/stm32f4xx_can.c ****     itstatus  = RESET;
1716:./Library/stm32f4xx_can.c ****   }
1717:./Library/stm32f4xx_can.c ****   
1718:./Library/stm32f4xx_can.c ****   /* Return the CAN_IT status */
1719:./Library/stm32f4xx_can.c ****   return  itstatus;
1720:./Library/stm32f4xx_can.c **** }
1721:./Library/stm32f4xx_can.c **** 
1722:./Library/stm32f4xx_can.c **** /**
1723:./Library/stm32f4xx_can.c ****   * @brief  Clears the CANx's interrupt pending bits.
1724:./Library/stm32f4xx_can.c ****   * @param  CANx: where x can be 1,2 or 3 to select the CAN peripheral.
1725:./Library/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the interrupt pending bit to clear.
1726:./Library/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1727:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt
1728:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1729:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1730:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1731:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1732:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1733:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1734:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1735:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1736:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1737:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1738:./Library/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt
1739:./Library/stm32f4xx_can.c ****   * @note   CAN3 peripheral is available only for STM32F413_423xx devices
1740:./Library/stm32f4xx_can.c ****   * @retval None
ARM GAS  /tmp/ccd0Y8mk.s 			page 32


1741:./Library/stm32f4xx_can.c ****   */
1742:./Library/stm32f4xx_can.c **** void CAN_ClearITPendingBit(CAN_TypeDef* CANx, uint32_t CAN_IT)
1743:./Library/stm32f4xx_can.c **** {
1744:./Library/stm32f4xx_can.c ****   /* Check the parameters */
1745:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1746:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_CLEAR_IT(CAN_IT));
1747:./Library/stm32f4xx_can.c **** 
1748:./Library/stm32f4xx_can.c ****   switch (CAN_IT)
1749:./Library/stm32f4xx_can.c ****   {
1750:./Library/stm32f4xx_can.c ****     case CAN_IT_TME:
1751:./Library/stm32f4xx_can.c ****       /* Clear CAN_TSR_RQCPx (rc_w1)*/
1752:./Library/stm32f4xx_can.c ****       CANx->TSR = CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2;  
1753:./Library/stm32f4xx_can.c ****       break;
1754:./Library/stm32f4xx_can.c ****     case CAN_IT_FF0:
1755:./Library/stm32f4xx_can.c ****       /* Clear CAN_RF0R_FULL0 (rc_w1)*/
1756:./Library/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FULL0; 
1757:./Library/stm32f4xx_can.c ****       break;
1758:./Library/stm32f4xx_can.c ****     case CAN_IT_FOV0:
1759:./Library/stm32f4xx_can.c ****       /* Clear CAN_RF0R_FOVR0 (rc_w1)*/
1760:./Library/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FOVR0; 
1761:./Library/stm32f4xx_can.c ****       break;
1762:./Library/stm32f4xx_can.c ****     case CAN_IT_FF1:
1763:./Library/stm32f4xx_can.c ****       /* Clear CAN_RF1R_FULL1 (rc_w1)*/
1764:./Library/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FULL1;  
1765:./Library/stm32f4xx_can.c ****       break;
1766:./Library/stm32f4xx_can.c ****     case CAN_IT_FOV1:
1767:./Library/stm32f4xx_can.c ****       /* Clear CAN_RF1R_FOVR1 (rc_w1)*/
1768:./Library/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FOVR1; 
1769:./Library/stm32f4xx_can.c ****       break;
1770:./Library/stm32f4xx_can.c ****     case CAN_IT_WKU:
1771:./Library/stm32f4xx_can.c ****       /* Clear CAN_MSR_WKUI (rc_w1)*/
1772:./Library/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_WKUI;  
1773:./Library/stm32f4xx_can.c ****       break;
1774:./Library/stm32f4xx_can.c ****     case CAN_IT_SLK:
1775:./Library/stm32f4xx_can.c ****       /* Clear CAN_MSR_SLAKI (rc_w1)*/ 
1776:./Library/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_SLAKI;   
1777:./Library/stm32f4xx_can.c ****       break;
1778:./Library/stm32f4xx_can.c ****     case CAN_IT_EWG:
1779:./Library/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1780:./Library/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI;
1781:./Library/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/ 
1782:./Library/stm32f4xx_can.c ****       break;
1783:./Library/stm32f4xx_can.c ****     case CAN_IT_EPV:
1784:./Library/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1785:./Library/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1786:./Library/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
1787:./Library/stm32f4xx_can.c ****       break;
1788:./Library/stm32f4xx_can.c ****     case CAN_IT_BOF:
1789:./Library/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */ 
1790:./Library/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1791:./Library/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
1792:./Library/stm32f4xx_can.c ****        break;
1793:./Library/stm32f4xx_can.c ****     case CAN_IT_LEC:
1794:./Library/stm32f4xx_can.c ****       /*  Clear LEC bits */
1795:./Library/stm32f4xx_can.c ****       CANx->ESR = RESET; 
1796:./Library/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1797:./Library/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
ARM GAS  /tmp/ccd0Y8mk.s 			page 33


1798:./Library/stm32f4xx_can.c ****       break;
1799:./Library/stm32f4xx_can.c ****     case CAN_IT_ERR:
1800:./Library/stm32f4xx_can.c ****       /*Clear LEC bits */
1801:./Library/stm32f4xx_can.c ****       CANx->ESR = RESET; 
1802:./Library/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1803:./Library/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1804:./Library/stm32f4xx_can.c ****        /* @note BOFF, EPVF and EWGF Flags are cleared by hardware depending on the CAN Bus status*/
1805:./Library/stm32f4xx_can.c ****        break;
1806:./Library/stm32f4xx_can.c ****     default:
1807:./Library/stm32f4xx_can.c ****        break;
1808:./Library/stm32f4xx_can.c ****    }
1809:./Library/stm32f4xx_can.c **** }
1810:./Library/stm32f4xx_can.c ****  /**
1811:./Library/stm32f4xx_can.c ****   * @}
1812:./Library/stm32f4xx_can.c ****   */
1813:./Library/stm32f4xx_can.c **** 
1814:./Library/stm32f4xx_can.c **** /**
1815:./Library/stm32f4xx_can.c ****   * @brief  Checks whether the CAN interrupt has occurred or not.
1816:./Library/stm32f4xx_can.c ****   * @param  CAN_Reg: specifies the CAN interrupt register to check.
1817:./Library/stm32f4xx_can.c ****   * @param  It_Bit: specifies the interrupt source bit to check.
1818:./Library/stm32f4xx_can.c ****   * @retval The new state of the CAN Interrupt (SET or RESET).
1819:./Library/stm32f4xx_can.c ****   */
1820:./Library/stm32f4xx_can.c **** static ITStatus CheckITStatus(uint32_t CAN_Reg, uint32_t It_Bit)
1821:./Library/stm32f4xx_can.c **** {
  29              		.loc 1 1821 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
1822:./Library/stm32f4xx_can.c ****   ITStatus pendingbitstatus = RESET;
  34              		.loc 1 1822 3 view .LVU1
1823:./Library/stm32f4xx_can.c ****   
1824:./Library/stm32f4xx_can.c ****   if ((CAN_Reg & It_Bit) != (uint32_t)RESET)
  35              		.loc 1 1824 3 view .LVU2
  36              		.loc 1 1824 6 is_stmt 0 view .LVU3
  37 0000 0842     		tst	r0, r1
  38 0002 01D0     		beq	.L3
1825:./Library/stm32f4xx_can.c ****   {
1826:./Library/stm32f4xx_can.c ****     /* CAN_IT is set */
1827:./Library/stm32f4xx_can.c ****     pendingbitstatus = SET;
  39              		.loc 1 1827 22 view .LVU4
  40 0004 0120     		movs	r0, #1
  41              	.LVL1:
  42              		.loc 1 1827 22 view .LVU5
  43 0006 7047     		bx	lr
  44              	.LVL2:
  45              	.L3:
1828:./Library/stm32f4xx_can.c ****   }
1829:./Library/stm32f4xx_can.c ****   else
1830:./Library/stm32f4xx_can.c ****   {
1831:./Library/stm32f4xx_can.c ****     /* CAN_IT is reset */
1832:./Library/stm32f4xx_can.c ****     pendingbitstatus = RESET;
  46              		.loc 1 1832 22 view .LVU6
  47 0008 0020     		movs	r0, #0
  48              	.LVL3:
1833:./Library/stm32f4xx_can.c ****   }
1834:./Library/stm32f4xx_can.c ****   return pendingbitstatus;
ARM GAS  /tmp/ccd0Y8mk.s 			page 34


  49              		.loc 1 1834 3 is_stmt 1 view .LVU7
1835:./Library/stm32f4xx_can.c **** }
  50              		.loc 1 1835 1 is_stmt 0 view .LVU8
  51 000a 7047     		bx	lr
  52              		.cfi_endproc
  53              	.LFE147:
  55              		.section	.text.CAN_DeInit,"ax",%progbits
  56              		.align	1
  57              		.global	CAN_DeInit
  58              		.syntax unified
  59              		.thumb
  60              		.thumb_func
  62              	CAN_DeInit:
  63              	.LVL4:
  64              	.LFB123:
 161:./Library/stm32f4xx_can.c ****   /* Check the parameters */
  65              		.loc 1 161 1 is_stmt 1 view -0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
 161:./Library/stm32f4xx_can.c ****   /* Check the parameters */
  69              		.loc 1 161 1 is_stmt 0 view .LVU10
  70 0000 08B5     		push	{r3, lr}
  71              	.LCFI0:
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 3, -8
  74              		.cfi_offset 14, -4
 163:./Library/stm32f4xx_can.c ****  
  75              		.loc 1 163 3 is_stmt 1 view .LVU11
 165:./Library/stm32f4xx_can.c ****   {
  76              		.loc 1 165 3 view .LVU12
 165:./Library/stm32f4xx_can.c ****   {
  77              		.loc 1 165 6 is_stmt 0 view .LVU13
  78 0002 0C4B     		ldr	r3, .L9
  79 0004 9842     		cmp	r0, r3
  80 0006 0AD0     		beq	.L8
 192:./Library/stm32f4xx_can.c ****     /* Release CAN2 from reset state */
  81              		.loc 1 192 5 is_stmt 1 view .LVU14
  82 0008 0121     		movs	r1, #1
  83 000a 4FF08060 		mov	r0, #67108864
  84              	.LVL5:
 192:./Library/stm32f4xx_can.c ****     /* Release CAN2 from reset state */
  85              		.loc 1 192 5 is_stmt 0 view .LVU15
  86 000e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  87              	.LVL6:
 194:./Library/stm32f4xx_can.c ****   }
  88              		.loc 1 194 5 is_stmt 1 view .LVU16
  89 0012 0021     		movs	r1, #0
  90 0014 4FF08060 		mov	r0, #67108864
  91 0018 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  92              	.LVL7:
  93              	.L4:
 197:./Library/stm32f4xx_can.c **** 
  94              		.loc 1 197 1 is_stmt 0 view .LVU17
  95 001c 08BD     		pop	{r3, pc}
  96              	.LVL8:
  97              	.L8:
ARM GAS  /tmp/ccd0Y8mk.s 			page 35


 168:./Library/stm32f4xx_can.c ****     /* Release CAN1 from reset state */
  98              		.loc 1 168 5 is_stmt 1 view .LVU18
  99 001e 0121     		movs	r1, #1
 100 0020 4FF00070 		mov	r0, #33554432
 101              	.LVL9:
 168:./Library/stm32f4xx_can.c ****     /* Release CAN1 from reset state */
 102              		.loc 1 168 5 is_stmt 0 view .LVU19
 103 0024 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 104              	.LVL10:
 170:./Library/stm32f4xx_can.c ****   }
 105              		.loc 1 170 5 is_stmt 1 view .LVU20
 106 0028 0021     		movs	r1, #0
 107 002a 4FF00070 		mov	r0, #33554432
 108 002e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 109              	.LVL11:
 110 0032 F3E7     		b	.L4
 111              	.L10:
 112              		.align	2
 113              	.L9:
 114 0034 00640040 		.word	1073767424
 115              		.cfi_endproc
 116              	.LFE123:
 118              		.section	.text.CAN_Init,"ax",%progbits
 119              		.align	1
 120              		.global	CAN_Init
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 125              	CAN_Init:
 126              	.LVL12:
 127              	.LFB124:
 210:./Library/stm32f4xx_can.c ****   uint8_t InitStatus = CAN_InitStatus_Failed;
 128              		.loc 1 210 1 view -0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              		@ link register save eliminated.
 211:./Library/stm32f4xx_can.c ****   uint32_t wait_ack = 0x00000000;
 133              		.loc 1 211 3 view .LVU22
 212:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 134              		.loc 1 212 3 view .LVU23
 214:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TTCM));
 135              		.loc 1 214 3 view .LVU24
 215:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_ABOM));
 136              		.loc 1 215 3 view .LVU25
 216:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_AWUM));
 137              		.loc 1 216 3 view .LVU26
 217:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_NART));
 138              		.loc 1 217 3 view .LVU27
 218:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_RFLM));
 139              		.loc 1 218 3 view .LVU28
 219:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TXFP));
 140              		.loc 1 219 3 view .LVU29
 220:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_MODE(CAN_InitStruct->CAN_Mode));
 141              		.loc 1 220 3 view .LVU30
 221:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_SJW(CAN_InitStruct->CAN_SJW));
 142              		.loc 1 221 3 view .LVU31
ARM GAS  /tmp/ccd0Y8mk.s 			page 36


 222:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_BS1(CAN_InitStruct->CAN_BS1));
 143              		.loc 1 222 3 view .LVU32
 223:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_BS2(CAN_InitStruct->CAN_BS2));
 144              		.loc 1 223 3 view .LVU33
 224:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_PRESCALER(CAN_InitStruct->CAN_Prescaler));
 145              		.loc 1 224 3 view .LVU34
 225:./Library/stm32f4xx_can.c **** 
 146              		.loc 1 225 3 view .LVU35
 228:./Library/stm32f4xx_can.c **** 
 147              		.loc 1 228 3 view .LVU36
 228:./Library/stm32f4xx_can.c **** 
 148              		.loc 1 228 7 is_stmt 0 view .LVU37
 149 0000 0368     		ldr	r3, [r0]
 228:./Library/stm32f4xx_can.c **** 
 150              		.loc 1 228 13 view .LVU38
 151 0002 23F00203 		bic	r3, r3, #2
 152 0006 0360     		str	r3, [r0]
 231:./Library/stm32f4xx_can.c **** 
 153              		.loc 1 231 3 is_stmt 1 view .LVU39
 231:./Library/stm32f4xx_can.c **** 
 154              		.loc 1 231 7 is_stmt 0 view .LVU40
 155 0008 0368     		ldr	r3, [r0]
 231:./Library/stm32f4xx_can.c **** 
 156              		.loc 1 231 13 view .LVU41
 157 000a 43F00103 		orr	r3, r3, #1
 158 000e 0360     		str	r3, [r0]
 234:./Library/stm32f4xx_can.c ****   {
 159              		.loc 1 234 3 is_stmt 1 view .LVU42
 212:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 160              		.loc 1 212 12 is_stmt 0 view .LVU43
 161 0010 0023     		movs	r3, #0
 162              	.LVL13:
 163              	.L12:
 234:./Library/stm32f4xx_can.c ****   {
 164              		.loc 1 234 55 is_stmt 1 view .LVU44
 234:./Library/stm32f4xx_can.c ****   {
 165              		.loc 1 234 16 is_stmt 0 view .LVU45
 166 0012 4268     		ldr	r2, [r0, #4]
 234:./Library/stm32f4xx_can.c ****   {
 167              		.loc 1 234 55 view .LVU46
 168 0014 12F0010F 		tst	r2, #1
 169 0018 05D1     		bne	.L13
 234:./Library/stm32f4xx_can.c ****   {
 170              		.loc 1 234 55 discriminator 1 view .LVU47
 171 001a 4FF6FF72 		movw	r2, #65535
 172 001e 9342     		cmp	r3, r2
 173 0020 01D0     		beq	.L13
 236:./Library/stm32f4xx_can.c ****   }
 174              		.loc 1 236 5 is_stmt 1 view .LVU48
 236:./Library/stm32f4xx_can.c ****   }
 175              		.loc 1 236 13 is_stmt 0 view .LVU49
 176 0022 0133     		adds	r3, r3, #1
 177              	.LVL14:
 236:./Library/stm32f4xx_can.c ****   }
 178              		.loc 1 236 13 view .LVU50
 179 0024 F5E7     		b	.L12
 180              	.L13:
ARM GAS  /tmp/ccd0Y8mk.s 			page 37


 240:./Library/stm32f4xx_can.c ****   {
 181              		.loc 1 240 3 is_stmt 1 view .LVU51
 240:./Library/stm32f4xx_can.c ****   {
 182              		.loc 1 240 12 is_stmt 0 view .LVU52
 183 0026 4368     		ldr	r3, [r0, #4]
 184              	.LVL15:
 240:./Library/stm32f4xx_can.c ****   {
 185              		.loc 1 240 6 view .LVU53
 186 0028 13F0010F 		tst	r3, #1
 187 002c 6BD0     		beq	.L31
 247:./Library/stm32f4xx_can.c ****     {
 188              		.loc 1 247 5 is_stmt 1 view .LVU54
 247:./Library/stm32f4xx_can.c ****     {
 189              		.loc 1 247 23 is_stmt 0 view .LVU55
 190 002e 8B79     		ldrb	r3, [r1, #6]	@ zero_extendqisi2
 247:./Library/stm32f4xx_can.c ****     {
 191              		.loc 1 247 8 view .LVU56
 192 0030 012B     		cmp	r3, #1
 193 0032 3BD0     		beq	.L33
 253:./Library/stm32f4xx_can.c ****     }
 194              		.loc 1 253 7 is_stmt 1 view .LVU57
 253:./Library/stm32f4xx_can.c ****     }
 195              		.loc 1 253 11 is_stmt 0 view .LVU58
 196 0034 0368     		ldr	r3, [r0]
 253:./Library/stm32f4xx_can.c ****     }
 197              		.loc 1 253 17 view .LVU59
 198 0036 23F08003 		bic	r3, r3, #128
 199 003a 0360     		str	r3, [r0]
 200              	.L17:
 257:./Library/stm32f4xx_can.c ****     {
 201              		.loc 1 257 5 is_stmt 1 view .LVU60
 257:./Library/stm32f4xx_can.c ****     {
 202              		.loc 1 257 23 is_stmt 0 view .LVU61
 203 003c CB79     		ldrb	r3, [r1, #7]	@ zero_extendqisi2
 257:./Library/stm32f4xx_can.c ****     {
 204              		.loc 1 257 8 view .LVU62
 205 003e 012B     		cmp	r3, #1
 206 0040 39D0     		beq	.L34
 263:./Library/stm32f4xx_can.c ****     }
 207              		.loc 1 263 7 is_stmt 1 view .LVU63
 263:./Library/stm32f4xx_can.c ****     }
 208              		.loc 1 263 11 is_stmt 0 view .LVU64
 209 0042 0368     		ldr	r3, [r0]
 263:./Library/stm32f4xx_can.c ****     }
 210              		.loc 1 263 17 view .LVU65
 211 0044 23F04003 		bic	r3, r3, #64
 212 0048 0360     		str	r3, [r0]
 213              	.L19:
 267:./Library/stm32f4xx_can.c ****     {
 214              		.loc 1 267 5 is_stmt 1 view .LVU66
 267:./Library/stm32f4xx_can.c ****     {
 215              		.loc 1 267 23 is_stmt 0 view .LVU67
 216 004a 0B7A     		ldrb	r3, [r1, #8]	@ zero_extendqisi2
 267:./Library/stm32f4xx_can.c ****     {
 217              		.loc 1 267 8 view .LVU68
 218 004c 012B     		cmp	r3, #1
 219 004e 37D0     		beq	.L35
ARM GAS  /tmp/ccd0Y8mk.s 			page 38


 273:./Library/stm32f4xx_can.c ****     }
 220              		.loc 1 273 7 is_stmt 1 view .LVU69
 273:./Library/stm32f4xx_can.c ****     }
 221              		.loc 1 273 11 is_stmt 0 view .LVU70
 222 0050 0368     		ldr	r3, [r0]
 273:./Library/stm32f4xx_can.c ****     }
 223              		.loc 1 273 17 view .LVU71
 224 0052 23F02003 		bic	r3, r3, #32
 225 0056 0360     		str	r3, [r0]
 226              	.L21:
 277:./Library/stm32f4xx_can.c ****     {
 227              		.loc 1 277 5 is_stmt 1 view .LVU72
 277:./Library/stm32f4xx_can.c ****     {
 228              		.loc 1 277 23 is_stmt 0 view .LVU73
 229 0058 4B7A     		ldrb	r3, [r1, #9]	@ zero_extendqisi2
 277:./Library/stm32f4xx_can.c ****     {
 230              		.loc 1 277 8 view .LVU74
 231 005a 012B     		cmp	r3, #1
 232 005c 35D0     		beq	.L36
 283:./Library/stm32f4xx_can.c ****     }
 233              		.loc 1 283 7 is_stmt 1 view .LVU75
 283:./Library/stm32f4xx_can.c ****     }
 234              		.loc 1 283 11 is_stmt 0 view .LVU76
 235 005e 0368     		ldr	r3, [r0]
 283:./Library/stm32f4xx_can.c ****     }
 236              		.loc 1 283 17 view .LVU77
 237 0060 23F01003 		bic	r3, r3, #16
 238 0064 0360     		str	r3, [r0]
 239              	.L23:
 287:./Library/stm32f4xx_can.c ****     {
 240              		.loc 1 287 5 is_stmt 1 view .LVU78
 287:./Library/stm32f4xx_can.c ****     {
 241              		.loc 1 287 23 is_stmt 0 view .LVU79
 242 0066 8B7A     		ldrb	r3, [r1, #10]	@ zero_extendqisi2
 287:./Library/stm32f4xx_can.c ****     {
 243              		.loc 1 287 8 view .LVU80
 244 0068 012B     		cmp	r3, #1
 245 006a 33D0     		beq	.L37
 293:./Library/stm32f4xx_can.c ****     }
 246              		.loc 1 293 7 is_stmt 1 view .LVU81
 293:./Library/stm32f4xx_can.c ****     }
 247              		.loc 1 293 11 is_stmt 0 view .LVU82
 248 006c 0368     		ldr	r3, [r0]
 293:./Library/stm32f4xx_can.c ****     }
 249              		.loc 1 293 17 view .LVU83
 250 006e 23F00803 		bic	r3, r3, #8
 251 0072 0360     		str	r3, [r0]
 252              	.L25:
 297:./Library/stm32f4xx_can.c ****     {
 253              		.loc 1 297 5 is_stmt 1 view .LVU84
 297:./Library/stm32f4xx_can.c ****     {
 254              		.loc 1 297 23 is_stmt 0 view .LVU85
 255 0074 CB7A     		ldrb	r3, [r1, #11]	@ zero_extendqisi2
 297:./Library/stm32f4xx_can.c ****     {
 256              		.loc 1 297 8 view .LVU86
 257 0076 012B     		cmp	r3, #1
 258 0078 31D0     		beq	.L38
ARM GAS  /tmp/ccd0Y8mk.s 			page 39


 303:./Library/stm32f4xx_can.c ****     }
 259              		.loc 1 303 7 is_stmt 1 view .LVU87
 303:./Library/stm32f4xx_can.c ****     }
 260              		.loc 1 303 11 is_stmt 0 view .LVU88
 261 007a 0368     		ldr	r3, [r0]
 303:./Library/stm32f4xx_can.c ****     }
 262              		.loc 1 303 17 view .LVU89
 263 007c 23F00403 		bic	r3, r3, #4
 264 0080 0360     		str	r3, [r0]
 265              	.L27:
 307:./Library/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 266              		.loc 1 307 5 is_stmt 1 view .LVU90
 307:./Library/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 267              		.loc 1 307 52 is_stmt 0 view .LVU91
 268 0082 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
 308:./Library/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 269              		.loc 1 308 42 view .LVU92
 270 0084 CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 308:./Library/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 271              		.loc 1 308 52 view .LVU93
 272 0086 1B06     		lsls	r3, r3, #24
 307:./Library/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 273              		.loc 1 307 70 view .LVU94
 274 0088 43EA8273 		orr	r3, r3, r2, lsl #30
 309:./Library/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
 275              		.loc 1 309 42 view .LVU95
 276 008c 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 308:./Library/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 277              		.loc 1 308 59 view .LVU96
 278 008e 43EA0243 		orr	r3, r3, r2, lsl #16
 310:./Library/stm32f4xx_can.c ****                ((uint32_t)CAN_InitStruct->CAN_Prescaler - 1);
 279              		.loc 1 310 42 view .LVU97
 280 0092 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 309:./Library/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
 281              		.loc 1 309 59 view .LVU98
 282 0094 43EA0253 		orr	r3, r3, r2, lsl #20
 311:./Library/stm32f4xx_can.c **** 
 283              		.loc 1 311 41 view .LVU99
 284 0098 0A88     		ldrh	r2, [r1]
 311:./Library/stm32f4xx_can.c **** 
 285              		.loc 1 311 57 view .LVU100
 286 009a 013A     		subs	r2, r2, #1
 310:./Library/stm32f4xx_can.c ****                ((uint32_t)CAN_InitStruct->CAN_Prescaler - 1);
 287              		.loc 1 310 59 view .LVU101
 288 009c 1343     		orrs	r3, r3, r2
 307:./Library/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 289              		.loc 1 307 15 view .LVU102
 290 009e C361     		str	r3, [r0, #28]
 314:./Library/stm32f4xx_can.c **** 
 291              		.loc 1 314 5 is_stmt 1 view .LVU103
 314:./Library/stm32f4xx_can.c **** 
 292              		.loc 1 314 9 is_stmt 0 view .LVU104
 293 00a0 0368     		ldr	r3, [r0]
 314:./Library/stm32f4xx_can.c **** 
 294              		.loc 1 314 15 view .LVU105
 295 00a2 23F00103 		bic	r3, r3, #1
 296 00a6 0360     		str	r3, [r0]
ARM GAS  /tmp/ccd0Y8mk.s 			page 40


 317:./Library/stm32f4xx_can.c **** 
 297              		.loc 1 317 4 is_stmt 1 view .LVU106
 298              	.LVL16:
 319:./Library/stm32f4xx_can.c ****    {
 299              		.loc 1 319 4 view .LVU107
 317:./Library/stm32f4xx_can.c **** 
 300              		.loc 1 317 13 is_stmt 0 view .LVU108
 301 00a8 0023     		movs	r3, #0
 319:./Library/stm32f4xx_can.c ****    {
 302              		.loc 1 319 10 view .LVU109
 303 00aa 1EE0     		b	.L28
 304              	.LVL17:
 305              	.L33:
 249:./Library/stm32f4xx_can.c ****     }
 306              		.loc 1 249 7 is_stmt 1 view .LVU110
 249:./Library/stm32f4xx_can.c ****     }
 307              		.loc 1 249 11 is_stmt 0 view .LVU111
 308 00ac 0368     		ldr	r3, [r0]
 249:./Library/stm32f4xx_can.c ****     }
 309              		.loc 1 249 17 view .LVU112
 310 00ae 43F08003 		orr	r3, r3, #128
 311 00b2 0360     		str	r3, [r0]
 312 00b4 C2E7     		b	.L17
 313              	.L34:
 259:./Library/stm32f4xx_can.c ****     }
 314              		.loc 1 259 7 is_stmt 1 view .LVU113
 259:./Library/stm32f4xx_can.c ****     }
 315              		.loc 1 259 11 is_stmt 0 view .LVU114
 316 00b6 0368     		ldr	r3, [r0]
 259:./Library/stm32f4xx_can.c ****     }
 317              		.loc 1 259 17 view .LVU115
 318 00b8 43F04003 		orr	r3, r3, #64
 319 00bc 0360     		str	r3, [r0]
 320 00be C4E7     		b	.L19
 321              	.L35:
 269:./Library/stm32f4xx_can.c ****     }
 322              		.loc 1 269 7 is_stmt 1 view .LVU116
 269:./Library/stm32f4xx_can.c ****     }
 323              		.loc 1 269 11 is_stmt 0 view .LVU117
 324 00c0 0368     		ldr	r3, [r0]
 269:./Library/stm32f4xx_can.c ****     }
 325              		.loc 1 269 17 view .LVU118
 326 00c2 43F02003 		orr	r3, r3, #32
 327 00c6 0360     		str	r3, [r0]
 328 00c8 C6E7     		b	.L21
 329              	.L36:
 279:./Library/stm32f4xx_can.c ****     }
 330              		.loc 1 279 7 is_stmt 1 view .LVU119
 279:./Library/stm32f4xx_can.c ****     }
 331              		.loc 1 279 11 is_stmt 0 view .LVU120
 332 00ca 0368     		ldr	r3, [r0]
 279:./Library/stm32f4xx_can.c ****     }
 333              		.loc 1 279 17 view .LVU121
 334 00cc 43F01003 		orr	r3, r3, #16
 335 00d0 0360     		str	r3, [r0]
 336 00d2 C8E7     		b	.L23
 337              	.L37:
ARM GAS  /tmp/ccd0Y8mk.s 			page 41


 289:./Library/stm32f4xx_can.c ****     }
 338              		.loc 1 289 7 is_stmt 1 view .LVU122
 289:./Library/stm32f4xx_can.c ****     }
 339              		.loc 1 289 11 is_stmt 0 view .LVU123
 340 00d4 0368     		ldr	r3, [r0]
 289:./Library/stm32f4xx_can.c ****     }
 341              		.loc 1 289 17 view .LVU124
 342 00d6 43F00803 		orr	r3, r3, #8
 343 00da 0360     		str	r3, [r0]
 344 00dc CAE7     		b	.L25
 345              	.L38:
 299:./Library/stm32f4xx_can.c ****     }
 346              		.loc 1 299 7 is_stmt 1 view .LVU125
 299:./Library/stm32f4xx_can.c ****     }
 347              		.loc 1 299 11 is_stmt 0 view .LVU126
 348 00de 0368     		ldr	r3, [r0]
 299:./Library/stm32f4xx_can.c ****     }
 349              		.loc 1 299 17 view .LVU127
 350 00e0 43F00403 		orr	r3, r3, #4
 351 00e4 0360     		str	r3, [r0]
 352 00e6 CCE7     		b	.L27
 353              	.LVL18:
 354              	.L30:
 321:./Library/stm32f4xx_can.c ****    }
 355              		.loc 1 321 6 is_stmt 1 view .LVU128
 321:./Library/stm32f4xx_can.c ****    }
 356              		.loc 1 321 14 is_stmt 0 view .LVU129
 357 00e8 0133     		adds	r3, r3, #1
 358              	.LVL19:
 359              	.L28:
 319:./Library/stm32f4xx_can.c ****    {
 360              		.loc 1 319 56 is_stmt 1 view .LVU130
 319:./Library/stm32f4xx_can.c ****    {
 361              		.loc 1 319 17 is_stmt 0 view .LVU131
 362 00ea 4268     		ldr	r2, [r0, #4]
 319:./Library/stm32f4xx_can.c ****    {
 363              		.loc 1 319 56 view .LVU132
 364 00ec 12F0010F 		tst	r2, #1
 365 00f0 03D0     		beq	.L29
 319:./Library/stm32f4xx_can.c ****    {
 366              		.loc 1 319 56 discriminator 1 view .LVU133
 367 00f2 4FF6FF72 		movw	r2, #65535
 368 00f6 9342     		cmp	r3, r2
 369 00f8 F6D1     		bne	.L30
 370              	.L29:
 325:./Library/stm32f4xx_can.c ****     {
 371              		.loc 1 325 5 is_stmt 1 view .LVU134
 325:./Library/stm32f4xx_can.c ****     {
 372              		.loc 1 325 14 is_stmt 0 view .LVU135
 373 00fa 4368     		ldr	r3, [r0, #4]
 374              	.LVL20:
 325:./Library/stm32f4xx_can.c ****     {
 375              		.loc 1 325 8 view .LVU136
 376 00fc 13F0010F 		tst	r3, #1
 377 0100 03D0     		beq	.L32
 327:./Library/stm32f4xx_can.c ****     }
 378              		.loc 1 327 18 view .LVU137
ARM GAS  /tmp/ccd0Y8mk.s 			page 42


 379 0102 0020     		movs	r0, #0
 380              	.LVL21:
 327:./Library/stm32f4xx_can.c ****     }
 381              		.loc 1 327 18 view .LVU138
 382 0104 7047     		bx	lr
 383              	.LVL22:
 384              	.L31:
 242:./Library/stm32f4xx_can.c ****   }
 385              		.loc 1 242 16 view .LVU139
 386 0106 0020     		movs	r0, #0
 387              	.LVL23:
 242:./Library/stm32f4xx_can.c ****   }
 388              		.loc 1 242 16 view .LVU140
 389 0108 7047     		bx	lr
 390              	.LVL24:
 391              	.L32:
 331:./Library/stm32f4xx_can.c ****     }
 392              		.loc 1 331 18 view .LVU141
 393 010a 0120     		movs	r0, #1
 394              	.LVL25:
 336:./Library/stm32f4xx_can.c **** }
 395              		.loc 1 336 3 is_stmt 1 view .LVU142
 337:./Library/stm32f4xx_can.c **** 
 396              		.loc 1 337 1 is_stmt 0 view .LVU143
 397 010c 7047     		bx	lr
 398              		.cfi_endproc
 399              	.LFE124:
 401              		.section	.text.CAN_FilterInit,"ax",%progbits
 402              		.align	1
 403              		.global	CAN_FilterInit
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 408              	CAN_FilterInit:
 409              	.LVL26:
 410              	.LFB125:
 442:./Library/stm32f4xx_can.c ****   uint32_t filter_number_bit_pos = 0;
 411              		.loc 1 442 1 is_stmt 1 view -0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 442:./Library/stm32f4xx_can.c ****   uint32_t filter_number_bit_pos = 0;
 415              		.loc 1 442 1 is_stmt 0 view .LVU145
 416 0000 10B5     		push	{r4, lr}
 417              	.LCFI1:
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 4, -8
 420              		.cfi_offset 14, -4
 443:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 421              		.loc 1 443 3 is_stmt 1 view .LVU146
 422              	.LVL27:
 445:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_MODE(CAN_FilterInitStruct->CAN_FilterMode));
 423              		.loc 1 445 3 view .LVU147
 446:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_SCALE(CAN_FilterInitStruct->CAN_FilterScale));
 424              		.loc 1 446 3 view .LVU148
 447:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_FIFO(CAN_FilterInitStruct->CAN_FilterFIFOAssignment));
 425              		.loc 1 447 3 view .LVU149
ARM GAS  /tmp/ccd0Y8mk.s 			page 43


 448:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_FilterInitStruct->CAN_FilterActivation));
 426              		.loc 1 448 3 view .LVU150
 449:./Library/stm32f4xx_can.c **** 
 427              		.loc 1 449 3 view .LVU151
 451:./Library/stm32f4xx_can.c **** 
 428              		.loc 1 451 3 view .LVU152
 451:./Library/stm32f4xx_can.c **** 
 429              		.loc 1 451 64 is_stmt 0 view .LVU153
 430 0002 827A     		ldrb	r2, [r0, #10]	@ zero_extendqisi2
 451:./Library/stm32f4xx_can.c **** 
 431              		.loc 1 451 25 view .LVU154
 432 0004 0123     		movs	r3, #1
 433 0006 9340     		lsls	r3, r3, r2
 434              	.LVL28:
 454:./Library/stm32f4xx_can.c **** 
 435              		.loc 1 454 3 is_stmt 1 view .LVU155
 454:./Library/stm32f4xx_can.c **** 
 436              		.loc 1 454 7 is_stmt 0 view .LVU156
 437 0008 3F4A     		ldr	r2, .L51
 438 000a D2F80012 		ldr	r1, [r2, #512]
 454:./Library/stm32f4xx_can.c **** 
 439              		.loc 1 454 13 view .LVU157
 440 000e 41F00101 		orr	r1, r1, #1
 441 0012 C2F80012 		str	r1, [r2, #512]
 457:./Library/stm32f4xx_can.c **** 
 442              		.loc 1 457 3 is_stmt 1 view .LVU158
 457:./Library/stm32f4xx_can.c **** 
 443              		.loc 1 457 7 is_stmt 0 view .LVU159
 444 0016 D2F81C12 		ldr	r1, [r2, #540]
 457:./Library/stm32f4xx_can.c **** 
 445              		.loc 1 457 17 view .LVU160
 446 001a 6FEA030C 		mvn	ip, r3
 457:./Library/stm32f4xx_can.c **** 
 447              		.loc 1 457 14 view .LVU161
 448 001e 21EA0301 		bic	r1, r1, r3
 449 0022 C2F81C12 		str	r1, [r2, #540]
 460:./Library/stm32f4xx_can.c ****   {
 450              		.loc 1 460 3 is_stmt 1 view .LVU162
 460:./Library/stm32f4xx_can.c ****   {
 451              		.loc 1 460 27 is_stmt 0 view .LVU163
 452 0026 027B     		ldrb	r2, [r0, #12]	@ zero_extendqisi2
 460:./Library/stm32f4xx_can.c ****   {
 453              		.loc 1 460 6 view .LVU164
 454 0028 D2B9     		cbnz	r2, .L40
 463:./Library/stm32f4xx_can.c **** 
 455              		.loc 1 463 5 is_stmt 1 view .LVU165
 463:./Library/stm32f4xx_can.c **** 
 456              		.loc 1 463 9 is_stmt 0 view .LVU166
 457 002a 374A     		ldr	r2, .L51
 458 002c D2F80C12 		ldr	r1, [r2, #524]
 463:./Library/stm32f4xx_can.c **** 
 459              		.loc 1 463 16 view .LVU167
 460 0030 0CEA0101 		and	r1, ip, r1
 461 0034 C2F80C12 		str	r1, [r2, #524]
 467:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 462              		.loc 1 467 5 is_stmt 1 view .LVU168
 468:./Library/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
ARM GAS  /tmp/ccd0Y8mk.s 			page 44


 463              		.loc 1 468 53 is_stmt 0 view .LVU169
 464 0038 B0F806E0 		ldrh	lr, [r0, #6]
 469:./Library/stm32f4xx_can.c **** 
 465              		.loc 1 469 53 view .LVU170
 466 003c 4488     		ldrh	r4, [r0, #2]
 467:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 467              		.loc 1 467 47 view .LVU171
 468 003e 817A     		ldrb	r1, [r0, #10]	@ zero_extendqisi2
 468:./Library/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 469              		.loc 1 468 83 view .LVU172
 470 0040 44EA0E44 		orr	r4, r4, lr, lsl #16
 467:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 471              		.loc 1 467 71 view .LVU173
 472 0044 4831     		adds	r1, r1, #72
 473 0046 42F83140 		str	r4, [r2, r1, lsl #3]
 473:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 474              		.loc 1 473 5 is_stmt 1 view .LVU174
 474:./Library/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh);
 475              		.loc 1 474 53 is_stmt 0 view .LVU175
 476 004a 8488     		ldrh	r4, [r0, #4]
 475:./Library/stm32f4xx_can.c ****   }
 477              		.loc 1 475 53 view .LVU176
 478 004c 0188     		ldrh	r1, [r0]
 473:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 479              		.loc 1 473 47 view .LVU177
 480 004e 90F80AE0 		ldrb	lr, [r0, #10]	@ zero_extendqisi2
 474:./Library/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh);
 481              		.loc 1 474 84 view .LVU178
 482 0052 41EA0441 		orr	r1, r1, r4, lsl #16
 473:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 483              		.loc 1 473 71 view .LVU179
 484 0056 0EF1480E 		add	lr, lr, #72
 485 005a 02EBCE02 		add	r2, r2, lr, lsl #3
 486 005e 5160     		str	r1, [r2, #4]
 487              	.L40:
 478:./Library/stm32f4xx_can.c ****   {
 488              		.loc 1 478 3 is_stmt 1 view .LVU180
 478:./Library/stm32f4xx_can.c ****   {
 489              		.loc 1 478 27 is_stmt 0 view .LVU181
 490 0060 027B     		ldrb	r2, [r0, #12]	@ zero_extendqisi2
 478:./Library/stm32f4xx_can.c ****   {
 491              		.loc 1 478 6 view .LVU182
 492 0062 012A     		cmp	r2, #1
 493 0064 20D0     		beq	.L48
 494              	.L41:
 493:./Library/stm32f4xx_can.c ****   {
 495              		.loc 1 493 3 is_stmt 1 view .LVU183
 493:./Library/stm32f4xx_can.c ****   {
 496              		.loc 1 493 27 is_stmt 0 view .LVU184
 497 0066 C27A     		ldrb	r2, [r0, #11]	@ zero_extendqisi2
 493:./Library/stm32f4xx_can.c ****   {
 498              		.loc 1 493 6 view .LVU185
 499 0068 002A     		cmp	r2, #0
 500 006a 37D1     		bne	.L42
 496:./Library/stm32f4xx_can.c ****   }
 501              		.loc 1 496 5 is_stmt 1 view .LVU186
 496:./Library/stm32f4xx_can.c ****   }
ARM GAS  /tmp/ccd0Y8mk.s 			page 45


 502              		.loc 1 496 9 is_stmt 0 view .LVU187
 503 006c 2649     		ldr	r1, .L51
 504 006e D1F80422 		ldr	r2, [r1, #516]
 496:./Library/stm32f4xx_can.c ****   }
 505              		.loc 1 496 16 view .LVU188
 506 0072 0CEA0202 		and	r2, ip, r2
 507 0076 C1F80422 		str	r2, [r1, #516]
 508              	.L43:
 505:./Library/stm32f4xx_can.c ****   {
 509              		.loc 1 505 3 is_stmt 1 view .LVU189
 505:./Library/stm32f4xx_can.c ****   {
 510              		.loc 1 505 27 is_stmt 0 view .LVU190
 511 007a 0289     		ldrh	r2, [r0, #8]
 505:./Library/stm32f4xx_can.c ****   {
 512              		.loc 1 505 6 view .LVU191
 513 007c 32B9     		cbnz	r2, .L44
 508:./Library/stm32f4xx_can.c ****   }
 514              		.loc 1 508 5 is_stmt 1 view .LVU192
 508:./Library/stm32f4xx_can.c ****   }
 515              		.loc 1 508 9 is_stmt 0 view .LVU193
 516 007e 2249     		ldr	r1, .L51
 517 0080 D1F81422 		ldr	r2, [r1, #532]
 508:./Library/stm32f4xx_can.c ****   }
 518              		.loc 1 508 17 view .LVU194
 519 0084 0CEA0202 		and	r2, ip, r2
 520 0088 C1F81422 		str	r2, [r1, #532]
 521              	.L44:
 511:./Library/stm32f4xx_can.c ****   {
 522              		.loc 1 511 3 is_stmt 1 view .LVU195
 511:./Library/stm32f4xx_can.c ****   {
 523              		.loc 1 511 27 is_stmt 0 view .LVU196
 524 008c 0289     		ldrh	r2, [r0, #8]
 511:./Library/stm32f4xx_can.c ****   {
 525              		.loc 1 511 6 view .LVU197
 526 008e 012A     		cmp	r2, #1
 527 0090 2BD0     		beq	.L49
 528              	.L45:
 518:./Library/stm32f4xx_can.c ****   {
 529              		.loc 1 518 3 is_stmt 1 view .LVU198
 518:./Library/stm32f4xx_can.c ****   {
 530              		.loc 1 518 27 is_stmt 0 view .LVU199
 531 0092 427B     		ldrb	r2, [r0, #13]	@ zero_extendqisi2
 518:./Library/stm32f4xx_can.c ****   {
 532              		.loc 1 518 6 view .LVU200
 533 0094 012A     		cmp	r2, #1
 534 0096 2FD0     		beq	.L50
 535              	.LVL29:
 536              	.L46:
 524:./Library/stm32f4xx_can.c **** }
 537              		.loc 1 524 3 is_stmt 1 view .LVU201
 524:./Library/stm32f4xx_can.c **** }
 538              		.loc 1 524 7 is_stmt 0 view .LVU202
 539 0098 1B4A     		ldr	r2, .L51
 540 009a D2F80032 		ldr	r3, [r2, #512]
 524:./Library/stm32f4xx_can.c **** }
 541              		.loc 1 524 13 view .LVU203
 542 009e 23F00103 		bic	r3, r3, #1
ARM GAS  /tmp/ccd0Y8mk.s 			page 46


 543 00a2 C2F80032 		str	r3, [r2, #512]
 525:./Library/stm32f4xx_can.c **** #endif /* STM32F413_423xx */
 544              		.loc 1 525 1 view .LVU204
 545 00a6 10BD     		pop	{r4, pc}
 546              	.LVL30:
 547              	.L48:
 481:./Library/stm32f4xx_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 548              		.loc 1 481 5 is_stmt 1 view .LVU205
 481:./Library/stm32f4xx_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 549              		.loc 1 481 9 is_stmt 0 view .LVU206
 550 00a8 174A     		ldr	r2, .L51
 551 00aa D2F80C12 		ldr	r1, [r2, #524]
 481:./Library/stm32f4xx_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 552              		.loc 1 481 16 view .LVU207
 553 00ae 1943     		orrs	r1, r1, r3
 554 00b0 C2F80C12 		str	r1, [r2, #524]
 483:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 555              		.loc 1 483 5 is_stmt 1 view .LVU208
 484:./Library/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 556              		.loc 1 484 53 is_stmt 0 view .LVU209
 557 00b4 B0F800E0 		ldrh	lr, [r0]
 485:./Library/stm32f4xx_can.c ****     /* 32-bit mask or Second 32-bit identifier */
 558              		.loc 1 485 53 view .LVU210
 559 00b8 4488     		ldrh	r4, [r0, #2]
 483:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 560              		.loc 1 483 47 view .LVU211
 561 00ba 817A     		ldrb	r1, [r0, #10]	@ zero_extendqisi2
 484:./Library/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 562              		.loc 1 484 80 view .LVU212
 563 00bc 44EA0E44 		orr	r4, r4, lr, lsl #16
 483:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 564              		.loc 1 483 71 view .LVU213
 565 00c0 4831     		adds	r1, r1, #72
 566 00c2 42F83140 		str	r4, [r2, r1, lsl #3]
 487:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 567              		.loc 1 487 5 is_stmt 1 view .LVU214
 488:./Library/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow);
 568              		.loc 1 488 53 is_stmt 0 view .LVU215
 569 00c6 B0F804E0 		ldrh	lr, [r0, #4]
 489:./Library/stm32f4xx_can.c ****   }
 570              		.loc 1 489 53 view .LVU216
 571 00ca C188     		ldrh	r1, [r0, #6]
 487:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 572              		.loc 1 487 47 view .LVU217
 573 00cc 847A     		ldrb	r4, [r0, #10]	@ zero_extendqisi2
 488:./Library/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow);
 574              		.loc 1 488 84 view .LVU218
 575 00ce 41EA0E41 		orr	r1, r1, lr, lsl #16
 487:./Library/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 576              		.loc 1 487 71 view .LVU219
 577 00d2 4834     		adds	r4, r4, #72
 578 00d4 02EBC402 		add	r2, r2, r4, lsl #3
 579 00d8 5160     		str	r1, [r2, #4]
 580 00da C4E7     		b	.L41
 581              	.L42:
 501:./Library/stm32f4xx_can.c ****   }
 582              		.loc 1 501 5 is_stmt 1 view .LVU220
ARM GAS  /tmp/ccd0Y8mk.s 			page 47


 501:./Library/stm32f4xx_can.c ****   }
 583              		.loc 1 501 9 is_stmt 0 view .LVU221
 584 00dc 0A49     		ldr	r1, .L51
 585 00de D1F80422 		ldr	r2, [r1, #516]
 501:./Library/stm32f4xx_can.c ****   }
 586              		.loc 1 501 16 view .LVU222
 587 00e2 1A43     		orrs	r2, r2, r3
 588 00e4 C1F80422 		str	r2, [r1, #516]
 589 00e8 C7E7     		b	.L43
 590              	.L49:
 514:./Library/stm32f4xx_can.c ****   }
 591              		.loc 1 514 5 is_stmt 1 view .LVU223
 514:./Library/stm32f4xx_can.c ****   }
 592              		.loc 1 514 9 is_stmt 0 view .LVU224
 593 00ea 0749     		ldr	r1, .L51
 594 00ec D1F81422 		ldr	r2, [r1, #532]
 514:./Library/stm32f4xx_can.c ****   }
 595              		.loc 1 514 17 view .LVU225
 596 00f0 1A43     		orrs	r2, r2, r3
 597 00f2 C1F81422 		str	r2, [r1, #532]
 598 00f6 CCE7     		b	.L45
 599              	.L50:
 520:./Library/stm32f4xx_can.c ****   }
 600              		.loc 1 520 5 is_stmt 1 view .LVU226
 520:./Library/stm32f4xx_can.c ****   }
 601              		.loc 1 520 9 is_stmt 0 view .LVU227
 602 00f8 0349     		ldr	r1, .L51
 603 00fa D1F81C22 		ldr	r2, [r1, #540]
 520:./Library/stm32f4xx_can.c ****   }
 604              		.loc 1 520 16 view .LVU228
 605 00fe 1343     		orrs	r3, r3, r2
 606              	.LVL31:
 520:./Library/stm32f4xx_can.c ****   }
 607              		.loc 1 520 16 view .LVU229
 608 0100 C1F81C32 		str	r3, [r1, #540]
 609 0104 C8E7     		b	.L46
 610              	.L52:
 611 0106 00BF     		.align	2
 612              	.L51:
 613 0108 00640040 		.word	1073767424
 614              		.cfi_endproc
 615              	.LFE125:
 617              		.section	.text.CAN_StructInit,"ax",%progbits
 618              		.align	1
 619              		.global	CAN_StructInit
 620              		.syntax unified
 621              		.thumb
 622              		.thumb_func
 624              	CAN_StructInit:
 625              	.LVL32:
 626              	.LFB126:
 534:./Library/stm32f4xx_can.c ****   /* Reset CAN init structure parameters values */
 627              		.loc 1 534 1 is_stmt 1 view -0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 0
 630              		@ frame_needed = 0, uses_anonymous_args = 0
 631              		@ link register save eliminated.
ARM GAS  /tmp/ccd0Y8mk.s 			page 48


 538:./Library/stm32f4xx_can.c ****   
 632              		.loc 1 538 3 view .LVU231
 538:./Library/stm32f4xx_can.c ****   
 633              		.loc 1 538 28 is_stmt 0 view .LVU232
 634 0000 0023     		movs	r3, #0
 635 0002 8371     		strb	r3, [r0, #6]
 541:./Library/stm32f4xx_can.c ****   
 636              		.loc 1 541 3 is_stmt 1 view .LVU233
 541:./Library/stm32f4xx_can.c ****   
 637              		.loc 1 541 28 is_stmt 0 view .LVU234
 638 0004 C371     		strb	r3, [r0, #7]
 544:./Library/stm32f4xx_can.c ****   
 639              		.loc 1 544 3 is_stmt 1 view .LVU235
 544:./Library/stm32f4xx_can.c ****   
 640              		.loc 1 544 28 is_stmt 0 view .LVU236
 641 0006 0372     		strb	r3, [r0, #8]
 547:./Library/stm32f4xx_can.c ****   
 642              		.loc 1 547 3 is_stmt 1 view .LVU237
 547:./Library/stm32f4xx_can.c ****   
 643              		.loc 1 547 28 is_stmt 0 view .LVU238
 644 0008 4372     		strb	r3, [r0, #9]
 550:./Library/stm32f4xx_can.c ****   
 645              		.loc 1 550 3 is_stmt 1 view .LVU239
 550:./Library/stm32f4xx_can.c ****   
 646              		.loc 1 550 28 is_stmt 0 view .LVU240
 647 000a 8372     		strb	r3, [r0, #10]
 553:./Library/stm32f4xx_can.c ****   
 648              		.loc 1 553 3 is_stmt 1 view .LVU241
 553:./Library/stm32f4xx_can.c ****   
 649              		.loc 1 553 28 is_stmt 0 view .LVU242
 650 000c C372     		strb	r3, [r0, #11]
 556:./Library/stm32f4xx_can.c ****   
 651              		.loc 1 556 3 is_stmt 1 view .LVU243
 556:./Library/stm32f4xx_can.c ****   
 652              		.loc 1 556 28 is_stmt 0 view .LVU244
 653 000e 8370     		strb	r3, [r0, #2]
 559:./Library/stm32f4xx_can.c ****   
 654              		.loc 1 559 3 is_stmt 1 view .LVU245
 559:./Library/stm32f4xx_can.c ****   
 655              		.loc 1 559 27 is_stmt 0 view .LVU246
 656 0010 C370     		strb	r3, [r0, #3]
 562:./Library/stm32f4xx_can.c ****   
 657              		.loc 1 562 3 is_stmt 1 view .LVU247
 562:./Library/stm32f4xx_can.c ****   
 658              		.loc 1 562 27 is_stmt 0 view .LVU248
 659 0012 0323     		movs	r3, #3
 660 0014 0371     		strb	r3, [r0, #4]
 565:./Library/stm32f4xx_can.c ****   
 661              		.loc 1 565 3 is_stmt 1 view .LVU249
 565:./Library/stm32f4xx_can.c ****   
 662              		.loc 1 565 27 is_stmt 0 view .LVU250
 663 0016 0223     		movs	r3, #2
 664 0018 4371     		strb	r3, [r0, #5]
 568:./Library/stm32f4xx_can.c **** }
 665              		.loc 1 568 3 is_stmt 1 view .LVU251
 568:./Library/stm32f4xx_can.c **** }
 666              		.loc 1 568 33 is_stmt 0 view .LVU252
ARM GAS  /tmp/ccd0Y8mk.s 			page 49


 667 001a 0123     		movs	r3, #1
 668 001c 0380     		strh	r3, [r0]	@ movhi
 569:./Library/stm32f4xx_can.c **** 
 669              		.loc 1 569 1 view .LVU253
 670 001e 7047     		bx	lr
 671              		.cfi_endproc
 672              	.LFE126:
 674              		.section	.text.CAN_SlaveStartBank,"ax",%progbits
 675              		.align	1
 676              		.global	CAN_SlaveStartBank
 677              		.syntax unified
 678              		.thumb
 679              		.thumb_func
 681              	CAN_SlaveStartBank:
 682              	.LVL33:
 683              	.LFB127:
 600:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 684              		.loc 1 600 1 is_stmt 1 view -0
 685              		.cfi_startproc
 686              		@ args = 0, pretend = 0, frame = 0
 687              		@ frame_needed = 0, uses_anonymous_args = 0
 688              		@ link register save eliminated.
 602:./Library/stm32f4xx_can.c ****   
 689              		.loc 1 602 3 view .LVU255
 605:./Library/stm32f4xx_can.c ****   
 690              		.loc 1 605 3 view .LVU256
 605:./Library/stm32f4xx_can.c ****   
 691              		.loc 1 605 7 is_stmt 0 view .LVU257
 692 0000 0D4B     		ldr	r3, .L55
 693 0002 D3F80022 		ldr	r2, [r3, #512]
 605:./Library/stm32f4xx_can.c ****   
 694              		.loc 1 605 13 view .LVU258
 695 0006 42F00102 		orr	r2, r2, #1
 696 000a C3F80022 		str	r2, [r3, #512]
 608:./Library/stm32f4xx_can.c ****   CAN1->FMR |= (uint32_t)(CAN_BankNumber)<<8;
 697              		.loc 1 608 3 is_stmt 1 view .LVU259
 608:./Library/stm32f4xx_can.c ****   CAN1->FMR |= (uint32_t)(CAN_BankNumber)<<8;
 698              		.loc 1 608 7 is_stmt 0 view .LVU260
 699 000e D3F80022 		ldr	r2, [r3, #512]
 608:./Library/stm32f4xx_can.c ****   CAN1->FMR |= (uint32_t)(CAN_BankNumber)<<8;
 700              		.loc 1 608 13 view .LVU261
 701 0012 22F47C52 		bic	r2, r2, #16128
 702 0016 22F00E02 		bic	r2, r2, #14
 703 001a C3F80022 		str	r2, [r3, #512]
 609:./Library/stm32f4xx_can.c ****   
 704              		.loc 1 609 3 is_stmt 1 view .LVU262
 609:./Library/stm32f4xx_can.c ****   
 705              		.loc 1 609 7 is_stmt 0 view .LVU263
 706 001e D3F80022 		ldr	r2, [r3, #512]
 609:./Library/stm32f4xx_can.c ****   
 707              		.loc 1 609 13 view .LVU264
 708 0022 42EA0022 		orr	r2, r2, r0, lsl #8
 709 0026 C3F80022 		str	r2, [r3, #512]
 612:./Library/stm32f4xx_can.c **** }
 710              		.loc 1 612 3 is_stmt 1 view .LVU265
 612:./Library/stm32f4xx_can.c **** }
 711              		.loc 1 612 7 is_stmt 0 view .LVU266
ARM GAS  /tmp/ccd0Y8mk.s 			page 50


 712 002a D3F80022 		ldr	r2, [r3, #512]
 612:./Library/stm32f4xx_can.c **** }
 713              		.loc 1 612 13 view .LVU267
 714 002e 22F00102 		bic	r2, r2, #1
 715 0032 C3F80022 		str	r2, [r3, #512]
 613:./Library/stm32f4xx_can.c **** #endif /* STM32F413_423xx */
 716              		.loc 1 613 1 view .LVU268
 717 0036 7047     		bx	lr
 718              	.L56:
 719              		.align	2
 720              	.L55:
 721 0038 00640040 		.word	1073767424
 722              		.cfi_endproc
 723              	.LFE127:
 725              		.section	.text.CAN_DBGFreeze,"ax",%progbits
 726              		.align	1
 727              		.global	CAN_DBGFreeze
 728              		.syntax unified
 729              		.thumb
 730              		.thumb_func
 732              	CAN_DBGFreeze:
 733              	.LVL34:
 734              	.LFB128:
 626:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 735              		.loc 1 626 1 is_stmt 1 view -0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 0
 738              		@ frame_needed = 0, uses_anonymous_args = 0
 739              		@ link register save eliminated.
 628:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 740              		.loc 1 628 3 view .LVU270
 629:./Library/stm32f4xx_can.c ****   
 741              		.loc 1 629 3 view .LVU271
 631:./Library/stm32f4xx_can.c ****   {
 742              		.loc 1 631 3 view .LVU272
 631:./Library/stm32f4xx_can.c ****   {
 743              		.loc 1 631 6 is_stmt 0 view .LVU273
 744 0000 21B1     		cbz	r1, .L58
 634:./Library/stm32f4xx_can.c ****   }
 745              		.loc 1 634 5 is_stmt 1 view .LVU274
 634:./Library/stm32f4xx_can.c ****   }
 746              		.loc 1 634 9 is_stmt 0 view .LVU275
 747 0002 0368     		ldr	r3, [r0]
 634:./Library/stm32f4xx_can.c ****   }
 748              		.loc 1 634 15 view .LVU276
 749 0004 43F48033 		orr	r3, r3, #65536
 750 0008 0360     		str	r3, [r0]
 751 000a 7047     		bx	lr
 752              	.L58:
 639:./Library/stm32f4xx_can.c ****   }
 753              		.loc 1 639 5 is_stmt 1 view .LVU277
 639:./Library/stm32f4xx_can.c ****   }
 754              		.loc 1 639 9 is_stmt 0 view .LVU278
 755 000c 0368     		ldr	r3, [r0]
 639:./Library/stm32f4xx_can.c ****   }
 756              		.loc 1 639 15 view .LVU279
 757 000e 23F48033 		bic	r3, r3, #65536
ARM GAS  /tmp/ccd0Y8mk.s 			page 51


 758 0012 0360     		str	r3, [r0]
 641:./Library/stm32f4xx_can.c **** 
 759              		.loc 1 641 1 view .LVU280
 760 0014 7047     		bx	lr
 761              		.cfi_endproc
 762              	.LFE128:
 764              		.section	.text.CAN_TTComModeCmd,"ax",%progbits
 765              		.align	1
 766              		.global	CAN_TTComModeCmd
 767              		.syntax unified
 768              		.thumb
 769              		.thumb_func
 771              	CAN_TTComModeCmd:
 772              	.LVL35:
 773              	.LFB129:
 657:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 774              		.loc 1 657 1 is_stmt 1 view -0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 0
 777              		@ frame_needed = 0, uses_anonymous_args = 0
 778              		@ link register save eliminated.
 659:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 779              		.loc 1 659 3 view .LVU282
 660:./Library/stm32f4xx_can.c ****   if (NewState != DISABLE)
 780              		.loc 1 660 3 view .LVU283
 661:./Library/stm32f4xx_can.c ****   {
 781              		.loc 1 661 3 view .LVU284
 661:./Library/stm32f4xx_can.c ****   {
 782              		.loc 1 661 6 is_stmt 0 view .LVU285
 783 0000 B1B1     		cbz	r1, .L61
 664:./Library/stm32f4xx_can.c **** 
 784              		.loc 1 664 5 is_stmt 1 view .LVU286
 664:./Library/stm32f4xx_can.c **** 
 785              		.loc 1 664 9 is_stmt 0 view .LVU287
 786 0002 0368     		ldr	r3, [r0]
 664:./Library/stm32f4xx_can.c **** 
 787              		.loc 1 664 15 view .LVU288
 788 0004 43F08003 		orr	r3, r3, #128
 789 0008 0360     		str	r3, [r0]
 667:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR |= ((uint32_t)CAN_TDT1R_TGT);
 790              		.loc 1 667 5 is_stmt 1 view .LVU289
 667:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR |= ((uint32_t)CAN_TDT1R_TGT);
 791              		.loc 1 667 24 is_stmt 0 view .LVU290
 792 000a D0F88431 		ldr	r3, [r0, #388]
 667:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR |= ((uint32_t)CAN_TDT1R_TGT);
 793              		.loc 1 667 30 view .LVU291
 794 000e 43F48073 		orr	r3, r3, #256
 795 0012 C0F88431 		str	r3, [r0, #388]
 668:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR |= ((uint32_t)CAN_TDT2R_TGT);
 796              		.loc 1 668 5 is_stmt 1 view .LVU292
 668:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR |= ((uint32_t)CAN_TDT2R_TGT);
 797              		.loc 1 668 24 is_stmt 0 view .LVU293
 798 0016 D0F89431 		ldr	r3, [r0, #404]
 668:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR |= ((uint32_t)CAN_TDT2R_TGT);
 799              		.loc 1 668 30 view .LVU294
 800 001a 43F48073 		orr	r3, r3, #256
 801 001e C0F89431 		str	r3, [r0, #404]
ARM GAS  /tmp/ccd0Y8mk.s 			page 52


 669:./Library/stm32f4xx_can.c ****   }
 802              		.loc 1 669 5 is_stmt 1 view .LVU295
 669:./Library/stm32f4xx_can.c ****   }
 803              		.loc 1 669 24 is_stmt 0 view .LVU296
 804 0022 D0F8A431 		ldr	r3, [r0, #420]
 669:./Library/stm32f4xx_can.c ****   }
 805              		.loc 1 669 30 view .LVU297
 806 0026 43F48073 		orr	r3, r3, #256
 807 002a C0F8A431 		str	r3, [r0, #420]
 808 002e 7047     		bx	lr
 809              	.L61:
 674:./Library/stm32f4xx_can.c **** 
 810              		.loc 1 674 5 is_stmt 1 view .LVU298
 674:./Library/stm32f4xx_can.c **** 
 811              		.loc 1 674 9 is_stmt 0 view .LVU299
 812 0030 0368     		ldr	r3, [r0]
 674:./Library/stm32f4xx_can.c **** 
 813              		.loc 1 674 15 view .LVU300
 814 0032 23F08003 		bic	r3, r3, #128
 815 0036 0360     		str	r3, [r0]
 677:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR &= ((uint32_t)~CAN_TDT1R_TGT);
 816              		.loc 1 677 5 is_stmt 1 view .LVU301
 677:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR &= ((uint32_t)~CAN_TDT1R_TGT);
 817              		.loc 1 677 24 is_stmt 0 view .LVU302
 818 0038 D0F88431 		ldr	r3, [r0, #388]
 677:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR &= ((uint32_t)~CAN_TDT1R_TGT);
 819              		.loc 1 677 30 view .LVU303
 820 003c 23F48073 		bic	r3, r3, #256
 821 0040 C0F88431 		str	r3, [r0, #388]
 678:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR &= ((uint32_t)~CAN_TDT2R_TGT);
 822              		.loc 1 678 5 is_stmt 1 view .LVU304
 678:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR &= ((uint32_t)~CAN_TDT2R_TGT);
 823              		.loc 1 678 24 is_stmt 0 view .LVU305
 824 0044 D0F89431 		ldr	r3, [r0, #404]
 678:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR &= ((uint32_t)~CAN_TDT2R_TGT);
 825              		.loc 1 678 30 view .LVU306
 826 0048 23F48073 		bic	r3, r3, #256
 827 004c C0F89431 		str	r3, [r0, #404]
 679:./Library/stm32f4xx_can.c ****   }
 828              		.loc 1 679 5 is_stmt 1 view .LVU307
 679:./Library/stm32f4xx_can.c ****   }
 829              		.loc 1 679 24 is_stmt 0 view .LVU308
 830 0050 D0F8A431 		ldr	r3, [r0, #420]
 679:./Library/stm32f4xx_can.c ****   }
 831              		.loc 1 679 30 view .LVU309
 832 0054 23F48073 		bic	r3, r3, #256
 833 0058 C0F8A431 		str	r3, [r0, #420]
 681:./Library/stm32f4xx_can.c **** /**
 834              		.loc 1 681 1 view .LVU310
 835 005c 7047     		bx	lr
 836              		.cfi_endproc
 837              	.LFE129:
 839              		.section	.text.CAN_Transmit,"ax",%progbits
 840              		.align	1
 841              		.global	CAN_Transmit
 842              		.syntax unified
 843              		.thumb
ARM GAS  /tmp/ccd0Y8mk.s 			page 53


 844              		.thumb_func
 846              	CAN_Transmit:
 847              	.LVL36:
 848              	.LFB130:
 712:./Library/stm32f4xx_can.c ****   uint8_t transmit_mailbox = 0;
 849              		.loc 1 712 1 is_stmt 1 view -0
 850              		.cfi_startproc
 851              		@ args = 0, pretend = 0, frame = 0
 852              		@ frame_needed = 0, uses_anonymous_args = 0
 712:./Library/stm32f4xx_can.c ****   uint8_t transmit_mailbox = 0;
 853              		.loc 1 712 1 is_stmt 0 view .LVU312
 854 0000 0346     		mov	r3, r0
 713:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 855              		.loc 1 713 3 is_stmt 1 view .LVU313
 856              	.LVL37:
 715:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_IDTYPE(TxMessage->IDE));
 857              		.loc 1 715 3 view .LVU314
 716:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_RTR(TxMessage->RTR));
 858              		.loc 1 716 3 view .LVU315
 717:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_DLC(TxMessage->DLC));
 859              		.loc 1 717 3 view .LVU316
 718:./Library/stm32f4xx_can.c **** 
 860              		.loc 1 718 3 view .LVU317
 721:./Library/stm32f4xx_can.c ****   {
 861              		.loc 1 721 3 view .LVU318
 721:./Library/stm32f4xx_can.c ****   {
 862              		.loc 1 721 12 is_stmt 0 view .LVU319
 863 0002 8268     		ldr	r2, [r0, #8]
 721:./Library/stm32f4xx_can.c ****   {
 864              		.loc 1 721 6 view .LVU320
 865 0004 12F0806F 		tst	r2, #67108864
 866 0008 09D1     		bne	.L68
 725:./Library/stm32f4xx_can.c ****   {
 867              		.loc 1 725 8 is_stmt 1 view .LVU321
 725:./Library/stm32f4xx_can.c ****   {
 868              		.loc 1 725 17 is_stmt 0 view .LVU322
 869 000a 8268     		ldr	r2, [r0, #8]
 725:./Library/stm32f4xx_can.c ****   {
 870              		.loc 1 725 11 view .LVU323
 871 000c 12F0006F 		tst	r2, #134217728
 872 0010 4FD1     		bne	.L69
 729:./Library/stm32f4xx_can.c ****   {
 873              		.loc 1 729 8 is_stmt 1 view .LVU324
 729:./Library/stm32f4xx_can.c ****   {
 874              		.loc 1 729 17 is_stmt 0 view .LVU325
 875 0012 8268     		ldr	r2, [r0, #8]
 729:./Library/stm32f4xx_can.c ****   {
 876              		.loc 1 729 11 view .LVU326
 877 0014 12F0805F 		tst	r2, #268435456
 878 0018 5BD0     		beq	.L70
 731:./Library/stm32f4xx_can.c ****   }
 879              		.loc 1 731 22 view .LVU327
 880 001a 0220     		movs	r0, #2
 881              	.LVL38:
 731:./Library/stm32f4xx_can.c ****   }
 882              		.loc 1 731 22 view .LVU328
 883 001c 00E0     		b	.L64
ARM GAS  /tmp/ccd0Y8mk.s 			page 54


 884              	.LVL39:
 885              	.L68:
 723:./Library/stm32f4xx_can.c ****   }
 886              		.loc 1 723 22 view .LVU329
 887 001e 0020     		movs	r0, #0
 888              	.LVL40:
 889              	.L64:
 712:./Library/stm32f4xx_can.c ****   uint8_t transmit_mailbox = 0;
 890              		.loc 1 712 1 view .LVU330
 891 0020 70B5     		push	{r4, r5, r6, lr}
 892              	.LCFI2:
 893              		.cfi_def_cfa_offset 16
 894              		.cfi_offset 4, -16
 895              		.cfi_offset 5, -12
 896              		.cfi_offset 6, -8
 897              		.cfi_offset 14, -4
 898              	.LVL41:
 741:./Library/stm32f4xx_can.c ****     if (TxMessage->IDE == CAN_Id_Standard)
 899              		.loc 1 741 5 is_stmt 1 view .LVU331
 741:./Library/stm32f4xx_can.c ****     if (TxMessage->IDE == CAN_Id_Standard)
 900              		.loc 1 741 39 is_stmt 0 view .LVU332
 901 0022 8646     		mov	lr, r0
 902 0024 00F11802 		add	r2, r0, #24
 903 0028 1201     		lsls	r2, r2, #4
 904 002a 9C58     		ldr	r4, [r3, r2]
 741:./Library/stm32f4xx_can.c ****     if (TxMessage->IDE == CAN_Id_Standard)
 905              		.loc 1 741 44 view .LVU333
 906 002c 04F00104 		and	r4, r4, #1
 907 0030 9C50     		str	r4, [r3, r2]
 742:./Library/stm32f4xx_can.c ****     {
 908              		.loc 1 742 5 is_stmt 1 view .LVU334
 742:./Library/stm32f4xx_can.c ****     {
 909              		.loc 1 742 18 is_stmt 0 view .LVU335
 910 0032 0A7A     		ldrb	r2, [r1, #8]	@ zero_extendqisi2
 742:./Library/stm32f4xx_can.c ****     {
 911              		.loc 1 742 8 view .LVU336
 912 0034 002A     		cmp	r2, #0
 913 0036 3ED1     		bne	.L66
 744:./Library/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->StdId << 21) | \
 914              		.loc 1 744 7 is_stmt 1 view .LVU337
 745:./Library/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 915              		.loc 1 745 7 view .LVU338
 745:./Library/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 916              		.loc 1 745 41 is_stmt 0 view .LVU339
 917 0038 00F11802 		add	r2, r0, #24
 918 003c 1201     		lsls	r2, r2, #4
 919 003e 9C58     		ldr	r4, [r3, r2]
 746:./Library/stm32f4xx_can.c ****     }
 920              		.loc 1 746 60 view .LVU340
 921 0040 4D7A     		ldrb	r5, [r1, #9]	@ zero_extendqisi2
 745:./Library/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 922              		.loc 1 745 75 view .LVU341
 923 0042 0E68     		ldr	r6, [r1]
 924 0044 45EA4655 		orr	r5, r5, r6, lsl #21
 745:./Library/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 925              		.loc 1 745 46 view .LVU342
 926 0048 2C43     		orrs	r4, r4, r5
ARM GAS  /tmp/ccd0Y8mk.s 			page 55


 927 004a 9C50     		str	r4, [r3, r2]
 928              	.L67:
 757:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR &= (uint32_t)0xFFFFFFF0;
 929              		.loc 1 757 5 is_stmt 1 view .LVU343
 757:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR &= (uint32_t)0xFFFFFFF0;
 930              		.loc 1 757 14 is_stmt 0 view .LVU344
 931 004c 8A7A     		ldrb	r2, [r1, #10]	@ zero_extendqisi2
 757:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR &= (uint32_t)0xFFFFFFF0;
 932              		.loc 1 757 20 view .LVU345
 933 004e 02F00F02 		and	r2, r2, #15
 934 0052 8A72     		strb	r2, [r1, #10]
 758:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR |= TxMessage->DLC;
 935              		.loc 1 758 5 is_stmt 1 view .LVU346
 758:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR |= TxMessage->DLC;
 936              		.loc 1 758 39 is_stmt 0 view .LVU347
 937 0054 0EF11802 		add	r2, lr, #24
 938 0058 4FEA021C 		lsl	ip, r2, #4
 939 005c 03EB0212 		add	r2, r3, r2, lsl #4
 940 0060 5468     		ldr	r4, [r2, #4]
 758:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR |= TxMessage->DLC;
 941              		.loc 1 758 45 view .LVU348
 942 0062 24F00F04 		bic	r4, r4, #15
 943 0066 5460     		str	r4, [r2, #4]
 759:./Library/stm32f4xx_can.c **** 
 944              		.loc 1 759 5 is_stmt 1 view .LVU349
 759:./Library/stm32f4xx_can.c **** 
 945              		.loc 1 759 39 is_stmt 0 view .LVU350
 946 0068 5468     		ldr	r4, [r2, #4]
 759:./Library/stm32f4xx_can.c **** 
 947              		.loc 1 759 57 view .LVU351
 948 006a 8D7A     		ldrb	r5, [r1, #10]	@ zero_extendqisi2
 759:./Library/stm32f4xx_can.c **** 
 949              		.loc 1 759 45 view .LVU352
 950 006c 2C43     		orrs	r4, r4, r5
 951 006e 5460     		str	r4, [r2, #4]
 762:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 952              		.loc 1 762 5 is_stmt 1 view .LVU353
 762:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 953              		.loc 1 762 74 is_stmt 0 view .LVU354
 954 0070 8C7B     		ldrb	r4, [r1, #14]	@ zero_extendqisi2
 763:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 955              		.loc 1 763 72 view .LVU355
 956 0072 4A7B     		ldrb	r2, [r1, #13]	@ zero_extendqisi2
 763:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 957              		.loc 1 763 76 view .LVU356
 958 0074 1204     		lsls	r2, r2, #16
 762:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 959              		.loc 1 762 85 view .LVU357
 960 0076 42EA0462 		orr	r2, r2, r4, lsl #24
 764:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[0]));
 961              		.loc 1 764 72 view .LVU358
 962 007a 0C7B     		ldrb	r4, [r1, #12]	@ zero_extendqisi2
 763:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 963              		.loc 1 763 83 view .LVU359
 964 007c 42EA0422 		orr	r2, r2, r4, lsl #8
 765:./Library/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 965              		.loc 1 765 72 view .LVU360
ARM GAS  /tmp/ccd0Y8mk.s 			page 56


 966 0080 CC7A     		ldrb	r4, [r1, #11]	@ zero_extendqisi2
 764:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[0]));
 967              		.loc 1 764 82 view .LVU361
 968 0082 2243     		orrs	r2, r2, r4
 762:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 969              		.loc 1 762 45 view .LVU362
 970 0084 03EB0E1E 		add	lr, r3, lr, lsl #4
 971 0088 CEF88821 		str	r2, [lr, #392]
 766:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 972              		.loc 1 766 5 is_stmt 1 view .LVU363
 766:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 973              		.loc 1 766 74 is_stmt 0 view .LVU364
 974 008c 8C7C     		ldrb	r4, [r1, #18]	@ zero_extendqisi2
 767:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 975              		.loc 1 767 72 view .LVU365
 976 008e 4A7C     		ldrb	r2, [r1, #17]	@ zero_extendqisi2
 767:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 977              		.loc 1 767 76 view .LVU366
 978 0090 1204     		lsls	r2, r2, #16
 766:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 979              		.loc 1 766 85 view .LVU367
 980 0092 42EA0462 		orr	r2, r2, r4, lsl #24
 768:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[4]));
 981              		.loc 1 768 72 view .LVU368
 982 0096 0C7C     		ldrb	r4, [r1, #16]	@ zero_extendqisi2
 767:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 983              		.loc 1 767 83 view .LVU369
 984 0098 42EA0422 		orr	r2, r2, r4, lsl #8
 769:./Library/stm32f4xx_can.c ****     /* Request transmission */
 985              		.loc 1 769 72 view .LVU370
 986 009c C97B     		ldrb	r1, [r1, #15]	@ zero_extendqisi2
 987              	.LVL42:
 768:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[4]));
 988              		.loc 1 768 82 view .LVU371
 989 009e 0A43     		orrs	r2, r2, r1
 766:./Library/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 990              		.loc 1 766 45 view .LVU372
 991 00a0 CEF88C21 		str	r2, [lr, #396]
 771:./Library/stm32f4xx_can.c ****   }
 992              		.loc 1 771 5 is_stmt 1 view .LVU373
 771:./Library/stm32f4xx_can.c ****   }
 993              		.loc 1 771 39 is_stmt 0 view .LVU374
 994 00a4 53F80C20 		ldr	r2, [r3, ip]
 771:./Library/stm32f4xx_can.c ****   }
 995              		.loc 1 771 44 view .LVU375
 996 00a8 42F00102 		orr	r2, r2, #1
 997 00ac 43F80C20 		str	r2, [r3, ip]
 773:./Library/stm32f4xx_can.c **** }
 998              		.loc 1 773 3 is_stmt 1 view .LVU376
 774:./Library/stm32f4xx_can.c **** 
 999              		.loc 1 774 1 is_stmt 0 view .LVU377
 1000 00b0 70BD     		pop	{r4, r5, r6, pc}
 1001              	.LVL43:
 1002              	.L69:
 1003              	.LCFI3:
 1004              		.cfi_def_cfa_offset 0
 1005              		.cfi_restore 4
ARM GAS  /tmp/ccd0Y8mk.s 			page 57


 1006              		.cfi_restore 5
 1007              		.cfi_restore 6
 1008              		.cfi_restore 14
 727:./Library/stm32f4xx_can.c ****   }
 1009              		.loc 1 727 22 view .LVU378
 1010 00b2 0120     		movs	r0, #1
 1011              	.LVL44:
 727:./Library/stm32f4xx_can.c ****   }
 1012              		.loc 1 727 22 view .LVU379
 1013 00b4 B4E7     		b	.L64
 1014              	.LVL45:
 1015              	.L66:
 1016              	.LCFI4:
 1017              		.cfi_def_cfa_offset 16
 1018              		.cfi_offset 4, -16
 1019              		.cfi_offset 5, -12
 1020              		.cfi_offset 6, -8
 1021              		.cfi_offset 14, -4
 750:./Library/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 1022              		.loc 1 750 7 is_stmt 1 view .LVU380
 751:./Library/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 1023              		.loc 1 751 7 view .LVU381
 751:./Library/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 1024              		.loc 1 751 41 is_stmt 0 view .LVU382
 1025 00b6 00F11804 		add	r4, r0, #24
 1026 00ba 2401     		lsls	r4, r4, #4
 1027 00bc 1D59     		ldr	r5, [r3, r4]
 751:./Library/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 1028              		.loc 1 751 74 view .LVU383
 1029 00be 4E68     		ldr	r6, [r1, #4]
 1030 00c0 42EAC602 		orr	r2, r2, r6, lsl #3
 753:./Library/stm32f4xx_can.c ****     }
 1031              		.loc 1 753 60 view .LVU384
 1032 00c4 91F809C0 		ldrb	ip, [r1, #9]	@ zero_extendqisi2
 752:./Library/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 1033              		.loc 1 752 66 view .LVU385
 1034 00c8 42EA0C02 		orr	r2, r2, ip
 751:./Library/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 1035              		.loc 1 751 46 view .LVU386
 1036 00cc 2A43     		orrs	r2, r2, r5
 1037 00ce 1A51     		str	r2, [r3, r4]
 1038 00d0 BCE7     		b	.L67
 1039              	.LVL46:
 1040              	.L70:
 1041              	.LCFI5:
 1042              		.cfi_def_cfa_offset 0
 1043              		.cfi_restore 4
 1044              		.cfi_restore 5
 1045              		.cfi_restore 6
 1046              		.cfi_restore 14
 735:./Library/stm32f4xx_can.c ****   }
 1047              		.loc 1 735 22 view .LVU387
 1048 00d2 0420     		movs	r0, #4
 1049              	.LVL47:
 773:./Library/stm32f4xx_can.c **** }
 1050              		.loc 1 773 3 is_stmt 1 view .LVU388
 774:./Library/stm32f4xx_can.c **** 
ARM GAS  /tmp/ccd0Y8mk.s 			page 58


 1051              		.loc 1 774 1 is_stmt 0 view .LVU389
 1052 00d4 7047     		bx	lr
 1053              		.cfi_endproc
 1054              	.LFE130:
 1056              		.section	.text.CAN_TransmitStatus,"ax",%progbits
 1057              		.align	1
 1058              		.global	CAN_TransmitStatus
 1059              		.syntax unified
 1060              		.thumb
 1061              		.thumb_func
 1063              	CAN_TransmitStatus:
 1064              	.LVL48:
 1065              	.LFB131:
 785:./Library/stm32f4xx_can.c ****   uint32_t state = 0;
 1066              		.loc 1 785 1 is_stmt 1 view -0
 1067              		.cfi_startproc
 1068              		@ args = 0, pretend = 0, frame = 0
 1069              		@ frame_needed = 0, uses_anonymous_args = 0
 1070              		@ link register save eliminated.
 786:./Library/stm32f4xx_can.c **** 
 1071              		.loc 1 786 3 view .LVU391
 789:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_TRANSMITMAILBOX(TransmitMailbox));
 1072              		.loc 1 789 3 view .LVU392
 790:./Library/stm32f4xx_can.c ****  
 1073              		.loc 1 790 3 view .LVU393
 792:./Library/stm32f4xx_can.c ****   {
 1074              		.loc 1 792 3 view .LVU394
 1075 0000 0129     		cmp	r1, #1
 1076 0002 19D0     		beq	.L75
 1077 0004 0229     		cmp	r1, #2
 1078 0006 1BD0     		beq	.L76
 1079 0008 09B1     		cbz	r1, .L88
 1080 000a 0220     		movs	r0, #2
 1081              	.LVL49:
 792:./Library/stm32f4xx_can.c ****   {
 1082              		.loc 1 792 3 is_stmt 0 view .LVU395
 1083 000c 7047     		bx	lr
 1084              	.LVL50:
 1085              	.L88:
 795:./Library/stm32f4xx_can.c ****       break;
 1086              		.loc 1 795 7 is_stmt 1 view .LVU396
 795:./Library/stm32f4xx_can.c ****       break;
 1087              		.loc 1 795 21 is_stmt 0 view .LVU397
 1088 000e 8368     		ldr	r3, [r0, #8]
 795:./Library/stm32f4xx_can.c ****       break;
 1089              		.loc 1 795 13 view .LVU398
 1090 0010 23F07B43 		bic	r3, r3, #-83886080
 1091 0014 23F47F03 		bic	r3, r3, #16711680
 1092 0018 23F47F43 		bic	r3, r3, #65280
 1093 001c 23F0FC03 		bic	r3, r3, #252
 1094              	.LVL51:
 796:./Library/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): 
 1095              		.loc 1 796 7 is_stmt 1 view .LVU399
 1096              	.L78:
 807:./Library/stm32f4xx_can.c ****   {
 1097              		.loc 1 807 3 view .LVU400
 1098 0020 194A     		ldr	r2, .L91
ARM GAS  /tmp/ccd0Y8mk.s 			page 59


 1099 0022 9342     		cmp	r3, r2
 1100 0024 25D0     		beq	.L81
 807:./Library/stm32f4xx_can.c ****   {
 1101              		.loc 1 807 3 is_stmt 0 view .LVU401
 1102 0026 16D8     		bhi	.L79
 1103 0028 184A     		ldr	r2, .L91+4
 1104 002a 9342     		cmp	r3, r2
 1105 002c 23D0     		beq	.L82
 1106 002e 0232     		adds	r2, r2, #2
 1107 0030 9342     		cmp	r3, r2
 1108 0032 0DD1     		bne	.L89
 820:./Library/stm32f4xx_can.c ****       break;
 1109              		.loc 1 820 63 view .LVU402
 1110 0034 0120     		movs	r0, #1
 1111              	.LVL52:
 820:./Library/stm32f4xx_can.c ****       break;
 1112              		.loc 1 820 63 view .LVU403
 1113 0036 7047     		bx	lr
 1114              	.LVL53:
 1115              	.L75:
 798:./Library/stm32f4xx_can.c ****       break;
 1116              		.loc 1 798 7 is_stmt 1 view .LVU404
 798:./Library/stm32f4xx_can.c ****       break;
 1117              		.loc 1 798 21 is_stmt 0 view .LVU405
 1118 0038 8268     		ldr	r2, [r0, #8]
 798:./Library/stm32f4xx_can.c ****       break;
 1119              		.loc 1 798 13 view .LVU406
 1120 003a 154B     		ldr	r3, .L91+8
 1121 003c 1340     		ands	r3, r3, r2
 1122              	.LVL54:
 799:./Library/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): 
 1123              		.loc 1 799 7 is_stmt 1 view .LVU407
 1124 003e EFE7     		b	.L78
 1125              	.LVL55:
 1126              	.L76:
 801:./Library/stm32f4xx_can.c ****       break;
 1127              		.loc 1 801 7 view .LVU408
 801:./Library/stm32f4xx_can.c ****       break;
 1128              		.loc 1 801 21 is_stmt 0 view .LVU409
 1129 0040 8368     		ldr	r3, [r0, #8]
 801:./Library/stm32f4xx_can.c ****       break;
 1130              		.loc 1 801 13 view .LVU410
 1131 0042 23F06F43 		bic	r3, r3, #-285212672
 1132 0046 23F47C03 		bic	r3, r3, #16515072
 1133 004a 1B0C     		lsrs	r3, r3, #16
 1134 004c 1B04     		lsls	r3, r3, #16
 1135              	.LVL56:
 802:./Library/stm32f4xx_can.c ****     default:
 1136              		.loc 1 802 7 is_stmt 1 view .LVU411
 1137 004e E7E7     		b	.L78
 1138              	.L89:
 807:./Library/stm32f4xx_can.c ****   {
 1139              		.loc 1 807 3 is_stmt 0 view .LVU412
 1140 0050 9BB9     		cbnz	r3, .L84
 1141 0052 0220     		movs	r0, #2
 1142              	.LVL57:
 807:./Library/stm32f4xx_can.c ****   {
ARM GAS  /tmp/ccd0Y8mk.s 			page 60


 1143              		.loc 1 807 3 view .LVU413
 1144 0054 7047     		bx	lr
 1145              	.LVL58:
 1146              	.L79:
 807:./Library/stm32f4xx_can.c ****   {
 1147              		.loc 1 807 3 view .LVU414
 1148 0056 0F4A     		ldr	r2, .L91+12
 1149 0058 9342     		cmp	r3, r2
 1150 005a 10D0     		beq	.L85
 1151 005c 02F50032 		add	r2, r2, #131072
 1152 0060 9342     		cmp	r3, r2
 1153 0062 01D1     		bne	.L90
 824:./Library/stm32f4xx_can.c ****       break;
 1154              		.loc 1 824 63 view .LVU415
 1155 0064 0120     		movs	r0, #1
 1156              	.LVL59:
 824:./Library/stm32f4xx_can.c ****       break;
 1157              		.loc 1 824 63 view .LVU416
 1158 0066 7047     		bx	lr
 1159              	.LVL60:
 1160              	.L90:
 807:./Library/stm32f4xx_can.c ****   {
 1161              		.loc 1 807 3 view .LVU417
 1162 0068 094A     		ldr	r2, .L91+8
 1163 006a 9342     		cmp	r3, r2
 1164 006c 09D1     		bne	.L87
 822:./Library/stm32f4xx_can.c ****       break;
 1165              		.loc 1 822 63 view .LVU418
 1166 006e 0120     		movs	r0, #1
 1167              	.LVL61:
 822:./Library/stm32f4xx_can.c ****       break;
 1168              		.loc 1 822 63 view .LVU419
 1169 0070 7047     		bx	lr
 1170              	.LVL62:
 1171              	.L81:
 815:./Library/stm32f4xx_can.c ****       break;
 1172              		.loc 1 815 49 view .LVU420
 1173 0072 0020     		movs	r0, #0
 1174              	.LVL63:
 815:./Library/stm32f4xx_can.c ****       break;
 1175              		.loc 1 815 49 view .LVU421
 1176 0074 7047     		bx	lr
 1177              	.LVL64:
 1178              	.L82:
 813:./Library/stm32f4xx_can.c ****       break;
 1179              		.loc 1 813 49 view .LVU422
 1180 0076 0020     		movs	r0, #0
 1181              	.LVL65:
 813:./Library/stm32f4xx_can.c ****       break;
 1182              		.loc 1 813 49 view .LVU423
 1183 0078 7047     		bx	lr
 1184              	.LVL66:
 1185              	.L84:
 826:./Library/stm32f4xx_can.c ****       break;
 1186              		.loc 1 826 20 view .LVU424
 1187 007a 0020     		movs	r0, #0
 1188              	.LVL67:
ARM GAS  /tmp/ccd0Y8mk.s 			page 61


 826:./Library/stm32f4xx_can.c ****       break;
 1189              		.loc 1 826 20 view .LVU425
 1190 007c 7047     		bx	lr
 1191              	.LVL68:
 1192              	.L85:
 817:./Library/stm32f4xx_can.c ****       break;
 1193              		.loc 1 817 49 view .LVU426
 1194 007e 0020     		movs	r0, #0
 1195              	.LVL69:
 817:./Library/stm32f4xx_can.c ****       break;
 1196              		.loc 1 817 49 view .LVU427
 1197 0080 7047     		bx	lr
 1198              	.LVL70:
 1199              	.L87:
 826:./Library/stm32f4xx_can.c ****       break;
 1200              		.loc 1 826 20 view .LVU428
 1201 0082 0020     		movs	r0, #0
 1202              	.LVL71:
 829:./Library/stm32f4xx_can.c **** }
 1203              		.loc 1 829 3 is_stmt 1 view .LVU429
 830:./Library/stm32f4xx_can.c **** 
 1204              		.loc 1 830 1 is_stmt 0 view .LVU430
 1205 0084 7047     		bx	lr
 1206              	.L92:
 1207 0086 00BF     		.align	2
 1208              	.L91:
 1209 0088 00010008 		.word	134217984
 1210 008c 01000004 		.word	67108865
 1211 0090 00030008 		.word	134218496
 1212 0094 00000110 		.word	268500992
 1213              		.cfi_endproc
 1214              	.LFE131:
 1216              		.section	.text.CAN_CancelTransmit,"ax",%progbits
 1217              		.align	1
 1218              		.global	CAN_CancelTransmit
 1219              		.syntax unified
 1220              		.thumb
 1221              		.thumb_func
 1223              	CAN_CancelTransmit:
 1224              	.LVL72:
 1225              	.LFB132:
 840:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 1226              		.loc 1 840 1 is_stmt 1 view -0
 1227              		.cfi_startproc
 1228              		@ args = 0, pretend = 0, frame = 0
 1229              		@ frame_needed = 0, uses_anonymous_args = 0
 1230              		@ link register save eliminated.
 842:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_TRANSMITMAILBOX(Mailbox));
 1231              		.loc 1 842 3 view .LVU432
 843:./Library/stm32f4xx_can.c ****   /* abort transmission */
 1232              		.loc 1 843 3 view .LVU433
 845:./Library/stm32f4xx_can.c ****   {
 1233              		.loc 1 845 3 view .LVU434
 1234 0000 0129     		cmp	r1, #1
 1235 0002 06D0     		beq	.L94
 1236 0004 0229     		cmp	r1, #2
 1237 0006 08D0     		beq	.L95
ARM GAS  /tmp/ccd0Y8mk.s 			page 62


 1238 0008 01B1     		cbz	r1, .L97
 1239              	.L93:
 856:./Library/stm32f4xx_can.c **** /**
 1240              		.loc 1 856 1 is_stmt 0 view .LVU435
 1241 000a 7047     		bx	lr
 1242              	.L97:
 847:./Library/stm32f4xx_can.c ****       break;
 1243              		.loc 1 847 29 is_stmt 1 view .LVU436
 847:./Library/stm32f4xx_can.c ****       break;
 1244              		.loc 1 847 39 is_stmt 0 view .LVU437
 1245 000c 8023     		movs	r3, #128
 1246 000e 8360     		str	r3, [r0, #8]
 848:./Library/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): CANx->TSR = CAN_TSR_ABRQ1;
 1247              		.loc 1 848 7 is_stmt 1 view .LVU438
 1248 0010 7047     		bx	lr
 1249              	.L94:
 849:./Library/stm32f4xx_can.c ****       break;
 1250              		.loc 1 849 29 view .LVU439
 849:./Library/stm32f4xx_can.c ****       break;
 1251              		.loc 1 849 39 is_stmt 0 view .LVU440
 1252 0012 4FF40043 		mov	r3, #32768
 1253 0016 8360     		str	r3, [r0, #8]
 850:./Library/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): CANx->TSR = CAN_TSR_ABRQ2;
 1254              		.loc 1 850 7 is_stmt 1 view .LVU441
 1255 0018 7047     		bx	lr
 1256              	.L95:
 851:./Library/stm32f4xx_can.c ****       break;
 1257              		.loc 1 851 29 view .LVU442
 851:./Library/stm32f4xx_can.c ****       break;
 1258              		.loc 1 851 39 is_stmt 0 view .LVU443
 1259 001a 4FF40003 		mov	r3, #8388608
 1260 001e 8360     		str	r3, [r0, #8]
 852:./Library/stm32f4xx_can.c ****     default:
 1261              		.loc 1 852 7 is_stmt 1 view .LVU444
 856:./Library/stm32f4xx_can.c **** /**
 1262              		.loc 1 856 1 is_stmt 0 view .LVU445
 1263 0020 F3E7     		b	.L93
 1264              		.cfi_endproc
 1265              	.LFE132:
 1267              		.section	.text.CAN_Receive,"ax",%progbits
 1268              		.align	1
 1269              		.global	CAN_Receive
 1270              		.syntax unified
 1271              		.thumb
 1272              		.thumb_func
 1274              	CAN_Receive:
 1275              	.LVL73:
 1276              	.LFB133:
 888:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 1277              		.loc 1 888 1 is_stmt 1 view -0
 1278              		.cfi_startproc
 1279              		@ args = 0, pretend = 0, frame = 0
 1280              		@ frame_needed = 0, uses_anonymous_args = 0
 1281              		@ link register save eliminated.
 888:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 1282              		.loc 1 888 1 is_stmt 0 view .LVU447
 1283 0000 10B4     		push	{r4}
ARM GAS  /tmp/ccd0Y8mk.s 			page 63


 1284              	.LCFI6:
 1285              		.cfi_def_cfa_offset 4
 1286              		.cfi_offset 4, -4
 890:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 1287              		.loc 1 890 3 is_stmt 1 view .LVU448
 891:./Library/stm32f4xx_can.c ****   /* Get the Id */
 1288              		.loc 1 891 3 view .LVU449
 893:./Library/stm32f4xx_can.c ****   if (RxMessage->IDE == CAN_Id_Standard)
 1289              		.loc 1 893 3 view .LVU450
 893:./Library/stm32f4xx_can.c ****   if (RxMessage->IDE == CAN_Id_Standard)
 1290              		.loc 1 893 66 is_stmt 0 view .LVU451
 1291 0002 01F11B03 		add	r3, r1, #27
 1292 0006 1B01     		lsls	r3, r3, #4
 1293 0008 C358     		ldr	r3, [r0, r3]
 893:./Library/stm32f4xx_can.c ****   if (RxMessage->IDE == CAN_Id_Standard)
 1294              		.loc 1 893 34 view .LVU452
 1295 000a 03F00403 		and	r3, r3, #4
 893:./Library/stm32f4xx_can.c ****   if (RxMessage->IDE == CAN_Id_Standard)
 1296              		.loc 1 893 18 view .LVU453
 1297 000e 1372     		strb	r3, [r2, #8]
 894:./Library/stm32f4xx_can.c ****   {
 1298              		.loc 1 894 3 is_stmt 1 view .LVU454
 894:./Library/stm32f4xx_can.c ****   {
 1299              		.loc 1 894 6 is_stmt 0 view .LVU455
 1300 0010 002B     		cmp	r3, #0
 1301 0012 3DD1     		bne	.L99
 896:./Library/stm32f4xx_can.c ****   }
 1302              		.loc 1 896 5 is_stmt 1 view .LVU456
 896:./Library/stm32f4xx_can.c ****   }
 1303              		.loc 1 896 78 is_stmt 0 view .LVU457
 1304 0014 01F11B03 		add	r3, r1, #27
 1305 0018 1B01     		lsls	r3, r3, #4
 1306 001a C358     		ldr	r3, [r0, r3]
 896:./Library/stm32f4xx_can.c ****   }
 1307              		.loc 1 896 83 view .LVU458
 1308 001c 5B0D     		lsrs	r3, r3, #21
 896:./Library/stm32f4xx_can.c ****   }
 1309              		.loc 1 896 22 view .LVU459
 1310 001e 1360     		str	r3, [r2]
 1311              	.L100:
 903:./Library/stm32f4xx_can.c ****   /* Get the DLC */
 1312              		.loc 1 903 3 is_stmt 1 view .LVU460
 903:./Library/stm32f4xx_can.c ****   /* Get the DLC */
 1313              		.loc 1 903 66 is_stmt 0 view .LVU461
 1314 0020 01F11B03 		add	r3, r1, #27
 1315 0024 1C01     		lsls	r4, r3, #4
 1316 0026 00EB0313 		add	r3, r0, r3, lsl #4
 1317 002a 0459     		ldr	r4, [r0, r4]
 903:./Library/stm32f4xx_can.c ****   /* Get the DLC */
 1318              		.loc 1 903 34 view .LVU462
 1319 002c 04F00204 		and	r4, r4, #2
 903:./Library/stm32f4xx_can.c ****   /* Get the DLC */
 1320              		.loc 1 903 18 view .LVU463
 1321 0030 5472     		strb	r4, [r2, #9]
 905:./Library/stm32f4xx_can.c ****   /* Get the FMI */
 1322              		.loc 1 905 3 is_stmt 1 view .LVU464
 905:./Library/stm32f4xx_can.c ****   /* Get the FMI */
ARM GAS  /tmp/ccd0Y8mk.s 			page 64


 1323              		.loc 1 905 66 is_stmt 0 view .LVU465
 1324 0032 5C68     		ldr	r4, [r3, #4]
 905:./Library/stm32f4xx_can.c ****   /* Get the FMI */
 1325              		.loc 1 905 34 view .LVU466
 1326 0034 04F00F04 		and	r4, r4, #15
 905:./Library/stm32f4xx_can.c ****   /* Get the FMI */
 1327              		.loc 1 905 18 view .LVU467
 1328 0038 9472     		strb	r4, [r2, #10]
 907:./Library/stm32f4xx_can.c ****   /* Get the data field */
 1329              		.loc 1 907 3 is_stmt 1 view .LVU468
 907:./Library/stm32f4xx_can.c ****   /* Get the data field */
 1330              		.loc 1 907 67 is_stmt 0 view .LVU469
 1331 003a 5B68     		ldr	r3, [r3, #4]
 907:./Library/stm32f4xx_can.c ****   /* Get the data field */
 1332              		.loc 1 907 73 view .LVU470
 1333 003c 1B0A     		lsrs	r3, r3, #8
 907:./Library/stm32f4xx_can.c ****   /* Get the data field */
 1334              		.loc 1 907 18 view .LVU471
 1335 003e D374     		strb	r3, [r2, #19]
 909:./Library/stm32f4xx_can.c ****   RxMessage->Data[1] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 8);
 1336              		.loc 1 909 3 is_stmt 1 view .LVU472
 909:./Library/stm32f4xx_can.c ****   RxMessage->Data[1] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 8);
 1337              		.loc 1 909 70 is_stmt 0 view .LVU473
 1338 0040 00EB0113 		add	r3, r0, r1, lsl #4
 1339 0044 D3F8B841 		ldr	r4, [r3, #440]
 909:./Library/stm32f4xx_can.c ****   RxMessage->Data[1] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 8);
 1340              		.loc 1 909 22 view .LVU474
 1341 0048 D472     		strb	r4, [r2, #11]
 910:./Library/stm32f4xx_can.c ****   RxMessage->Data[2] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 16);
 1342              		.loc 1 910 3 is_stmt 1 view .LVU475
 910:./Library/stm32f4xx_can.c ****   RxMessage->Data[2] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 16);
 1343              		.loc 1 910 71 is_stmt 0 view .LVU476
 1344 004a D3F8B841 		ldr	r4, [r3, #440]
 910:./Library/stm32f4xx_can.c ****   RxMessage->Data[2] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 16);
 1345              		.loc 1 910 77 view .LVU477
 1346 004e 240A     		lsrs	r4, r4, #8
 910:./Library/stm32f4xx_can.c ****   RxMessage->Data[2] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 16);
 1347              		.loc 1 910 22 view .LVU478
 1348 0050 1473     		strb	r4, [r2, #12]
 911:./Library/stm32f4xx_can.c ****   RxMessage->Data[3] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 24);
 1349              		.loc 1 911 3 is_stmt 1 view .LVU479
 911:./Library/stm32f4xx_can.c ****   RxMessage->Data[3] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 24);
 1350              		.loc 1 911 71 is_stmt 0 view .LVU480
 1351 0052 D3F8B841 		ldr	r4, [r3, #440]
 911:./Library/stm32f4xx_can.c ****   RxMessage->Data[3] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 24);
 1352              		.loc 1 911 77 view .LVU481
 1353 0056 240C     		lsrs	r4, r4, #16
 911:./Library/stm32f4xx_can.c ****   RxMessage->Data[3] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 24);
 1354              		.loc 1 911 22 view .LVU482
 1355 0058 5473     		strb	r4, [r2, #13]
 912:./Library/stm32f4xx_can.c ****   RxMessage->Data[4] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDHR;
 1356              		.loc 1 912 3 is_stmt 1 view .LVU483
 912:./Library/stm32f4xx_can.c ****   RxMessage->Data[4] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDHR;
 1357              		.loc 1 912 71 is_stmt 0 view .LVU484
 1358 005a D3F8B841 		ldr	r4, [r3, #440]
 912:./Library/stm32f4xx_can.c ****   RxMessage->Data[4] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDHR;
 1359              		.loc 1 912 77 view .LVU485
ARM GAS  /tmp/ccd0Y8mk.s 			page 65


 1360 005e 240E     		lsrs	r4, r4, #24
 912:./Library/stm32f4xx_can.c ****   RxMessage->Data[4] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDHR;
 1361              		.loc 1 912 22 view .LVU486
 1362 0060 9473     		strb	r4, [r2, #14]
 913:./Library/stm32f4xx_can.c ****   RxMessage->Data[5] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 8);
 1363              		.loc 1 913 3 is_stmt 1 view .LVU487
 913:./Library/stm32f4xx_can.c ****   RxMessage->Data[5] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 8);
 1364              		.loc 1 913 70 is_stmt 0 view .LVU488
 1365 0062 D3F8BC41 		ldr	r4, [r3, #444]
 913:./Library/stm32f4xx_can.c ****   RxMessage->Data[5] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 8);
 1366              		.loc 1 913 22 view .LVU489
 1367 0066 D473     		strb	r4, [r2, #15]
 914:./Library/stm32f4xx_can.c ****   RxMessage->Data[6] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 16);
 1368              		.loc 1 914 3 is_stmt 1 view .LVU490
 914:./Library/stm32f4xx_can.c ****   RxMessage->Data[6] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 16);
 1369              		.loc 1 914 71 is_stmt 0 view .LVU491
 1370 0068 D3F8BC41 		ldr	r4, [r3, #444]
 914:./Library/stm32f4xx_can.c ****   RxMessage->Data[6] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 16);
 1371              		.loc 1 914 77 view .LVU492
 1372 006c 240A     		lsrs	r4, r4, #8
 914:./Library/stm32f4xx_can.c ****   RxMessage->Data[6] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 16);
 1373              		.loc 1 914 22 view .LVU493
 1374 006e 1474     		strb	r4, [r2, #16]
 915:./Library/stm32f4xx_can.c ****   RxMessage->Data[7] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 24);
 1375              		.loc 1 915 3 is_stmt 1 view .LVU494
 915:./Library/stm32f4xx_can.c ****   RxMessage->Data[7] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 24);
 1376              		.loc 1 915 71 is_stmt 0 view .LVU495
 1377 0070 D3F8BC41 		ldr	r4, [r3, #444]
 915:./Library/stm32f4xx_can.c ****   RxMessage->Data[7] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 24);
 1378              		.loc 1 915 77 view .LVU496
 1379 0074 4FEA144C 		lsr	ip, r4, #16
 915:./Library/stm32f4xx_can.c ****   RxMessage->Data[7] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 24);
 1380              		.loc 1 915 22 view .LVU497
 1381 0078 82F811C0 		strb	ip, [r2, #17]
 916:./Library/stm32f4xx_can.c ****   /* Release the FIFO */
 1382              		.loc 1 916 3 is_stmt 1 view .LVU498
 916:./Library/stm32f4xx_can.c ****   /* Release the FIFO */
 1383              		.loc 1 916 71 is_stmt 0 view .LVU499
 1384 007c D3F8BC31 		ldr	r3, [r3, #444]
 916:./Library/stm32f4xx_can.c ****   /* Release the FIFO */
 1385              		.loc 1 916 77 view .LVU500
 1386 0080 1B0E     		lsrs	r3, r3, #24
 916:./Library/stm32f4xx_can.c ****   /* Release the FIFO */
 1387              		.loc 1 916 22 view .LVU501
 1388 0082 9374     		strb	r3, [r2, #18]
 919:./Library/stm32f4xx_can.c ****   {
 1389              		.loc 1 919 3 is_stmt 1 view .LVU502
 919:./Library/stm32f4xx_can.c ****   {
 1390              		.loc 1 919 6 is_stmt 0 view .LVU503
 1391 0084 59B9     		cbnz	r1, .L101
 921:./Library/stm32f4xx_can.c ****   }
 1392              		.loc 1 921 5 is_stmt 1 view .LVU504
 921:./Library/stm32f4xx_can.c ****   }
 1393              		.loc 1 921 16 is_stmt 0 view .LVU505
 1394 0086 2023     		movs	r3, #32
 1395 0088 C360     		str	r3, [r0, #12]
 1396              	.L98:
ARM GAS  /tmp/ccd0Y8mk.s 			page 66


 928:./Library/stm32f4xx_can.c **** 
 1397              		.loc 1 928 1 view .LVU506
 1398 008a 5DF8044B 		ldr	r4, [sp], #4
 1399              	.LCFI7:
 1400              		.cfi_remember_state
 1401              		.cfi_restore 4
 1402              		.cfi_def_cfa_offset 0
 1403 008e 7047     		bx	lr
 1404              	.L99:
 1405              	.LCFI8:
 1406              		.cfi_restore_state
 900:./Library/stm32f4xx_can.c ****   }
 1407              		.loc 1 900 5 is_stmt 1 view .LVU507
 900:./Library/stm32f4xx_can.c ****   }
 1408              		.loc 1 900 78 is_stmt 0 view .LVU508
 1409 0090 01F11B03 		add	r3, r1, #27
 1410 0094 1B01     		lsls	r3, r3, #4
 1411 0096 C358     		ldr	r3, [r0, r3]
 900:./Library/stm32f4xx_can.c ****   }
 1412              		.loc 1 900 83 view .LVU509
 1413 0098 DB08     		lsrs	r3, r3, #3
 900:./Library/stm32f4xx_can.c ****   }
 1414              		.loc 1 900 22 view .LVU510
 1415 009a 5360     		str	r3, [r2, #4]
 1416 009c C0E7     		b	.L100
 1417              	.L101:
 926:./Library/stm32f4xx_can.c ****   }
 1418              		.loc 1 926 5 is_stmt 1 view .LVU511
 926:./Library/stm32f4xx_can.c ****   }
 1419              		.loc 1 926 16 is_stmt 0 view .LVU512
 1420 009e 2023     		movs	r3, #32
 1421 00a0 0361     		str	r3, [r0, #16]
 928:./Library/stm32f4xx_can.c **** 
 1422              		.loc 1 928 1 view .LVU513
 1423 00a2 F2E7     		b	.L98
 1424              		.cfi_endproc
 1425              	.LFE133:
 1427              		.section	.text.CAN_FIFORelease,"ax",%progbits
 1428              		.align	1
 1429              		.global	CAN_FIFORelease
 1430              		.syntax unified
 1431              		.thumb
 1432              		.thumb_func
 1434              	CAN_FIFORelease:
 1435              	.LVL74:
 1436              	.LFB134:
 938:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 1437              		.loc 1 938 1 is_stmt 1 view -0
 1438              		.cfi_startproc
 1439              		@ args = 0, pretend = 0, frame = 0
 1440              		@ frame_needed = 0, uses_anonymous_args = 0
 1441              		@ link register save eliminated.
 940:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 1442              		.loc 1 940 3 view .LVU515
 941:./Library/stm32f4xx_can.c ****   /* Release FIFO0 */
 1443              		.loc 1 941 3 view .LVU516
 943:./Library/stm32f4xx_can.c ****   {
ARM GAS  /tmp/ccd0Y8mk.s 			page 67


 1444              		.loc 1 943 3 view .LVU517
 943:./Library/stm32f4xx_can.c ****   {
 1445              		.loc 1 943 6 is_stmt 0 view .LVU518
 1446 0000 11B9     		cbnz	r1, .L105
 945:./Library/stm32f4xx_can.c ****   }
 1447              		.loc 1 945 5 is_stmt 1 view .LVU519
 945:./Library/stm32f4xx_can.c ****   }
 1448              		.loc 1 945 16 is_stmt 0 view .LVU520
 1449 0002 2023     		movs	r3, #32
 1450 0004 C360     		str	r3, [r0, #12]
 1451 0006 7047     		bx	lr
 1452              	.L105:
 950:./Library/stm32f4xx_can.c ****   }
 1453              		.loc 1 950 5 is_stmt 1 view .LVU521
 950:./Library/stm32f4xx_can.c ****   }
 1454              		.loc 1 950 16 is_stmt 0 view .LVU522
 1455 0008 2023     		movs	r3, #32
 1456 000a 0361     		str	r3, [r0, #16]
 952:./Library/stm32f4xx_can.c **** 
 1457              		.loc 1 952 1 view .LVU523
 1458 000c 7047     		bx	lr
 1459              		.cfi_endproc
 1460              	.LFE134:
 1462              		.section	.text.CAN_MessagePending,"ax",%progbits
 1463              		.align	1
 1464              		.global	CAN_MessagePending
 1465              		.syntax unified
 1466              		.thumb
 1467              		.thumb_func
 1469              	CAN_MessagePending:
 1470              	.LVL75:
 1471              	.LFB135:
 962:./Library/stm32f4xx_can.c ****   uint8_t message_pending=0;
 1472              		.loc 1 962 1 is_stmt 1 view -0
 1473              		.cfi_startproc
 1474              		@ args = 0, pretend = 0, frame = 0
 1475              		@ frame_needed = 0, uses_anonymous_args = 0
 1476              		@ link register save eliminated.
 963:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 1477              		.loc 1 963 3 view .LVU525
 965:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 1478              		.loc 1 965 3 view .LVU526
 966:./Library/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 1479              		.loc 1 966 3 view .LVU527
 967:./Library/stm32f4xx_can.c ****   {
 1480              		.loc 1 967 3 view .LVU528
 967:./Library/stm32f4xx_can.c ****   {
 1481              		.loc 1 967 6 is_stmt 0 view .LVU529
 1482 0000 19B9     		cbnz	r1, .L108
 969:./Library/stm32f4xx_can.c ****   }
 1483              		.loc 1 969 5 is_stmt 1 view .LVU530
 969:./Library/stm32f4xx_can.c ****   }
 1484              		.loc 1 969 37 is_stmt 0 view .LVU531
 1485 0002 C068     		ldr	r0, [r0, #12]
 1486              	.LVL76:
 969:./Library/stm32f4xx_can.c ****   }
 1487              		.loc 1 969 21 view .LVU532
ARM GAS  /tmp/ccd0Y8mk.s 			page 68


 1488 0004 00F00300 		and	r0, r0, #3
 1489              	.LVL77:
 969:./Library/stm32f4xx_can.c ****   }
 1490              		.loc 1 969 21 view .LVU533
 1491 0008 7047     		bx	lr
 1492              	.LVL78:
 1493              	.L108:
 971:./Library/stm32f4xx_can.c ****   {
 1494              		.loc 1 971 8 is_stmt 1 view .LVU534
 971:./Library/stm32f4xx_can.c ****   {
 1495              		.loc 1 971 11 is_stmt 0 view .LVU535
 1496 000a 0129     		cmp	r1, #1
 1497 000c 01D0     		beq	.L111
 977:./Library/stm32f4xx_can.c ****   }
 1498              		.loc 1 977 21 view .LVU536
 1499 000e 0020     		movs	r0, #0
 1500              	.LVL79:
 979:./Library/stm32f4xx_can.c **** }
 1501              		.loc 1 979 3 is_stmt 1 view .LVU537
 980:./Library/stm32f4xx_can.c **** /**
 1502              		.loc 1 980 1 is_stmt 0 view .LVU538
 1503 0010 7047     		bx	lr
 1504              	.LVL80:
 1505              	.L111:
 973:./Library/stm32f4xx_can.c ****   }
 1506              		.loc 1 973 5 is_stmt 1 view .LVU539
 973:./Library/stm32f4xx_can.c ****   }
 1507              		.loc 1 973 37 is_stmt 0 view .LVU540
 1508 0012 0069     		ldr	r0, [r0, #16]
 1509              	.LVL81:
 973:./Library/stm32f4xx_can.c ****   }
 1510              		.loc 1 973 21 view .LVU541
 1511 0014 00F00300 		and	r0, r0, #3
 1512              	.LVL82:
 973:./Library/stm32f4xx_can.c ****   }
 1513              		.loc 1 973 21 view .LVU542
 1514 0018 7047     		bx	lr
 1515              		.cfi_endproc
 1516              	.LFE135:
 1518              		.section	.text.CAN_OperatingModeRequest,"ax",%progbits
 1519              		.align	1
 1520              		.global	CAN_OperatingModeRequest
 1521              		.syntax unified
 1522              		.thumb
 1523              		.thumb_func
 1525              	CAN_OperatingModeRequest:
 1526              	.LVL83:
 1527              	.LFB136:
1012:./Library/stm32f4xx_can.c ****   uint8_t status = CAN_ModeStatus_Failed;
 1528              		.loc 1 1012 1 is_stmt 1 view -0
 1529              		.cfi_startproc
 1530              		@ args = 0, pretend = 0, frame = 0
 1531              		@ frame_needed = 0, uses_anonymous_args = 0
 1532              		@ link register save eliminated.
1013:./Library/stm32f4xx_can.c ****   
 1533              		.loc 1 1013 3 view .LVU544
1016:./Library/stm32f4xx_can.c **** 
ARM GAS  /tmp/ccd0Y8mk.s 			page 69


 1534              		.loc 1 1016 3 view .LVU545
1019:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_OPERATING_MODE(CAN_OperatingMode));
 1535              		.loc 1 1019 3 view .LVU546
1020:./Library/stm32f4xx_can.c **** 
 1536              		.loc 1 1020 3 view .LVU547
1022:./Library/stm32f4xx_can.c ****   {
 1537              		.loc 1 1022 3 view .LVU548
1022:./Library/stm32f4xx_can.c ****   {
 1538              		.loc 1 1022 6 is_stmt 0 view .LVU549
 1539 0000 8C46     		mov	ip, r1
 1540 0002 B1B9     		cbnz	r1, .L113
1025:./Library/stm32f4xx_can.c **** 
 1541              		.loc 1 1025 5 is_stmt 1 view .LVU550
1025:./Library/stm32f4xx_can.c **** 
 1542              		.loc 1 1025 33 is_stmt 0 view .LVU551
 1543 0004 0368     		ldr	r3, [r0]
1025:./Library/stm32f4xx_can.c **** 
 1544              		.loc 1 1025 17 view .LVU552
 1545 0006 23F00303 		bic	r3, r3, #3
 1546 000a 43F00103 		orr	r3, r3, #1
1025:./Library/stm32f4xx_can.c **** 
 1547              		.loc 1 1025 15 view .LVU553
 1548 000e 0360     		str	r3, [r0]
1028:./Library/stm32f4xx_can.c ****     {
 1549              		.loc 1 1028 5 is_stmt 1 view .LVU554
1016:./Library/stm32f4xx_can.c **** 
 1550              		.loc 1 1016 12 is_stmt 0 view .LVU555
 1551 0010 4FF6FF72 		movw	r2, #65535
 1552              	.LVL84:
 1553              	.L114:
1028:./Library/stm32f4xx_can.c ****     {
 1554              		.loc 1 1028 58 is_stmt 1 view .LVU556
1028:./Library/stm32f4xx_can.c ****     {
 1555              		.loc 1 1028 18 is_stmt 0 view .LVU557
 1556 0014 4368     		ldr	r3, [r0, #4]
1028:./Library/stm32f4xx_can.c ****     {
 1557              		.loc 1 1028 24 view .LVU558
 1558 0016 03F00303 		and	r3, r3, #3
1028:./Library/stm32f4xx_can.c ****     {
 1559              		.loc 1 1028 58 view .LVU559
 1560 001a 012B     		cmp	r3, #1
 1561 001c 02D0     		beq	.L115
1028:./Library/stm32f4xx_can.c ****     {
 1562              		.loc 1 1028 58 discriminator 1 view .LVU560
 1563 001e 0AB1     		cbz	r2, .L115
1030:./Library/stm32f4xx_can.c ****     }
 1564              		.loc 1 1030 7 is_stmt 1 view .LVU561
1030:./Library/stm32f4xx_can.c ****     }
 1565              		.loc 1 1030 14 is_stmt 0 view .LVU562
 1566 0020 013A     		subs	r2, r2, #1
 1567              	.LVL85:
1030:./Library/stm32f4xx_can.c ****     }
 1568              		.loc 1 1030 14 view .LVU563
 1569 0022 F7E7     		b	.L114
 1570              	.L115:
1032:./Library/stm32f4xx_can.c ****     {
 1571              		.loc 1 1032 5 is_stmt 1 view .LVU564
ARM GAS  /tmp/ccd0Y8mk.s 			page 70


1032:./Library/stm32f4xx_can.c ****     {
 1572              		.loc 1 1032 14 is_stmt 0 view .LVU565
 1573 0024 4368     		ldr	r3, [r0, #4]
1032:./Library/stm32f4xx_can.c ****     {
 1574              		.loc 1 1032 20 view .LVU566
 1575 0026 03F00303 		and	r3, r3, #3
1032:./Library/stm32f4xx_can.c ****     {
 1576              		.loc 1 1032 8 view .LVU567
 1577 002a 012B     		cmp	r3, #1
 1578 002c 33D0     		beq	.L125
1034:./Library/stm32f4xx_can.c ****     }
 1579              		.loc 1 1034 14 view .LVU568
 1580 002e 6046     		mov	r0, ip
 1581              	.LVL86:
1034:./Library/stm32f4xx_can.c ****     }
 1582              		.loc 1 1034 14 view .LVU569
 1583 0030 7047     		bx	lr
 1584              	.LVL87:
 1585              	.L113:
1041:./Library/stm32f4xx_can.c ****   {
 1586              		.loc 1 1041 9 is_stmt 1 view .LVU570
1041:./Library/stm32f4xx_can.c ****   {
 1587              		.loc 1 1041 12 is_stmt 0 view .LVU571
 1588 0032 0129     		cmp	r1, #1
 1589 0034 03D0     		beq	.L129
1060:./Library/stm32f4xx_can.c ****   {
 1590              		.loc 1 1060 9 is_stmt 1 view .LVU572
1060:./Library/stm32f4xx_can.c ****   {
 1591              		.loc 1 1060 12 is_stmt 0 view .LVU573
 1592 0036 0229     		cmp	r1, #2
 1593 0038 15D0     		beq	.L130
1081:./Library/stm32f4xx_can.c ****   }
 1594              		.loc 1 1081 12 view .LVU574
 1595 003a 0020     		movs	r0, #0
 1596              	.LVL88:
1081:./Library/stm32f4xx_can.c ****   }
 1597              		.loc 1 1081 12 view .LVU575
 1598 003c 7047     		bx	lr
 1599              	.LVL89:
 1600              	.L129:
1044:./Library/stm32f4xx_can.c **** 
 1601              		.loc 1 1044 5 is_stmt 1 view .LVU576
1044:./Library/stm32f4xx_can.c **** 
 1602              		.loc 1 1044 9 is_stmt 0 view .LVU577
 1603 003e 0368     		ldr	r3, [r0]
1044:./Library/stm32f4xx_can.c **** 
 1604              		.loc 1 1044 15 view .LVU578
 1605 0040 23F00303 		bic	r3, r3, #3
 1606 0044 0360     		str	r3, [r0]
1047:./Library/stm32f4xx_can.c ****     {
 1607              		.loc 1 1047 5 is_stmt 1 view .LVU579
1016:./Library/stm32f4xx_can.c **** 
 1608              		.loc 1 1016 12 is_stmt 0 view .LVU580
 1609 0046 4FF6FF73 		movw	r3, #65535
1047:./Library/stm32f4xx_can.c ****     {
 1610              		.loc 1 1047 11 view .LVU581
 1611 004a 00E0     		b	.L119
ARM GAS  /tmp/ccd0Y8mk.s 			page 71


 1612              	.LVL90:
 1613              	.L121:
1049:./Library/stm32f4xx_can.c ****     }
 1614              		.loc 1 1049 7 is_stmt 1 view .LVU582
1049:./Library/stm32f4xx_can.c ****     }
 1615              		.loc 1 1049 14 is_stmt 0 view .LVU583
 1616 004c 013B     		subs	r3, r3, #1
 1617              	.LVL91:
 1618              	.L119:
1047:./Library/stm32f4xx_can.c ****     {
 1619              		.loc 1 1047 47 is_stmt 1 view .LVU584
1047:./Library/stm32f4xx_can.c ****     {
 1620              		.loc 1 1047 18 is_stmt 0 view .LVU585
 1621 004e 4268     		ldr	r2, [r0, #4]
1047:./Library/stm32f4xx_can.c ****     {
 1622              		.loc 1 1047 47 view .LVU586
 1623 0050 12F0030F 		tst	r2, #3
 1624 0054 01D0     		beq	.L120
1047:./Library/stm32f4xx_can.c ****     {
 1625              		.loc 1 1047 47 discriminator 1 view .LVU587
 1626 0056 002B     		cmp	r3, #0
 1627 0058 F8D1     		bne	.L121
 1628              	.L120:
1051:./Library/stm32f4xx_can.c ****     {
 1629              		.loc 1 1051 5 is_stmt 1 view .LVU588
1051:./Library/stm32f4xx_can.c ****     {
 1630              		.loc 1 1051 14 is_stmt 0 view .LVU589
 1631 005a 4368     		ldr	r3, [r0, #4]
 1632              	.LVL92:
1051:./Library/stm32f4xx_can.c ****     {
 1633              		.loc 1 1051 8 view .LVU590
 1634 005c 13F0030F 		tst	r3, #3
 1635 0060 1BD0     		beq	.L126
1053:./Library/stm32f4xx_can.c ****     }
 1636              		.loc 1 1053 14 view .LVU591
 1637 0062 0020     		movs	r0, #0
 1638              	.LVL93:
1053:./Library/stm32f4xx_can.c ****     }
 1639              		.loc 1 1053 14 view .LVU592
 1640 0064 7047     		bx	lr
 1641              	.LVL94:
 1642              	.L130:
1063:./Library/stm32f4xx_can.c **** 
 1643              		.loc 1 1063 5 is_stmt 1 view .LVU593
1063:./Library/stm32f4xx_can.c **** 
 1644              		.loc 1 1063 33 is_stmt 0 view .LVU594
 1645 0066 0368     		ldr	r3, [r0]
1063:./Library/stm32f4xx_can.c **** 
 1646              		.loc 1 1063 17 view .LVU595
 1647 0068 23F00303 		bic	r3, r3, #3
 1648 006c 43F00203 		orr	r3, r3, #2
1063:./Library/stm32f4xx_can.c **** 
 1649              		.loc 1 1063 15 view .LVU596
 1650 0070 0360     		str	r3, [r0]
1066:./Library/stm32f4xx_can.c ****     {
 1651              		.loc 1 1066 5 is_stmt 1 view .LVU597
1016:./Library/stm32f4xx_can.c **** 
ARM GAS  /tmp/ccd0Y8mk.s 			page 72


 1652              		.loc 1 1016 12 is_stmt 0 view .LVU598
 1653 0072 4FF6FF72 		movw	r2, #65535
1066:./Library/stm32f4xx_can.c ****     {
 1654              		.loc 1 1066 11 view .LVU599
 1655 0076 00E0     		b	.L122
 1656              	.LVL95:
 1657              	.L124:
1068:./Library/stm32f4xx_can.c ****     }
 1658              		.loc 1 1068 7 is_stmt 1 view .LVU600
1068:./Library/stm32f4xx_can.c ****     }
 1659              		.loc 1 1068 14 is_stmt 0 view .LVU601
 1660 0078 013A     		subs	r2, r2, #1
 1661              	.LVL96:
 1662              	.L122:
1066:./Library/stm32f4xx_can.c ****     {
 1663              		.loc 1 1066 58 is_stmt 1 view .LVU602
1066:./Library/stm32f4xx_can.c ****     {
 1664              		.loc 1 1066 18 is_stmt 0 view .LVU603
 1665 007a 4368     		ldr	r3, [r0, #4]
1066:./Library/stm32f4xx_can.c ****     {
 1666              		.loc 1 1066 24 view .LVU604
 1667 007c 03F00303 		and	r3, r3, #3
1066:./Library/stm32f4xx_can.c ****     {
 1668              		.loc 1 1066 58 view .LVU605
 1669 0080 022B     		cmp	r3, #2
 1670 0082 01D0     		beq	.L123
1066:./Library/stm32f4xx_can.c ****     {
 1671              		.loc 1 1066 58 discriminator 1 view .LVU606
 1672 0084 002A     		cmp	r2, #0
 1673 0086 F7D1     		bne	.L124
 1674              	.L123:
1070:./Library/stm32f4xx_can.c ****     {
 1675              		.loc 1 1070 5 is_stmt 1 view .LVU607
1070:./Library/stm32f4xx_can.c ****     {
 1676              		.loc 1 1070 14 is_stmt 0 view .LVU608
 1677 0088 4368     		ldr	r3, [r0, #4]
1070:./Library/stm32f4xx_can.c ****     {
 1678              		.loc 1 1070 20 view .LVU609
 1679 008a 03F00303 		and	r3, r3, #3
1070:./Library/stm32f4xx_can.c ****     {
 1680              		.loc 1 1070 8 view .LVU610
 1681 008e 022B     		cmp	r3, #2
 1682 0090 05D0     		beq	.L128
1072:./Library/stm32f4xx_can.c ****     }
 1683              		.loc 1 1072 14 view .LVU611
 1684 0092 0020     		movs	r0, #0
 1685              	.LVL97:
1072:./Library/stm32f4xx_can.c ****     }
 1686              		.loc 1 1072 14 view .LVU612
 1687 0094 7047     		bx	lr
 1688              	.LVL98:
 1689              	.L125:
1038:./Library/stm32f4xx_can.c ****     }
 1690              		.loc 1 1038 14 view .LVU613
 1691 0096 0120     		movs	r0, #1
 1692              	.LVL99:
1038:./Library/stm32f4xx_can.c ****     }
ARM GAS  /tmp/ccd0Y8mk.s 			page 73


 1693              		.loc 1 1038 14 view .LVU614
 1694 0098 7047     		bx	lr
 1695              	.LVL100:
 1696              	.L126:
1057:./Library/stm32f4xx_can.c ****     }
 1697              		.loc 1 1057 14 view .LVU615
 1698 009a 6046     		mov	r0, ip
 1699              	.LVL101:
1057:./Library/stm32f4xx_can.c ****     }
 1700              		.loc 1 1057 14 view .LVU616
 1701 009c 7047     		bx	lr
 1702              	.LVL102:
 1703              	.L128:
1076:./Library/stm32f4xx_can.c ****     }
 1704              		.loc 1 1076 14 view .LVU617
 1705 009e 0120     		movs	r0, #1
 1706              	.LVL103:
1084:./Library/stm32f4xx_can.c **** }
 1707              		.loc 1 1084 3 is_stmt 1 view .LVU618
1085:./Library/stm32f4xx_can.c **** 
 1708              		.loc 1 1085 1 is_stmt 0 view .LVU619
 1709 00a0 7047     		bx	lr
 1710              		.cfi_endproc
 1711              	.LFE136:
 1713              		.section	.text.CAN_Sleep,"ax",%progbits
 1714              		.align	1
 1715              		.global	CAN_Sleep
 1716              		.syntax unified
 1717              		.thumb
 1718              		.thumb_func
 1720              	CAN_Sleep:
 1721              	.LVL104:
 1722              	.LFB137:
1094:./Library/stm32f4xx_can.c ****   uint8_t sleepstatus = CAN_Sleep_Failed;
 1723              		.loc 1 1094 1 is_stmt 1 view -0
 1724              		.cfi_startproc
 1725              		@ args = 0, pretend = 0, frame = 0
 1726              		@ frame_needed = 0, uses_anonymous_args = 0
 1727              		@ link register save eliminated.
1095:./Library/stm32f4xx_can.c ****   
 1728              		.loc 1 1095 3 view .LVU621
1098:./Library/stm32f4xx_can.c ****     
 1729              		.loc 1 1098 3 view .LVU622
1101:./Library/stm32f4xx_can.c ****    
 1730              		.loc 1 1101 4 view .LVU623
1101:./Library/stm32f4xx_can.c ****    
 1731              		.loc 1 1101 23 is_stmt 0 view .LVU624
 1732 0000 0368     		ldr	r3, [r0]
1101:./Library/stm32f4xx_can.c ****    
 1733              		.loc 1 1101 69 view .LVU625
 1734 0002 23F00303 		bic	r3, r3, #3
 1735 0006 43F00203 		orr	r3, r3, #2
1101:./Library/stm32f4xx_can.c ****    
 1736              		.loc 1 1101 14 view .LVU626
 1737 000a 0360     		str	r3, [r0]
1104:./Library/stm32f4xx_can.c ****   {
 1738              		.loc 1 1104 3 is_stmt 1 view .LVU627
ARM GAS  /tmp/ccd0Y8mk.s 			page 74


1104:./Library/stm32f4xx_can.c ****   {
 1739              		.loc 1 1104 12 is_stmt 0 view .LVU628
 1740 000c 4368     		ldr	r3, [r0, #4]
1104:./Library/stm32f4xx_can.c ****   {
 1741              		.loc 1 1104 18 view .LVU629
 1742 000e 03F00303 		and	r3, r3, #3
1104:./Library/stm32f4xx_can.c ****   {
 1743              		.loc 1 1104 6 view .LVU630
 1744 0012 022B     		cmp	r3, #2
 1745 0014 01D0     		beq	.L133
1095:./Library/stm32f4xx_can.c ****   
 1746              		.loc 1 1095 11 view .LVU631
 1747 0016 0020     		movs	r0, #0
 1748              	.LVL105:
1095:./Library/stm32f4xx_can.c ****   
 1749              		.loc 1 1095 11 view .LVU632
 1750 0018 7047     		bx	lr
 1751              	.LVL106:
 1752              	.L133:
1107:./Library/stm32f4xx_can.c ****   }
 1753              		.loc 1 1107 17 view .LVU633
 1754 001a 0120     		movs	r0, #1
 1755              	.LVL107:
1110:./Library/stm32f4xx_can.c **** }
 1756              		.loc 1 1110 4 is_stmt 1 view .LVU634
1111:./Library/stm32f4xx_can.c **** 
 1757              		.loc 1 1111 1 is_stmt 0 view .LVU635
 1758 001c 7047     		bx	lr
 1759              		.cfi_endproc
 1760              	.LFE137:
 1762              		.section	.text.CAN_WakeUp,"ax",%progbits
 1763              		.align	1
 1764              		.global	CAN_WakeUp
 1765              		.syntax unified
 1766              		.thumb
 1767              		.thumb_func
 1769              	CAN_WakeUp:
 1770              	.LVL108:
 1771              	.LFB138:
1120:./Library/stm32f4xx_can.c ****   uint32_t wait_slak = SLAK_TIMEOUT;
 1772              		.loc 1 1120 1 is_stmt 1 view -0
 1773              		.cfi_startproc
 1774              		@ args = 0, pretend = 0, frame = 0
 1775              		@ frame_needed = 0, uses_anonymous_args = 0
 1776              		@ link register save eliminated.
1121:./Library/stm32f4xx_can.c ****   uint8_t wakeupstatus = CAN_WakeUp_Failed;
 1777              		.loc 1 1121 3 view .LVU637
1122:./Library/stm32f4xx_can.c ****   
 1778              		.loc 1 1122 3 view .LVU638
1125:./Library/stm32f4xx_can.c ****     
 1779              		.loc 1 1125 3 view .LVU639
1128:./Library/stm32f4xx_can.c ****     
 1780              		.loc 1 1128 3 view .LVU640
1128:./Library/stm32f4xx_can.c ****     
 1781              		.loc 1 1128 7 is_stmt 0 view .LVU641
 1782 0000 0368     		ldr	r3, [r0]
1128:./Library/stm32f4xx_can.c ****     
ARM GAS  /tmp/ccd0Y8mk.s 			page 75


 1783              		.loc 1 1128 13 view .LVU642
 1784 0002 23F00203 		bic	r3, r3, #2
 1785 0006 0360     		str	r3, [r0]
1131:./Library/stm32f4xx_can.c ****   {
 1786              		.loc 1 1131 3 is_stmt 1 view .LVU643
1121:./Library/stm32f4xx_can.c ****   uint8_t wakeupstatus = CAN_WakeUp_Failed;
 1787              		.loc 1 1121 12 is_stmt 0 view .LVU644
 1788 0008 4FF6FF73 		movw	r3, #65535
 1789              	.LVL109:
 1790              	.L135:
1131:./Library/stm32f4xx_can.c ****   {
 1791              		.loc 1 1131 53 is_stmt 1 view .LVU645
1131:./Library/stm32f4xx_can.c ****   {
 1792              		.loc 1 1131 15 is_stmt 0 view .LVU646
 1793 000c 4268     		ldr	r2, [r0, #4]
1131:./Library/stm32f4xx_can.c ****   {
 1794              		.loc 1 1131 53 view .LVU647
 1795 000e 12F0020F 		tst	r2, #2
 1796 0012 02D0     		beq	.L136
1131:./Library/stm32f4xx_can.c ****   {
 1797              		.loc 1 1131 53 discriminator 1 view .LVU648
 1798 0014 0BB1     		cbz	r3, .L136
1133:./Library/stm32f4xx_can.c ****   }
 1799              		.loc 1 1133 4 is_stmt 1 view .LVU649
1133:./Library/stm32f4xx_can.c ****   }
 1800              		.loc 1 1133 13 is_stmt 0 view .LVU650
 1801 0016 013B     		subs	r3, r3, #1
 1802              	.LVL110:
1133:./Library/stm32f4xx_can.c ****   }
 1803              		.loc 1 1133 13 view .LVU651
 1804 0018 F8E7     		b	.L135
 1805              	.L136:
1135:./Library/stm32f4xx_can.c ****   {
 1806              		.loc 1 1135 3 is_stmt 1 view .LVU652
1135:./Library/stm32f4xx_can.c ****   {
 1807              		.loc 1 1135 11 is_stmt 0 view .LVU653
 1808 001a 4368     		ldr	r3, [r0, #4]
 1809              	.LVL111:
1135:./Library/stm32f4xx_can.c ****   {
 1810              		.loc 1 1135 5 view .LVU654
 1811 001c 13F0020F 		tst	r3, #2
 1812 0020 01D0     		beq	.L139
1122:./Library/stm32f4xx_can.c ****   
 1813              		.loc 1 1122 11 view .LVU655
 1814 0022 0020     		movs	r0, #0
 1815              	.LVL112:
1122:./Library/stm32f4xx_can.c ****   
 1816              		.loc 1 1122 11 view .LVU656
 1817 0024 7047     		bx	lr
 1818              	.LVL113:
 1819              	.L139:
1138:./Library/stm32f4xx_can.c ****   }
 1820              		.loc 1 1138 18 view .LVU657
 1821 0026 0120     		movs	r0, #1
 1822              	.LVL114:
1141:./Library/stm32f4xx_can.c **** }
 1823              		.loc 1 1141 3 is_stmt 1 view .LVU658
ARM GAS  /tmp/ccd0Y8mk.s 			page 76


1142:./Library/stm32f4xx_can.c **** /**
 1824              		.loc 1 1142 1 is_stmt 0 view .LVU659
 1825 0028 7047     		bx	lr
 1826              		.cfi_endproc
 1827              	.LFE138:
 1829              		.section	.text.CAN_GetLastErrorCode,"ax",%progbits
 1830              		.align	1
 1831              		.global	CAN_GetLastErrorCode
 1832              		.syntax unified
 1833              		.thumb
 1834              		.thumb_func
 1836              	CAN_GetLastErrorCode:
 1837              	.LVL115:
 1838              	.LFB139:
1182:./Library/stm32f4xx_can.c ****   uint8_t errorcode=0;
 1839              		.loc 1 1182 1 is_stmt 1 view -0
 1840              		.cfi_startproc
 1841              		@ args = 0, pretend = 0, frame = 0
 1842              		@ frame_needed = 0, uses_anonymous_args = 0
 1843              		@ link register save eliminated.
1183:./Library/stm32f4xx_can.c ****   
 1844              		.loc 1 1183 3 view .LVU661
1186:./Library/stm32f4xx_can.c ****   
 1845              		.loc 1 1186 3 view .LVU662
1189:./Library/stm32f4xx_can.c ****   
 1846              		.loc 1 1189 3 view .LVU663
1189:./Library/stm32f4xx_can.c ****   
 1847              		.loc 1 1189 30 is_stmt 0 view .LVU664
 1848 0000 8069     		ldr	r0, [r0, #24]
 1849              	.LVL116:
1192:./Library/stm32f4xx_can.c **** }
 1850              		.loc 1 1192 3 is_stmt 1 view .LVU665
1193:./Library/stm32f4xx_can.c **** 
 1851              		.loc 1 1193 1 is_stmt 0 view .LVU666
 1852 0002 00F07000 		and	r0, r0, #112
 1853              	.LVL117:
1193:./Library/stm32f4xx_can.c **** 
 1854              		.loc 1 1193 1 view .LVU667
 1855 0006 7047     		bx	lr
 1856              		.cfi_endproc
 1857              	.LFE139:
 1859              		.section	.text.CAN_GetReceiveErrorCounter,"ax",%progbits
 1860              		.align	1
 1861              		.global	CAN_GetReceiveErrorCounter
 1862              		.syntax unified
 1863              		.thumb
 1864              		.thumb_func
 1866              	CAN_GetReceiveErrorCounter:
 1867              	.LVL118:
 1868              	.LFB140:
1208:./Library/stm32f4xx_can.c ****   uint8_t counter=0;
 1869              		.loc 1 1208 1 is_stmt 1 view -0
 1870              		.cfi_startproc
 1871              		@ args = 0, pretend = 0, frame = 0
 1872              		@ frame_needed = 0, uses_anonymous_args = 0
 1873              		@ link register save eliminated.
1209:./Library/stm32f4xx_can.c ****   
ARM GAS  /tmp/ccd0Y8mk.s 			page 77


 1874              		.loc 1 1209 3 view .LVU669
1212:./Library/stm32f4xx_can.c ****   
 1875              		.loc 1 1212 3 view .LVU670
1215:./Library/stm32f4xx_can.c ****   
 1876              		.loc 1 1215 3 view .LVU671
1215:./Library/stm32f4xx_can.c ****   
 1877              		.loc 1 1215 28 is_stmt 0 view .LVU672
 1878 0000 8069     		ldr	r0, [r0, #24]
 1879              	.LVL119:
1218:./Library/stm32f4xx_can.c **** }
 1880              		.loc 1 1218 3 is_stmt 1 view .LVU673
1219:./Library/stm32f4xx_can.c **** 
 1881              		.loc 1 1219 1 is_stmt 0 view .LVU674
 1882 0002 000E     		lsrs	r0, r0, #24
 1883              	.LVL120:
1219:./Library/stm32f4xx_can.c **** 
 1884              		.loc 1 1219 1 view .LVU675
 1885 0004 7047     		bx	lr
 1886              		.cfi_endproc
 1887              	.LFE140:
 1889              		.section	.text.CAN_GetLSBTransmitErrorCounter,"ax",%progbits
 1890              		.align	1
 1891              		.global	CAN_GetLSBTransmitErrorCounter
 1892              		.syntax unified
 1893              		.thumb
 1894              		.thumb_func
 1896              	CAN_GetLSBTransmitErrorCounter:
 1897              	.LVL121:
 1898              	.LFB141:
1229:./Library/stm32f4xx_can.c ****   uint8_t counter=0;
 1899              		.loc 1 1229 1 is_stmt 1 view -0
 1900              		.cfi_startproc
 1901              		@ args = 0, pretend = 0, frame = 0
 1902              		@ frame_needed = 0, uses_anonymous_args = 0
 1903              		@ link register save eliminated.
1230:./Library/stm32f4xx_can.c ****   
 1904              		.loc 1 1230 3 view .LVU677
1233:./Library/stm32f4xx_can.c ****   
 1905              		.loc 1 1233 3 view .LVU678
1236:./Library/stm32f4xx_can.c ****   
 1906              		.loc 1 1236 3 view .LVU679
1236:./Library/stm32f4xx_can.c ****   
 1907              		.loc 1 1236 28 is_stmt 0 view .LVU680
 1908 0000 8069     		ldr	r0, [r0, #24]
 1909              	.LVL122:
1239:./Library/stm32f4xx_can.c **** }
 1910              		.loc 1 1239 3 is_stmt 1 view .LVU681
1240:./Library/stm32f4xx_can.c **** /**
 1911              		.loc 1 1240 1 is_stmt 0 view .LVU682
 1912 0002 C0F30740 		ubfx	r0, r0, #16, #8
 1913              	.LVL123:
1240:./Library/stm32f4xx_can.c **** /**
 1914              		.loc 1 1240 1 view .LVU683
 1915 0006 7047     		bx	lr
 1916              		.cfi_endproc
 1917              	.LFE141:
 1919              		.section	.text.CAN_ITConfig,"ax",%progbits
ARM GAS  /tmp/ccd0Y8mk.s 			page 78


 1920              		.align	1
 1921              		.global	CAN_ITConfig
 1922              		.syntax unified
 1923              		.thumb
 1924              		.thumb_func
 1926              	CAN_ITConfig:
 1927              	.LVL124:
 1928              	.LFB142:
1435:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 1929              		.loc 1 1435 1 is_stmt 1 view -0
 1930              		.cfi_startproc
 1931              		@ args = 0, pretend = 0, frame = 0
 1932              		@ frame_needed = 0, uses_anonymous_args = 0
 1933              		@ link register save eliminated.
1437:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_IT(CAN_IT));
 1934              		.loc 1 1437 3 view .LVU685
1438:./Library/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1935              		.loc 1 1438 3 view .LVU686
1439:./Library/stm32f4xx_can.c **** 
 1936              		.loc 1 1439 3 view .LVU687
1441:./Library/stm32f4xx_can.c ****   {
 1937              		.loc 1 1441 3 view .LVU688
1441:./Library/stm32f4xx_can.c ****   {
 1938              		.loc 1 1441 6 is_stmt 0 view .LVU689
 1939 0000 1AB1     		cbz	r2, .L144
1444:./Library/stm32f4xx_can.c ****   }
 1940              		.loc 1 1444 5 is_stmt 1 view .LVU690
1444:./Library/stm32f4xx_can.c ****   }
 1941              		.loc 1 1444 9 is_stmt 0 view .LVU691
 1942 0002 4369     		ldr	r3, [r0, #20]
1444:./Library/stm32f4xx_can.c ****   }
 1943              		.loc 1 1444 15 view .LVU692
 1944 0004 0B43     		orrs	r3, r3, r1
 1945 0006 4361     		str	r3, [r0, #20]
 1946 0008 7047     		bx	lr
 1947              	.L144:
1449:./Library/stm32f4xx_can.c ****   }
 1948              		.loc 1 1449 5 is_stmt 1 view .LVU693
1449:./Library/stm32f4xx_can.c ****   }
 1949              		.loc 1 1449 9 is_stmt 0 view .LVU694
 1950 000a 4369     		ldr	r3, [r0, #20]
1449:./Library/stm32f4xx_can.c ****   }
 1951              		.loc 1 1449 15 view .LVU695
 1952 000c 23EA0103 		bic	r3, r3, r1
 1953 0010 4361     		str	r3, [r0, #20]
1451:./Library/stm32f4xx_can.c **** /**
 1954              		.loc 1 1451 1 view .LVU696
 1955 0012 7047     		bx	lr
 1956              		.cfi_endproc
 1957              	.LFE142:
 1959              		.section	.text.CAN_GetFlagStatus,"ax",%progbits
 1960              		.align	1
 1961              		.global	CAN_GetFlagStatus
 1962              		.syntax unified
 1963              		.thumb
 1964              		.thumb_func
 1966              	CAN_GetFlagStatus:
ARM GAS  /tmp/ccd0Y8mk.s 			page 79


 1967              	.LVL125:
 1968              	.LFB143:
1476:./Library/stm32f4xx_can.c ****   FlagStatus bitstatus = RESET;
 1969              		.loc 1 1476 1 is_stmt 1 view -0
 1970              		.cfi_startproc
 1971              		@ args = 0, pretend = 0, frame = 0
 1972              		@ frame_needed = 0, uses_anonymous_args = 0
 1973              		@ link register save eliminated.
1477:./Library/stm32f4xx_can.c ****   
 1974              		.loc 1 1477 3 view .LVU698
1480:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_GET_FLAG(CAN_FLAG));
 1975              		.loc 1 1480 3 view .LVU699
1481:./Library/stm32f4xx_can.c ****   
 1976              		.loc 1 1481 3 view .LVU700
1484:./Library/stm32f4xx_can.c ****   { 
 1977              		.loc 1 1484 3 view .LVU701
1484:./Library/stm32f4xx_can.c ****   { 
 1978              		.loc 1 1484 5 is_stmt 0 view .LVU702
 1979 0000 11F4700F 		tst	r1, #15728640
 1980 0004 06D0     		beq	.L147
1487:./Library/stm32f4xx_can.c ****     { 
 1981              		.loc 1 1487 5 is_stmt 1 view .LVU703
1487:./Library/stm32f4xx_can.c ****     { 
 1982              		.loc 1 1487 14 is_stmt 0 view .LVU704
 1983 0006 8369     		ldr	r3, [r0, #24]
1487:./Library/stm32f4xx_can.c ****     { 
 1984              		.loc 1 1487 20 view .LVU705
 1985 0008 0B40     		ands	r3, r3, r1
 1986 000a C3F31303 		ubfx	r3, r3, #0, #20
1487:./Library/stm32f4xx_can.c ****     { 
 1987              		.loc 1 1487 8 view .LVU706
 1988 000e 33B3     		cbz	r3, .L152
1490:./Library/stm32f4xx_can.c ****     }
 1989              		.loc 1 1490 17 view .LVU707
 1990 0010 0120     		movs	r0, #1
 1991              	.LVL126:
1490:./Library/stm32f4xx_can.c ****     }
 1992              		.loc 1 1490 17 view .LVU708
 1993 0012 7047     		bx	lr
 1994              	.LVL127:
 1995              	.L147:
1498:./Library/stm32f4xx_can.c ****   { 
 1996              		.loc 1 1498 8 is_stmt 1 view .LVU709
1498:./Library/stm32f4xx_can.c ****   { 
 1997              		.loc 1 1498 10 is_stmt 0 view .LVU710
 1998 0014 11F0807F 		tst	r1, #16777216
 1999 0018 06D0     		beq	.L149
1501:./Library/stm32f4xx_can.c ****     { 
 2000              		.loc 1 1501 5 is_stmt 1 view .LVU711
1501:./Library/stm32f4xx_can.c ****     { 
 2001              		.loc 1 1501 14 is_stmt 0 view .LVU712
 2002 001a 4368     		ldr	r3, [r0, #4]
1501:./Library/stm32f4xx_can.c ****     { 
 2003              		.loc 1 1501 20 view .LVU713
 2004 001c 0B40     		ands	r3, r3, r1
 2005 001e C3F31303 		ubfx	r3, r3, #0, #20
1501:./Library/stm32f4xx_can.c ****     { 
ARM GAS  /tmp/ccd0Y8mk.s 			page 80


 2006              		.loc 1 1501 8 view .LVU714
 2007 0022 F3B1     		cbz	r3, .L153
1504:./Library/stm32f4xx_can.c ****     }
 2008              		.loc 1 1504 17 view .LVU715
 2009 0024 0120     		movs	r0, #1
 2010              	.LVL128:
1504:./Library/stm32f4xx_can.c ****     }
 2011              		.loc 1 1504 17 view .LVU716
 2012 0026 7047     		bx	lr
 2013              	.LVL129:
 2014              	.L149:
1512:./Library/stm32f4xx_can.c ****   { 
 2015              		.loc 1 1512 8 is_stmt 1 view .LVU717
1512:./Library/stm32f4xx_can.c ****   { 
 2016              		.loc 1 1512 10 is_stmt 0 view .LVU718
 2017 0028 11F0006F 		tst	r1, #134217728
 2018 002c 06D0     		beq	.L150
1515:./Library/stm32f4xx_can.c ****     { 
 2019              		.loc 1 1515 5 is_stmt 1 view .LVU719
1515:./Library/stm32f4xx_can.c ****     { 
 2020              		.loc 1 1515 14 is_stmt 0 view .LVU720
 2021 002e 8368     		ldr	r3, [r0, #8]
1515:./Library/stm32f4xx_can.c ****     { 
 2022              		.loc 1 1515 20 view .LVU721
 2023 0030 0B40     		ands	r3, r3, r1
 2024 0032 C3F31303 		ubfx	r3, r3, #0, #20
1515:./Library/stm32f4xx_can.c ****     { 
 2025              		.loc 1 1515 8 view .LVU722
 2026 0036 B3B1     		cbz	r3, .L154
1518:./Library/stm32f4xx_can.c ****     }
 2027              		.loc 1 1518 17 view .LVU723
 2028 0038 0120     		movs	r0, #1
 2029              	.LVL130:
1518:./Library/stm32f4xx_can.c ****     }
 2030              		.loc 1 1518 17 view .LVU724
 2031 003a 7047     		bx	lr
 2032              	.LVL131:
 2033              	.L150:
1526:./Library/stm32f4xx_can.c ****   { 
 2034              		.loc 1 1526 8 is_stmt 1 view .LVU725
1526:./Library/stm32f4xx_can.c ****   { 
 2035              		.loc 1 1526 10 is_stmt 0 view .LVU726
 2036 003c 11F0007F 		tst	r1, #33554432
 2037 0040 06D0     		beq	.L151
1529:./Library/stm32f4xx_can.c ****     { 
 2038              		.loc 1 1529 5 is_stmt 1 view .LVU727
1529:./Library/stm32f4xx_can.c ****     { 
 2039              		.loc 1 1529 14 is_stmt 0 view .LVU728
 2040 0042 C368     		ldr	r3, [r0, #12]
1529:./Library/stm32f4xx_can.c ****     { 
 2041              		.loc 1 1529 21 view .LVU729
 2042 0044 0B40     		ands	r3, r3, r1
 2043 0046 C3F31303 		ubfx	r3, r3, #0, #20
1529:./Library/stm32f4xx_can.c ****     { 
 2044              		.loc 1 1529 8 view .LVU730
 2045 004a 73B1     		cbz	r3, .L155
1532:./Library/stm32f4xx_can.c ****     }
ARM GAS  /tmp/ccd0Y8mk.s 			page 81


 2046              		.loc 1 1532 17 view .LVU731
 2047 004c 0120     		movs	r0, #1
 2048              	.LVL132:
1532:./Library/stm32f4xx_can.c ****     }
 2049              		.loc 1 1532 17 view .LVU732
 2050 004e 7047     		bx	lr
 2051              	.LVL133:
 2052              	.L151:
1543:./Library/stm32f4xx_can.c ****     { 
 2053              		.loc 1 1543 5 is_stmt 1 view .LVU733
1543:./Library/stm32f4xx_can.c ****     { 
 2054              		.loc 1 1543 24 is_stmt 0 view .LVU734
 2055 0050 0369     		ldr	r3, [r0, #16]
1543:./Library/stm32f4xx_can.c ****     { 
 2056              		.loc 1 1543 9 view .LVU735
 2057 0052 0B40     		ands	r3, r3, r1
 2058 0054 C3F31303 		ubfx	r3, r3, #0, #20
1543:./Library/stm32f4xx_can.c ****     { 
 2059              		.loc 1 1543 8 view .LVU736
 2060 0058 4BB1     		cbz	r3, .L156
1546:./Library/stm32f4xx_can.c ****     }
 2061              		.loc 1 1546 17 view .LVU737
 2062 005a 0120     		movs	r0, #1
 2063              	.LVL134:
1546:./Library/stm32f4xx_can.c ****     }
 2064              		.loc 1 1546 17 view .LVU738
 2065 005c 7047     		bx	lr
 2066              	.LVL135:
 2067              	.L152:
1495:./Library/stm32f4xx_can.c ****     }
 2068              		.loc 1 1495 17 view .LVU739
 2069 005e 0020     		movs	r0, #0
 2070              	.LVL136:
1495:./Library/stm32f4xx_can.c ****     }
 2071              		.loc 1 1495 17 view .LVU740
 2072 0060 7047     		bx	lr
 2073              	.LVL137:
 2074              	.L153:
1509:./Library/stm32f4xx_can.c ****     }
 2075              		.loc 1 1509 17 view .LVU741
 2076 0062 0020     		movs	r0, #0
 2077              	.LVL138:
1509:./Library/stm32f4xx_can.c ****     }
 2078              		.loc 1 1509 17 view .LVU742
 2079 0064 7047     		bx	lr
 2080              	.LVL139:
 2081              	.L154:
1523:./Library/stm32f4xx_can.c ****     }
 2082              		.loc 1 1523 17 view .LVU743
 2083 0066 0020     		movs	r0, #0
 2084              	.LVL140:
1523:./Library/stm32f4xx_can.c ****     }
 2085              		.loc 1 1523 17 view .LVU744
 2086 0068 7047     		bx	lr
 2087              	.LVL141:
 2088              	.L155:
1537:./Library/stm32f4xx_can.c ****     }
ARM GAS  /tmp/ccd0Y8mk.s 			page 82


 2089              		.loc 1 1537 17 view .LVU745
 2090 006a 0020     		movs	r0, #0
 2091              	.LVL142:
1537:./Library/stm32f4xx_can.c ****     }
 2092              		.loc 1 1537 17 view .LVU746
 2093 006c 7047     		bx	lr
 2094              	.LVL143:
 2095              	.L156:
1551:./Library/stm32f4xx_can.c ****     }
 2096              		.loc 1 1551 17 view .LVU747
 2097 006e 0020     		movs	r0, #0
 2098              	.LVL144:
1555:./Library/stm32f4xx_can.c **** }
 2099              		.loc 1 1555 3 is_stmt 1 view .LVU748
1556:./Library/stm32f4xx_can.c **** 
 2100              		.loc 1 1556 1 is_stmt 0 view .LVU749
 2101 0070 7047     		bx	lr
 2102              		.cfi_endproc
 2103              	.LFE143:
 2105              		.section	.text.CAN_ClearFlag,"ax",%progbits
 2106              		.align	1
 2107              		.global	CAN_ClearFlag
 2108              		.syntax unified
 2109              		.thumb
 2110              		.thumb_func
 2112              	CAN_ClearFlag:
 2113              	.LVL145:
 2114              	.LFB144:
1577:./Library/stm32f4xx_can.c ****   uint32_t flagtmp=0;
 2115              		.loc 1 1577 1 is_stmt 1 view -0
 2116              		.cfi_startproc
 2117              		@ args = 0, pretend = 0, frame = 0
 2118              		@ frame_needed = 0, uses_anonymous_args = 0
 2119              		@ link register save eliminated.
1578:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 2120              		.loc 1 1578 3 view .LVU751
1580:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_CLEAR_FLAG(CAN_FLAG));
 2121              		.loc 1 1580 3 view .LVU752
1581:./Library/stm32f4xx_can.c ****   
 2122              		.loc 1 1581 3 view .LVU753
1583:./Library/stm32f4xx_can.c ****   {
 2123              		.loc 1 1583 3 view .LVU754
1583:./Library/stm32f4xx_can.c ****   {
 2124              		.loc 1 1583 6 is_stmt 0 view .LVU755
 2125 0000 0C4B     		ldr	r3, .L164
 2126 0002 9942     		cmp	r1, r3
 2127 0004 06D0     		beq	.L163
1590:./Library/stm32f4xx_can.c **** 
 2128              		.loc 1 1590 5 is_stmt 1 view .LVU756
1590:./Library/stm32f4xx_can.c **** 
 2129              		.loc 1 1590 13 is_stmt 0 view .LVU757
 2130 0006 C1F31303 		ubfx	r3, r1, #0, #20
 2131              	.LVL146:
1592:./Library/stm32f4xx_can.c ****     {
 2132              		.loc 1 1592 5 is_stmt 1 view .LVU758
1592:./Library/stm32f4xx_can.c ****     {
 2133              		.loc 1 1592 8 is_stmt 0 view .LVU759
ARM GAS  /tmp/ccd0Y8mk.s 			page 83


 2134 000a 11F0007F 		tst	r1, #33554432
 2135 000e 04D0     		beq	.L160
1595:./Library/stm32f4xx_can.c ****     }
 2136              		.loc 1 1595 7 is_stmt 1 view .LVU760
1595:./Library/stm32f4xx_can.c ****     }
 2137              		.loc 1 1595 18 is_stmt 0 view .LVU761
 2138 0010 C360     		str	r3, [r0, #12]
 2139 0012 7047     		bx	lr
 2140              	.LVL147:
 2141              	.L163:
1586:./Library/stm32f4xx_can.c ****   }
 2142              		.loc 1 1586 5 is_stmt 1 view .LVU762
1586:./Library/stm32f4xx_can.c ****   }
 2143              		.loc 1 1586 15 is_stmt 0 view .LVU763
 2144 0014 0023     		movs	r3, #0
 2145 0016 8361     		str	r3, [r0, #24]
 2146 0018 7047     		bx	lr
 2147              	.LVL148:
 2148              	.L160:
1597:./Library/stm32f4xx_can.c ****     {
 2149              		.loc 1 1597 10 is_stmt 1 view .LVU764
1597:./Library/stm32f4xx_can.c ****     {
 2150              		.loc 1 1597 13 is_stmt 0 view .LVU765
 2151 001a 11F0806F 		tst	r1, #67108864
 2152 001e 01D0     		beq	.L161
1600:./Library/stm32f4xx_can.c ****     }
 2153              		.loc 1 1600 7 is_stmt 1 view .LVU766
1600:./Library/stm32f4xx_can.c ****     }
 2154              		.loc 1 1600 18 is_stmt 0 view .LVU767
 2155 0020 0361     		str	r3, [r0, #16]
 2156 0022 7047     		bx	lr
 2157              	.L161:
1602:./Library/stm32f4xx_can.c ****     {
 2158              		.loc 1 1602 10 is_stmt 1 view .LVU768
1602:./Library/stm32f4xx_can.c ****     {
 2159              		.loc 1 1602 13 is_stmt 0 view .LVU769
 2160 0024 11F0006F 		tst	r1, #134217728
 2161 0028 01D0     		beq	.L162
1605:./Library/stm32f4xx_can.c ****     }
 2162              		.loc 1 1605 7 is_stmt 1 view .LVU770
1605:./Library/stm32f4xx_can.c ****     }
 2163              		.loc 1 1605 17 is_stmt 0 view .LVU771
 2164 002a 8360     		str	r3, [r0, #8]
 2165 002c 7047     		bx	lr
 2166              	.L162:
1610:./Library/stm32f4xx_can.c ****     }
 2167              		.loc 1 1610 7 is_stmt 1 view .LVU772
1610:./Library/stm32f4xx_can.c ****     }
 2168              		.loc 1 1610 17 is_stmt 0 view .LVU773
 2169 002e 4360     		str	r3, [r0, #4]
1613:./Library/stm32f4xx_can.c **** 
 2170              		.loc 1 1613 1 view .LVU774
 2171 0030 7047     		bx	lr
 2172              	.L165:
 2173 0032 00BF     		.align	2
 2174              	.L164:
 2175 0034 7000F030 		.word	821035120
ARM GAS  /tmp/ccd0Y8mk.s 			page 84


 2176              		.cfi_endproc
 2177              	.LFE144:
 2179              		.section	.text.CAN_GetITStatus,"ax",%progbits
 2180              		.align	1
 2181              		.global	CAN_GetITStatus
 2182              		.syntax unified
 2183              		.thumb
 2184              		.thumb_func
 2186              	CAN_GetITStatus:
 2187              	.LVL149:
 2188              	.LFB145:
1638:./Library/stm32f4xx_can.c ****   ITStatus itstatus = RESET;
 2189              		.loc 1 1638 1 is_stmt 1 view -0
 2190              		.cfi_startproc
 2191              		@ args = 0, pretend = 0, frame = 0
 2192              		@ frame_needed = 0, uses_anonymous_args = 0
1638:./Library/stm32f4xx_can.c ****   ITStatus itstatus = RESET;
 2193              		.loc 1 1638 1 is_stmt 0 view .LVU776
 2194 0000 08B5     		push	{r3, lr}
 2195              	.LCFI9:
 2196              		.cfi_def_cfa_offset 8
 2197              		.cfi_offset 3, -8
 2198              		.cfi_offset 14, -4
1639:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 2199              		.loc 1 1639 3 is_stmt 1 view .LVU777
 2200              	.LVL150:
1641:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_IT(CAN_IT));
 2201              		.loc 1 1641 3 view .LVU778
1642:./Library/stm32f4xx_can.c ****   
 2202              		.loc 1 1642 3 view .LVU779
1645:./Library/stm32f4xx_can.c ****  {
 2203              		.loc 1 1645 2 view .LVU780
1645:./Library/stm32f4xx_can.c ****  {
 2204              		.loc 1 1645 10 is_stmt 0 view .LVU781
 2205 0002 4369     		ldr	r3, [r0, #20]
1645:./Library/stm32f4xx_can.c ****  {
 2206              		.loc 1 1645 4 view .LVU782
 2207 0004 0B42     		tst	r3, r1
 2208 0006 7DD0     		beq	.L186
1648:./Library/stm32f4xx_can.c ****     {
 2209              		.loc 1 1648 5 is_stmt 1 view .LVU783
 2210 0008 B1F5807F 		cmp	r1, #256
 2211 000c 6BD0     		beq	.L168
 2212 000e 21D8     		bhi	.L169
 2213 0010 2029     		cmp	r1, #32
 2214 0012 16D8     		bhi	.L170
 2215 0014 0029     		cmp	r1, #0
 2216 0016 77D0     		beq	.L187
 2217 0018 0139     		subs	r1, r1, #1
 2218              	.LVL151:
1648:./Library/stm32f4xx_can.c ****     {
 2219              		.loc 1 1648 5 is_stmt 0 view .LVU784
 2220 001a 1F29     		cmp	r1, #31
 2221 001c 76D8     		bhi	.L188
 2222 001e DFE801F0 		tbb	[pc, r1]
 2223              	.L172:
 2224 0022 3F       		.byte	(.L177-.L172)/2
ARM GAS  /tmp/ccd0Y8mk.s 			page 85


 2225 0023 44       		.byte	(.L176-.L172)/2
 2226 0024 75       		.byte	(.L188-.L172)/2
 2227 0025 49       		.byte	(.L175-.L172)/2
 2228 0026 75       		.byte	(.L188-.L172)/2
 2229 0027 75       		.byte	(.L188-.L172)/2
 2230 0028 75       		.byte	(.L188-.L172)/2
 2231 0029 4E       		.byte	(.L174-.L172)/2
 2232 002a 75       		.byte	(.L188-.L172)/2
 2233 002b 75       		.byte	(.L188-.L172)/2
 2234 002c 75       		.byte	(.L188-.L172)/2
 2235 002d 75       		.byte	(.L188-.L172)/2
 2236 002e 75       		.byte	(.L188-.L172)/2
 2237 002f 75       		.byte	(.L188-.L172)/2
 2238 0030 75       		.byte	(.L188-.L172)/2
 2239 0031 53       		.byte	(.L173-.L172)/2
 2240 0032 75       		.byte	(.L188-.L172)/2
 2241 0033 75       		.byte	(.L188-.L172)/2
 2242 0034 75       		.byte	(.L188-.L172)/2
 2243 0035 75       		.byte	(.L188-.L172)/2
 2244 0036 75       		.byte	(.L188-.L172)/2
 2245 0037 75       		.byte	(.L188-.L172)/2
 2246 0038 75       		.byte	(.L188-.L172)/2
 2247 0039 75       		.byte	(.L188-.L172)/2
 2248 003a 75       		.byte	(.L188-.L172)/2
 2249 003b 75       		.byte	(.L188-.L172)/2
 2250 003c 75       		.byte	(.L188-.L172)/2
 2251 003d 75       		.byte	(.L188-.L172)/2
 2252 003e 75       		.byte	(.L188-.L172)/2
 2253 003f 75       		.byte	(.L188-.L172)/2
 2254 0040 75       		.byte	(.L188-.L172)/2
 2255 0041 58       		.byte	(.L171-.L172)/2
 2256              	.LVL152:
 2257              		.p2align 1
 2258              	.L170:
1648:./Library/stm32f4xx_can.c ****     {
 2259              		.loc 1 1648 5 view .LVU785
 2260 0042 4029     		cmp	r1, #64
 2261 0044 04D1     		bne	.L190
1676:./Library/stm32f4xx_can.c ****         break;
 2262              		.loc 1 1676 9 is_stmt 1 view .LVU786
1676:./Library/stm32f4xx_can.c ****         break;
 2263              		.loc 1 1676 38 is_stmt 0 view .LVU787
 2264 0046 0069     		ldr	r0, [r0, #16]
 2265              	.LVL153:
1676:./Library/stm32f4xx_can.c ****         break;
 2266              		.loc 1 1676 20 view .LVU788
 2267 0048 1021     		movs	r1, #16
 2268              	.LVL154:
1676:./Library/stm32f4xx_can.c ****         break;
 2269              		.loc 1 1676 20 view .LVU789
 2270 004a FFF7FEFF 		bl	CheckITStatus
 2271              	.LVL155:
1677:./Library/stm32f4xx_can.c ****       case CAN_IT_WKU:
 2272              		.loc 1 1677 9 is_stmt 1 view .LVU790
 2273 004e 5AE0     		b	.L167
 2274              	.LVL156:
 2275              	.L190:
ARM GAS  /tmp/ccd0Y8mk.s 			page 86


1648:./Library/stm32f4xx_can.c ****     {
 2276              		.loc 1 1648 5 is_stmt 0 view .LVU791
 2277 0050 0020     		movs	r0, #0
 2278              	.LVL157:
1648:./Library/stm32f4xx_can.c ****     {
 2279              		.loc 1 1648 5 view .LVU792
 2280 0052 58E0     		b	.L167
 2281              	.LVL158:
 2282              	.L169:
1648:./Library/stm32f4xx_can.c ****     {
 2283              		.loc 1 1648 5 view .LVU793
 2284 0054 B1F5004F 		cmp	r1, #32768
 2285 0058 4FD0     		beq	.L179
 2286 005a 0AD9     		bls	.L191
 2287 005c B1F5803F 		cmp	r1, #65536
 2288 0060 3CD0     		beq	.L184
 2289 0062 B1F5003F 		cmp	r1, #131072
 2290 0066 19D1     		bne	.L192
1684:./Library/stm32f4xx_can.c ****         break;
 2291              		.loc 1 1684 9 is_stmt 1 view .LVU794
1684:./Library/stm32f4xx_can.c ****         break;
 2292              		.loc 1 1684 38 is_stmt 0 view .LVU795
 2293 0068 4068     		ldr	r0, [r0, #4]
 2294              	.LVL159:
1684:./Library/stm32f4xx_can.c ****         break;
 2295              		.loc 1 1684 20 view .LVU796
 2296 006a 1021     		movs	r1, #16
 2297              	.LVL160:
1684:./Library/stm32f4xx_can.c ****         break;
 2298              		.loc 1 1684 20 view .LVU797
 2299 006c FFF7FEFF 		bl	CheckITStatus
 2300              	.LVL161:
1685:./Library/stm32f4xx_can.c ****       case CAN_IT_EWG:
 2301              		.loc 1 1685 9 is_stmt 1 view .LVU798
 2302 0070 49E0     		b	.L167
 2303              	.LVL162:
 2304              	.L191:
1648:./Library/stm32f4xx_can.c ****     {
 2305              		.loc 1 1648 5 is_stmt 0 view .LVU799
 2306 0072 B1F5806F 		cmp	r1, #1024
 2307 0076 3BD0     		beq	.L181
 2308 0078 B1F5006F 		cmp	r1, #2048
 2309 007c 04D1     		bne	.L193
1700:./Library/stm32f4xx_can.c ****         break;
 2310              		.loc 1 1700 9 is_stmt 1 view .LVU800
1700:./Library/stm32f4xx_can.c ****         break;
 2311              		.loc 1 1700 38 is_stmt 0 view .LVU801
 2312 007e 8069     		ldr	r0, [r0, #24]
 2313              	.LVL163:
1700:./Library/stm32f4xx_can.c ****         break;
 2314              		.loc 1 1700 20 view .LVU802
 2315 0080 7021     		movs	r1, #112
 2316              	.LVL164:
1700:./Library/stm32f4xx_can.c ****         break;
 2317              		.loc 1 1700 20 view .LVU803
 2318 0082 FFF7FEFF 		bl	CheckITStatus
 2319              	.LVL165:
ARM GAS  /tmp/ccd0Y8mk.s 			page 87


1701:./Library/stm32f4xx_can.c ****       case CAN_IT_ERR:
 2320              		.loc 1 1701 9 is_stmt 1 view .LVU804
 2321 0086 3EE0     		b	.L167
 2322              	.LVL166:
 2323              	.L193:
1648:./Library/stm32f4xx_can.c ****     {
 2324              		.loc 1 1648 5 is_stmt 0 view .LVU805
 2325 0088 B1F5007F 		cmp	r1, #512
 2326 008c 04D1     		bne	.L194
1692:./Library/stm32f4xx_can.c ****         break;
 2327              		.loc 1 1692 9 is_stmt 1 view .LVU806
1692:./Library/stm32f4xx_can.c ****         break;
 2328              		.loc 1 1692 38 is_stmt 0 view .LVU807
 2329 008e 8069     		ldr	r0, [r0, #24]
 2330              	.LVL167:
1692:./Library/stm32f4xx_can.c ****         break;
 2331              		.loc 1 1692 20 view .LVU808
 2332 0090 0221     		movs	r1, #2
 2333              	.LVL168:
1692:./Library/stm32f4xx_can.c ****         break;
 2334              		.loc 1 1692 20 view .LVU809
 2335 0092 FFF7FEFF 		bl	CheckITStatus
 2336              	.LVL169:
1693:./Library/stm32f4xx_can.c ****       case CAN_IT_BOF:
 2337              		.loc 1 1693 9 is_stmt 1 view .LVU810
 2338 0096 36E0     		b	.L167
 2339              	.LVL170:
 2340              	.L194:
1648:./Library/stm32f4xx_can.c ****     {
 2341              		.loc 1 1648 5 is_stmt 0 view .LVU811
 2342 0098 0020     		movs	r0, #0
 2343              	.LVL171:
1648:./Library/stm32f4xx_can.c ****     {
 2344              		.loc 1 1648 5 view .LVU812
 2345 009a 34E0     		b	.L167
 2346              	.LVL172:
 2347              	.L192:
1648:./Library/stm32f4xx_can.c ****     {
 2348              		.loc 1 1648 5 view .LVU813
 2349 009c 0020     		movs	r0, #0
 2350              	.LVL173:
1648:./Library/stm32f4xx_can.c ****     {
 2351              		.loc 1 1648 5 view .LVU814
 2352 009e 32E0     		b	.L167
 2353              	.LVL174:
 2354              	.L177:
1652:./Library/stm32f4xx_can.c ****         break;
 2355              		.loc 1 1652 9 is_stmt 1 view .LVU815
1652:./Library/stm32f4xx_can.c ****         break;
 2356              		.loc 1 1652 38 is_stmt 0 view .LVU816
 2357 00a0 8068     		ldr	r0, [r0, #8]
 2358              	.LVL175:
1652:./Library/stm32f4xx_can.c ****         break;
 2359              		.loc 1 1652 20 view .LVU817
 2360 00a2 1B49     		ldr	r1, .L195
 2361              	.LVL176:
1652:./Library/stm32f4xx_can.c ****         break;
ARM GAS  /tmp/ccd0Y8mk.s 			page 88


 2362              		.loc 1 1652 20 view .LVU818
 2363 00a4 FFF7FEFF 		bl	CheckITStatus
 2364              	.LVL177:
1653:./Library/stm32f4xx_can.c ****       case CAN_IT_FMP0:
 2365              		.loc 1 1653 9 is_stmt 1 view .LVU819
 2366 00a8 2DE0     		b	.L167
 2367              	.LVL178:
 2368              	.L176:
1656:./Library/stm32f4xx_can.c ****         break;
 2369              		.loc 1 1656 9 view .LVU820
1656:./Library/stm32f4xx_can.c ****         break;
 2370              		.loc 1 1656 38 is_stmt 0 view .LVU821
 2371 00aa C068     		ldr	r0, [r0, #12]
 2372              	.LVL179:
1656:./Library/stm32f4xx_can.c ****         break;
 2373              		.loc 1 1656 20 view .LVU822
 2374 00ac 0321     		movs	r1, #3
 2375 00ae FFF7FEFF 		bl	CheckITStatus
 2376              	.LVL180:
1657:./Library/stm32f4xx_can.c ****       case CAN_IT_FF0:
 2377              		.loc 1 1657 9 is_stmt 1 view .LVU823
 2378 00b2 28E0     		b	.L167
 2379              	.LVL181:
 2380              	.L175:
1660:./Library/stm32f4xx_can.c ****         break;
 2381              		.loc 1 1660 9 view .LVU824
1660:./Library/stm32f4xx_can.c ****         break;
 2382              		.loc 1 1660 38 is_stmt 0 view .LVU825
 2383 00b4 C068     		ldr	r0, [r0, #12]
 2384              	.LVL182:
1660:./Library/stm32f4xx_can.c ****         break;
 2385              		.loc 1 1660 20 view .LVU826
 2386 00b6 0821     		movs	r1, #8
 2387 00b8 FFF7FEFF 		bl	CheckITStatus
 2388              	.LVL183:
1661:./Library/stm32f4xx_can.c ****       case CAN_IT_FOV0:
 2389              		.loc 1 1661 9 is_stmt 1 view .LVU827
 2390 00bc 23E0     		b	.L167
 2391              	.LVL184:
 2392              	.L174:
1664:./Library/stm32f4xx_can.c ****         break;
 2393              		.loc 1 1664 9 view .LVU828
1664:./Library/stm32f4xx_can.c ****         break;
 2394              		.loc 1 1664 38 is_stmt 0 view .LVU829
 2395 00be C068     		ldr	r0, [r0, #12]
 2396              	.LVL185:
1664:./Library/stm32f4xx_can.c ****         break;
 2397              		.loc 1 1664 20 view .LVU830
 2398 00c0 1021     		movs	r1, #16
 2399 00c2 FFF7FEFF 		bl	CheckITStatus
 2400              	.LVL186:
1665:./Library/stm32f4xx_can.c ****       case CAN_IT_FMP1:
 2401              		.loc 1 1665 9 is_stmt 1 view .LVU831
 2402 00c6 1EE0     		b	.L167
 2403              	.LVL187:
 2404              	.L173:
1668:./Library/stm32f4xx_can.c ****         break;
ARM GAS  /tmp/ccd0Y8mk.s 			page 89


 2405              		.loc 1 1668 9 view .LVU832
1668:./Library/stm32f4xx_can.c ****         break;
 2406              		.loc 1 1668 38 is_stmt 0 view .LVU833
 2407 00c8 0069     		ldr	r0, [r0, #16]
 2408              	.LVL188:
1668:./Library/stm32f4xx_can.c ****         break;
 2409              		.loc 1 1668 20 view .LVU834
 2410 00ca 0321     		movs	r1, #3
 2411 00cc FFF7FEFF 		bl	CheckITStatus
 2412              	.LVL189:
1669:./Library/stm32f4xx_can.c ****       case CAN_IT_FF1:
 2413              		.loc 1 1669 9 is_stmt 1 view .LVU835
 2414 00d0 19E0     		b	.L167
 2415              	.LVL190:
 2416              	.L171:
1672:./Library/stm32f4xx_can.c ****         break;
 2417              		.loc 1 1672 9 view .LVU836
1672:./Library/stm32f4xx_can.c ****         break;
 2418              		.loc 1 1672 38 is_stmt 0 view .LVU837
 2419 00d2 0069     		ldr	r0, [r0, #16]
 2420              	.LVL191:
1672:./Library/stm32f4xx_can.c ****         break;
 2421              		.loc 1 1672 20 view .LVU838
 2422 00d4 0821     		movs	r1, #8
 2423 00d6 FFF7FEFF 		bl	CheckITStatus
 2424              	.LVL192:
1673:./Library/stm32f4xx_can.c ****       case CAN_IT_FOV1:
 2425              		.loc 1 1673 9 is_stmt 1 view .LVU839
 2426 00da 14E0     		b	.L167
 2427              	.LVL193:
 2428              	.L184:
1680:./Library/stm32f4xx_can.c ****         break;
 2429              		.loc 1 1680 9 view .LVU840
1680:./Library/stm32f4xx_can.c ****         break;
 2430              		.loc 1 1680 38 is_stmt 0 view .LVU841
 2431 00dc 4068     		ldr	r0, [r0, #4]
 2432              	.LVL194:
1680:./Library/stm32f4xx_can.c ****         break;
 2433              		.loc 1 1680 20 view .LVU842
 2434 00de 0821     		movs	r1, #8
 2435              	.LVL195:
1680:./Library/stm32f4xx_can.c ****         break;
 2436              		.loc 1 1680 20 view .LVU843
 2437 00e0 FFF7FEFF 		bl	CheckITStatus
 2438              	.LVL196:
1681:./Library/stm32f4xx_can.c ****       case CAN_IT_SLK:
 2439              		.loc 1 1681 9 is_stmt 1 view .LVU844
 2440 00e4 0FE0     		b	.L167
 2441              	.LVL197:
 2442              	.L168:
1688:./Library/stm32f4xx_can.c ****         break;
 2443              		.loc 1 1688 9 view .LVU845
1688:./Library/stm32f4xx_can.c ****         break;
 2444              		.loc 1 1688 38 is_stmt 0 view .LVU846
 2445 00e6 8069     		ldr	r0, [r0, #24]
 2446              	.LVL198:
1688:./Library/stm32f4xx_can.c ****         break;
ARM GAS  /tmp/ccd0Y8mk.s 			page 90


 2447              		.loc 1 1688 20 view .LVU847
 2448 00e8 0121     		movs	r1, #1
 2449              	.LVL199:
1688:./Library/stm32f4xx_can.c ****         break;
 2450              		.loc 1 1688 20 view .LVU848
 2451 00ea FFF7FEFF 		bl	CheckITStatus
 2452              	.LVL200:
1689:./Library/stm32f4xx_can.c ****       case CAN_IT_EPV:
 2453              		.loc 1 1689 9 is_stmt 1 view .LVU849
 2454 00ee 0AE0     		b	.L167
 2455              	.LVL201:
 2456              	.L181:
1696:./Library/stm32f4xx_can.c ****         break;
 2457              		.loc 1 1696 9 view .LVU850
1696:./Library/stm32f4xx_can.c ****         break;
 2458              		.loc 1 1696 38 is_stmt 0 view .LVU851
 2459 00f0 8069     		ldr	r0, [r0, #24]
 2460              	.LVL202:
1696:./Library/stm32f4xx_can.c ****         break;
 2461              		.loc 1 1696 20 view .LVU852
 2462 00f2 0421     		movs	r1, #4
 2463              	.LVL203:
1696:./Library/stm32f4xx_can.c ****         break;
 2464              		.loc 1 1696 20 view .LVU853
 2465 00f4 FFF7FEFF 		bl	CheckITStatus
 2466              	.LVL204:
1697:./Library/stm32f4xx_can.c ****       case CAN_IT_LEC:
 2467              		.loc 1 1697 9 is_stmt 1 view .LVU854
 2468 00f8 05E0     		b	.L167
 2469              	.LVL205:
 2470              	.L179:
1704:./Library/stm32f4xx_can.c ****         break;
 2471              		.loc 1 1704 9 view .LVU855
1704:./Library/stm32f4xx_can.c ****         break;
 2472              		.loc 1 1704 38 is_stmt 0 view .LVU856
 2473 00fa 4068     		ldr	r0, [r0, #4]
 2474              	.LVL206:
1704:./Library/stm32f4xx_can.c ****         break;
 2475              		.loc 1 1704 20 view .LVU857
 2476 00fc 0421     		movs	r1, #4
 2477              	.LVL207:
1704:./Library/stm32f4xx_can.c ****         break;
 2478              		.loc 1 1704 20 view .LVU858
 2479 00fe FFF7FEFF 		bl	CheckITStatus
 2480              	.LVL208:
1705:./Library/stm32f4xx_can.c ****       default:
 2481              		.loc 1 1705 9 is_stmt 1 view .LVU859
 2482 0102 00E0     		b	.L167
 2483              	.LVL209:
 2484              	.L186:
1715:./Library/stm32f4xx_can.c ****   }
 2485              		.loc 1 1715 15 is_stmt 0 view .LVU860
 2486 0104 0020     		movs	r0, #0
 2487              	.LVL210:
 2488              	.L167:
1719:./Library/stm32f4xx_can.c **** }
 2489              		.loc 1 1719 3 is_stmt 1 view .LVU861
ARM GAS  /tmp/ccd0Y8mk.s 			page 91


1720:./Library/stm32f4xx_can.c **** 
 2490              		.loc 1 1720 1 is_stmt 0 view .LVU862
 2491 0106 08BD     		pop	{r3, pc}
 2492              	.LVL211:
 2493              	.L187:
1648:./Library/stm32f4xx_can.c ****     {
 2494              		.loc 1 1648 5 view .LVU863
 2495 0108 0020     		movs	r0, #0
 2496              	.LVL212:
1648:./Library/stm32f4xx_can.c ****     {
 2497              		.loc 1 1648 5 view .LVU864
 2498 010a FCE7     		b	.L167
 2499              	.LVL213:
 2500              	.L188:
1648:./Library/stm32f4xx_can.c ****     {
 2501              		.loc 1 1648 5 view .LVU865
 2502 010c 0020     		movs	r0, #0
 2503              	.LVL214:
1648:./Library/stm32f4xx_can.c ****     {
 2504              		.loc 1 1648 5 view .LVU866
 2505 010e FAE7     		b	.L167
 2506              	.L196:
 2507              		.align	2
 2508              	.L195:
 2509 0110 01010100 		.word	65793
 2510              		.cfi_endproc
 2511              	.LFE145:
 2513              		.section	.text.CAN_ClearITPendingBit,"ax",%progbits
 2514              		.align	1
 2515              		.global	CAN_ClearITPendingBit
 2516              		.syntax unified
 2517              		.thumb
 2518              		.thumb_func
 2520              	CAN_ClearITPendingBit:
 2521              	.LVL215:
 2522              	.LFB146:
1743:./Library/stm32f4xx_can.c ****   /* Check the parameters */
 2523              		.loc 1 1743 1 is_stmt 1 view -0
 2524              		.cfi_startproc
 2525              		@ args = 0, pretend = 0, frame = 0
 2526              		@ frame_needed = 0, uses_anonymous_args = 0
 2527              		@ link register save eliminated.
1745:./Library/stm32f4xx_can.c ****   assert_param(IS_CAN_CLEAR_IT(CAN_IT));
 2528              		.loc 1 1745 3 view .LVU868
1746:./Library/stm32f4xx_can.c **** 
 2529              		.loc 1 1746 3 view .LVU869
1748:./Library/stm32f4xx_can.c ****   {
 2530              		.loc 1 1748 3 view .LVU870
 2531 0000 B1F5007F 		cmp	r1, #512
 2532 0004 4ED0     		beq	.L198
 2533 0006 21D8     		bhi	.L199
 2534 0008 2029     		cmp	r1, #32
 2535 000a 16D8     		bhi	.L200
 2536 000c 0029     		cmp	r1, #0
 2537 000e 53D0     		beq	.L197
 2538 0010 0139     		subs	r1, r1, #1
 2539              	.LVL216:
ARM GAS  /tmp/ccd0Y8mk.s 			page 92


1748:./Library/stm32f4xx_can.c ****   {
 2540              		.loc 1 1748 3 is_stmt 0 view .LVU871
 2541 0012 1F29     		cmp	r1, #31
 2542 0014 50D8     		bhi	.L197
 2543 0016 DFE801F0 		tbb	[pc, r1]
 2544              	.L203:
 2545 001a 33       		.byte	(.L206-.L203)/2
 2546 001b 4F       		.byte	(.L197-.L203)/2
 2547 001c 4F       		.byte	(.L197-.L203)/2
 2548 001d 36       		.byte	(.L205-.L203)/2
 2549 001e 4F       		.byte	(.L197-.L203)/2
 2550 001f 4F       		.byte	(.L197-.L203)/2
 2551 0020 4F       		.byte	(.L197-.L203)/2
 2552 0021 39       		.byte	(.L204-.L203)/2
 2553 0022 4F       		.byte	(.L197-.L203)/2
 2554 0023 4F       		.byte	(.L197-.L203)/2
 2555 0024 4F       		.byte	(.L197-.L203)/2
 2556 0025 4F       		.byte	(.L197-.L203)/2
 2557 0026 4F       		.byte	(.L197-.L203)/2
 2558 0027 4F       		.byte	(.L197-.L203)/2
 2559 0028 4F       		.byte	(.L197-.L203)/2
 2560 0029 4F       		.byte	(.L197-.L203)/2
 2561 002a 4F       		.byte	(.L197-.L203)/2
 2562 002b 4F       		.byte	(.L197-.L203)/2
 2563 002c 4F       		.byte	(.L197-.L203)/2
 2564 002d 4F       		.byte	(.L197-.L203)/2
 2565 002e 4F       		.byte	(.L197-.L203)/2
 2566 002f 4F       		.byte	(.L197-.L203)/2
 2567 0030 4F       		.byte	(.L197-.L203)/2
 2568 0031 4F       		.byte	(.L197-.L203)/2
 2569 0032 4F       		.byte	(.L197-.L203)/2
 2570 0033 4F       		.byte	(.L197-.L203)/2
 2571 0034 4F       		.byte	(.L197-.L203)/2
 2572 0035 4F       		.byte	(.L197-.L203)/2
 2573 0036 4F       		.byte	(.L197-.L203)/2
 2574 0037 4F       		.byte	(.L197-.L203)/2
 2575 0038 4F       		.byte	(.L197-.L203)/2
 2576 0039 3C       		.byte	(.L202-.L203)/2
 2577              	.LVL217:
 2578              		.p2align 1
 2579              	.L200:
1748:./Library/stm32f4xx_can.c ****   {
 2580              		.loc 1 1748 3 view .LVU872
 2581 003a 4029     		cmp	r1, #64
 2582 003c 2CD0     		beq	.L207
 2583 003e B1F5807F 		cmp	r1, #256
 2584 0042 02D1     		bne	.L216
1780:./Library/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/ 
 2585              		.loc 1 1780 7 is_stmt 1 view .LVU873
1780:./Library/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/ 
 2586              		.loc 1 1780 17 is_stmt 0 view .LVU874
 2587 0044 0423     		movs	r3, #4
 2588 0046 4360     		str	r3, [r0, #4]
1782:./Library/stm32f4xx_can.c ****     case CAN_IT_EPV:
 2589              		.loc 1 1782 7 is_stmt 1 view .LVU875
 2590 0048 7047     		bx	lr
 2591              	.L216:
ARM GAS  /tmp/ccd0Y8mk.s 			page 93


1782:./Library/stm32f4xx_can.c ****     case CAN_IT_EPV:
 2592              		.loc 1 1782 7 is_stmt 0 view .LVU876
 2593 004a 7047     		bx	lr
 2594              	.L199:
1748:./Library/stm32f4xx_can.c ****   {
 2595              		.loc 1 1748 3 view .LVU877
 2596 004c B1F5004F 		cmp	r1, #32768
 2597 0050 2ED0     		beq	.L209
 2598 0052 08D9     		bls	.L217
 2599 0054 B1F5803F 		cmp	r1, #65536
 2600 0058 21D0     		beq	.L213
 2601 005a B1F5003F 		cmp	r1, #131072
 2602 005e 0ED1     		bne	.L218
1776:./Library/stm32f4xx_can.c ****       break;
 2603              		.loc 1 1776 7 is_stmt 1 view .LVU878
1776:./Library/stm32f4xx_can.c ****       break;
 2604              		.loc 1 1776 17 is_stmt 0 view .LVU879
 2605 0060 1023     		movs	r3, #16
 2606 0062 4360     		str	r3, [r0, #4]
1777:./Library/stm32f4xx_can.c ****     case CAN_IT_EWG:
 2607              		.loc 1 1777 7 is_stmt 1 view .LVU880
 2608 0064 7047     		bx	lr
 2609              	.L217:
1748:./Library/stm32f4xx_can.c ****   {
 2610              		.loc 1 1748 3 is_stmt 0 view .LVU881
 2611 0066 B1F5806F 		cmp	r1, #1024
 2612 006a 1ED0     		beq	.L211
 2613 006c B1F5006F 		cmp	r1, #2048
 2614 0070 04D1     		bne	.L219
1795:./Library/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
 2615              		.loc 1 1795 7 is_stmt 1 view .LVU882
1795:./Library/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
 2616              		.loc 1 1795 17 is_stmt 0 view .LVU883
 2617 0072 0023     		movs	r3, #0
 2618 0074 8361     		str	r3, [r0, #24]
1797:./Library/stm32f4xx_can.c ****       break;
 2619              		.loc 1 1797 7 is_stmt 1 view .LVU884
1797:./Library/stm32f4xx_can.c ****       break;
 2620              		.loc 1 1797 17 is_stmt 0 view .LVU885
 2621 0076 0423     		movs	r3, #4
 2622 0078 4360     		str	r3, [r0, #4]
1798:./Library/stm32f4xx_can.c ****     case CAN_IT_ERR:
 2623              		.loc 1 1798 7 is_stmt 1 view .LVU886
 2624 007a 7047     		bx	lr
 2625              	.L219:
1798:./Library/stm32f4xx_can.c ****     case CAN_IT_ERR:
 2626              		.loc 1 1798 7 is_stmt 0 view .LVU887
 2627 007c 7047     		bx	lr
 2628              	.L218:
1798:./Library/stm32f4xx_can.c ****     case CAN_IT_ERR:
 2629              		.loc 1 1798 7 view .LVU888
 2630 007e 7047     		bx	lr
 2631              	.LVL218:
 2632              	.L206:
1752:./Library/stm32f4xx_can.c ****       break;
 2633              		.loc 1 1752 7 is_stmt 1 view .LVU889
1752:./Library/stm32f4xx_can.c ****       break;
ARM GAS  /tmp/ccd0Y8mk.s 			page 94


 2634              		.loc 1 1752 17 is_stmt 0 view .LVU890
 2635 0080 0E4B     		ldr	r3, .L220
 2636 0082 8360     		str	r3, [r0, #8]
1753:./Library/stm32f4xx_can.c ****     case CAN_IT_FF0:
 2637              		.loc 1 1753 7 is_stmt 1 view .LVU891
 2638 0084 7047     		bx	lr
 2639              	.L205:
1756:./Library/stm32f4xx_can.c ****       break;
 2640              		.loc 1 1756 7 view .LVU892
1756:./Library/stm32f4xx_can.c ****       break;
 2641              		.loc 1 1756 18 is_stmt 0 view .LVU893
 2642 0086 0823     		movs	r3, #8
 2643 0088 C360     		str	r3, [r0, #12]
1757:./Library/stm32f4xx_can.c ****     case CAN_IT_FOV0:
 2644              		.loc 1 1757 7 is_stmt 1 view .LVU894
 2645 008a 7047     		bx	lr
 2646              	.L204:
1760:./Library/stm32f4xx_can.c ****       break;
 2647              		.loc 1 1760 7 view .LVU895
1760:./Library/stm32f4xx_can.c ****       break;
 2648              		.loc 1 1760 18 is_stmt 0 view .LVU896
 2649 008c 1023     		movs	r3, #16
 2650 008e C360     		str	r3, [r0, #12]
1761:./Library/stm32f4xx_can.c ****     case CAN_IT_FF1:
 2651              		.loc 1 1761 7 is_stmt 1 view .LVU897
 2652 0090 7047     		bx	lr
 2653              	.L202:
1764:./Library/stm32f4xx_can.c ****       break;
 2654              		.loc 1 1764 7 view .LVU898
1764:./Library/stm32f4xx_can.c ****       break;
 2655              		.loc 1 1764 18 is_stmt 0 view .LVU899
 2656 0092 0823     		movs	r3, #8
 2657 0094 0361     		str	r3, [r0, #16]
1765:./Library/stm32f4xx_can.c ****     case CAN_IT_FOV1:
 2658              		.loc 1 1765 7 is_stmt 1 view .LVU900
 2659 0096 7047     		bx	lr
 2660              	.LVL219:
 2661              	.L207:
1768:./Library/stm32f4xx_can.c ****       break;
 2662              		.loc 1 1768 7 view .LVU901
1768:./Library/stm32f4xx_can.c ****       break;
 2663              		.loc 1 1768 18 is_stmt 0 view .LVU902
 2664 0098 1023     		movs	r3, #16
 2665 009a 0361     		str	r3, [r0, #16]
1769:./Library/stm32f4xx_can.c ****     case CAN_IT_WKU:
 2666              		.loc 1 1769 7 is_stmt 1 view .LVU903
 2667 009c 7047     		bx	lr
 2668              	.L213:
1772:./Library/stm32f4xx_can.c ****       break;
 2669              		.loc 1 1772 7 view .LVU904
1772:./Library/stm32f4xx_can.c ****       break;
 2670              		.loc 1 1772 17 is_stmt 0 view .LVU905
 2671 009e 0823     		movs	r3, #8
 2672 00a0 4360     		str	r3, [r0, #4]
1773:./Library/stm32f4xx_can.c ****     case CAN_IT_SLK:
 2673              		.loc 1 1773 7 is_stmt 1 view .LVU906
 2674 00a2 7047     		bx	lr
ARM GAS  /tmp/ccd0Y8mk.s 			page 95


 2675              	.L198:
1785:./Library/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
 2676              		.loc 1 1785 7 view .LVU907
1785:./Library/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
 2677              		.loc 1 1785 17 is_stmt 0 view .LVU908
 2678 00a4 0423     		movs	r3, #4
 2679 00a6 4360     		str	r3, [r0, #4]
1787:./Library/stm32f4xx_can.c ****     case CAN_IT_BOF:
 2680              		.loc 1 1787 7 is_stmt 1 view .LVU909
 2681 00a8 7047     		bx	lr
 2682              	.L211:
1790:./Library/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
 2683              		.loc 1 1790 7 view .LVU910
1790:./Library/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
 2684              		.loc 1 1790 17 is_stmt 0 view .LVU911
 2685 00aa 0423     		movs	r3, #4
 2686 00ac 4360     		str	r3, [r0, #4]
1792:./Library/stm32f4xx_can.c ****     case CAN_IT_LEC:
 2687              		.loc 1 1792 8 is_stmt 1 view .LVU912
 2688 00ae 7047     		bx	lr
 2689              	.L209:
1801:./Library/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
 2690              		.loc 1 1801 7 view .LVU913
1801:./Library/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
 2691              		.loc 1 1801 17 is_stmt 0 view .LVU914
 2692 00b0 0023     		movs	r3, #0
 2693 00b2 8361     		str	r3, [r0, #24]
1803:./Library/stm32f4xx_can.c ****        /* @note BOFF, EPVF and EWGF Flags are cleared by hardware depending on the CAN Bus status*/
 2694              		.loc 1 1803 7 is_stmt 1 view .LVU915
1803:./Library/stm32f4xx_can.c ****        /* @note BOFF, EPVF and EWGF Flags are cleared by hardware depending on the CAN Bus status*/
 2695              		.loc 1 1803 17 is_stmt 0 view .LVU916
 2696 00b4 0423     		movs	r3, #4
 2697 00b6 4360     		str	r3, [r0, #4]
1805:./Library/stm32f4xx_can.c ****     default:
 2698              		.loc 1 1805 8 is_stmt 1 view .LVU917
 2699              	.LVL220:
 2700              	.L197:
1809:./Library/stm32f4xx_can.c ****  /**
 2701              		.loc 1 1809 1 is_stmt 0 view .LVU918
 2702 00b8 7047     		bx	lr
 2703              	.L221:
 2704 00ba 00BF     		.align	2
 2705              	.L220:
 2706 00bc 01010100 		.word	65793
 2707              		.cfi_endproc
 2708              	.LFE146:
 2710              		.text
 2711              	.Letext0:
 2712              		.file 2 "/usr/lib/gcc/arm-none-eabi/12.2.1/include/stdint.h"
 2713              		.file 3 "./CORE/stm32f4xx.h"
 2714              		.file 4 "./Library/stm32f4xx_can.h"
 2715              		.file 5 "./Library/stm32f4xx_rcc.h"
ARM GAS  /tmp/ccd0Y8mk.s 			page 96


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_can.c
     /tmp/ccd0Y8mk.s:21     .text.CheckITStatus:0000000000000000 $t
     /tmp/ccd0Y8mk.s:26     .text.CheckITStatus:0000000000000000 CheckITStatus
     /tmp/ccd0Y8mk.s:56     .text.CAN_DeInit:0000000000000000 $t
     /tmp/ccd0Y8mk.s:62     .text.CAN_DeInit:0000000000000000 CAN_DeInit
     /tmp/ccd0Y8mk.s:114    .text.CAN_DeInit:0000000000000034 $d
     /tmp/ccd0Y8mk.s:119    .text.CAN_Init:0000000000000000 $t
     /tmp/ccd0Y8mk.s:125    .text.CAN_Init:0000000000000000 CAN_Init
     /tmp/ccd0Y8mk.s:402    .text.CAN_FilterInit:0000000000000000 $t
     /tmp/ccd0Y8mk.s:408    .text.CAN_FilterInit:0000000000000000 CAN_FilterInit
     /tmp/ccd0Y8mk.s:613    .text.CAN_FilterInit:0000000000000108 $d
     /tmp/ccd0Y8mk.s:618    .text.CAN_StructInit:0000000000000000 $t
     /tmp/ccd0Y8mk.s:624    .text.CAN_StructInit:0000000000000000 CAN_StructInit
     /tmp/ccd0Y8mk.s:675    .text.CAN_SlaveStartBank:0000000000000000 $t
     /tmp/ccd0Y8mk.s:681    .text.CAN_SlaveStartBank:0000000000000000 CAN_SlaveStartBank
     /tmp/ccd0Y8mk.s:721    .text.CAN_SlaveStartBank:0000000000000038 $d
     /tmp/ccd0Y8mk.s:726    .text.CAN_DBGFreeze:0000000000000000 $t
     /tmp/ccd0Y8mk.s:732    .text.CAN_DBGFreeze:0000000000000000 CAN_DBGFreeze
     /tmp/ccd0Y8mk.s:765    .text.CAN_TTComModeCmd:0000000000000000 $t
     /tmp/ccd0Y8mk.s:771    .text.CAN_TTComModeCmd:0000000000000000 CAN_TTComModeCmd
     /tmp/ccd0Y8mk.s:840    .text.CAN_Transmit:0000000000000000 $t
     /tmp/ccd0Y8mk.s:846    .text.CAN_Transmit:0000000000000000 CAN_Transmit
     /tmp/ccd0Y8mk.s:1057   .text.CAN_TransmitStatus:0000000000000000 $t
     /tmp/ccd0Y8mk.s:1063   .text.CAN_TransmitStatus:0000000000000000 CAN_TransmitStatus
     /tmp/ccd0Y8mk.s:1209   .text.CAN_TransmitStatus:0000000000000088 $d
     /tmp/ccd0Y8mk.s:1217   .text.CAN_CancelTransmit:0000000000000000 $t
     /tmp/ccd0Y8mk.s:1223   .text.CAN_CancelTransmit:0000000000000000 CAN_CancelTransmit
     /tmp/ccd0Y8mk.s:1268   .text.CAN_Receive:0000000000000000 $t
     /tmp/ccd0Y8mk.s:1274   .text.CAN_Receive:0000000000000000 CAN_Receive
     /tmp/ccd0Y8mk.s:1428   .text.CAN_FIFORelease:0000000000000000 $t
     /tmp/ccd0Y8mk.s:1434   .text.CAN_FIFORelease:0000000000000000 CAN_FIFORelease
     /tmp/ccd0Y8mk.s:1463   .text.CAN_MessagePending:0000000000000000 $t
     /tmp/ccd0Y8mk.s:1469   .text.CAN_MessagePending:0000000000000000 CAN_MessagePending
     /tmp/ccd0Y8mk.s:1519   .text.CAN_OperatingModeRequest:0000000000000000 $t
     /tmp/ccd0Y8mk.s:1525   .text.CAN_OperatingModeRequest:0000000000000000 CAN_OperatingModeRequest
     /tmp/ccd0Y8mk.s:1714   .text.CAN_Sleep:0000000000000000 $t
     /tmp/ccd0Y8mk.s:1720   .text.CAN_Sleep:0000000000000000 CAN_Sleep
     /tmp/ccd0Y8mk.s:1763   .text.CAN_WakeUp:0000000000000000 $t
     /tmp/ccd0Y8mk.s:1769   .text.CAN_WakeUp:0000000000000000 CAN_WakeUp
     /tmp/ccd0Y8mk.s:1830   .text.CAN_GetLastErrorCode:0000000000000000 $t
     /tmp/ccd0Y8mk.s:1836   .text.CAN_GetLastErrorCode:0000000000000000 CAN_GetLastErrorCode
     /tmp/ccd0Y8mk.s:1860   .text.CAN_GetReceiveErrorCounter:0000000000000000 $t
     /tmp/ccd0Y8mk.s:1866   .text.CAN_GetReceiveErrorCounter:0000000000000000 CAN_GetReceiveErrorCounter
     /tmp/ccd0Y8mk.s:1890   .text.CAN_GetLSBTransmitErrorCounter:0000000000000000 $t
     /tmp/ccd0Y8mk.s:1896   .text.CAN_GetLSBTransmitErrorCounter:0000000000000000 CAN_GetLSBTransmitErrorCounter
     /tmp/ccd0Y8mk.s:1920   .text.CAN_ITConfig:0000000000000000 $t
     /tmp/ccd0Y8mk.s:1926   .text.CAN_ITConfig:0000000000000000 CAN_ITConfig
     /tmp/ccd0Y8mk.s:1960   .text.CAN_GetFlagStatus:0000000000000000 $t
     /tmp/ccd0Y8mk.s:1966   .text.CAN_GetFlagStatus:0000000000000000 CAN_GetFlagStatus
     /tmp/ccd0Y8mk.s:2106   .text.CAN_ClearFlag:0000000000000000 $t
     /tmp/ccd0Y8mk.s:2112   .text.CAN_ClearFlag:0000000000000000 CAN_ClearFlag
     /tmp/ccd0Y8mk.s:2175   .text.CAN_ClearFlag:0000000000000034 $d
     /tmp/ccd0Y8mk.s:2180   .text.CAN_GetITStatus:0000000000000000 $t
     /tmp/ccd0Y8mk.s:2186   .text.CAN_GetITStatus:0000000000000000 CAN_GetITStatus
     /tmp/ccd0Y8mk.s:2224   .text.CAN_GetITStatus:0000000000000022 $d
     /tmp/ccd0Y8mk.s:2257   .text.CAN_GetITStatus:0000000000000042 $t
ARM GAS  /tmp/ccd0Y8mk.s 			page 97


     /tmp/ccd0Y8mk.s:2509   .text.CAN_GetITStatus:0000000000000110 $d
     /tmp/ccd0Y8mk.s:2514   .text.CAN_ClearITPendingBit:0000000000000000 $t
     /tmp/ccd0Y8mk.s:2520   .text.CAN_ClearITPendingBit:0000000000000000 CAN_ClearITPendingBit
     /tmp/ccd0Y8mk.s:2545   .text.CAN_ClearITPendingBit:000000000000001a $d
     /tmp/ccd0Y8mk.s:2578   .text.CAN_ClearITPendingBit:000000000000003a $t
     /tmp/ccd0Y8mk.s:2706   .text.CAN_ClearITPendingBit:00000000000000bc $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
