ARM GAS  /tmp/ccUstmVg.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_hash.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "./Library/stm32f4xx_hash.c"
  20              		.section	.text.HASH_DeInit,"ax",%progbits
  21              		.align	1
  22              		.global	HASH_DeInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	HASH_DeInit:
  28              	.LFB123:
   1:./Library/stm32f4xx_hash.c **** /**
   2:./Library/stm32f4xx_hash.c ****   ******************************************************************************
   3:./Library/stm32f4xx_hash.c ****   * @file    stm32f4xx_hash.c
   4:./Library/stm32f4xx_hash.c ****   * @author  MCD Application Team
   5:./Library/stm32f4xx_hash.c ****   * @version V1.8.1
   6:./Library/stm32f4xx_hash.c ****   * @date    27-January-2022
   7:./Library/stm32f4xx_hash.c ****   * @brief   This file provides firmware functions to manage the following 
   8:./Library/stm32f4xx_hash.c ****   *          functionalities of the HASH / HMAC Processor (HASH) peripheral:           
   9:./Library/stm32f4xx_hash.c ****   *           - Initialization and Configuration functions
  10:./Library/stm32f4xx_hash.c ****   *           - Message Digest generation functions
  11:./Library/stm32f4xx_hash.c ****   *           - context swapping functions   
  12:./Library/stm32f4xx_hash.c ****   *           - DMA interface function       
  13:./Library/stm32f4xx_hash.c ****   *           - Interrupts and flags management       
  14:./Library/stm32f4xx_hash.c ****   *         
  15:./Library/stm32f4xx_hash.c **** @verbatim
  16:./Library/stm32f4xx_hash.c ****  ===================================================================      
  17:./Library/stm32f4xx_hash.c ****                  ##### How to use this driver #####
  18:./Library/stm32f4xx_hash.c ****  ===================================================================
  19:./Library/stm32f4xx_hash.c ****             
  20:./Library/stm32f4xx_hash.c ****  *** HASH operation : *** 
  21:./Library/stm32f4xx_hash.c ****  ========================                 
  22:./Library/stm32f4xx_hash.c ****  [..]
  23:./Library/stm32f4xx_hash.c ****    (#) Enable the HASH controller clock using 
  24:./Library/stm32f4xx_hash.c ****        RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_HASH, ENABLE) function.
  25:./Library/stm32f4xx_hash.c ****              
  26:./Library/stm32f4xx_hash.c ****    (#) Initialize the HASH using HASH_Init() function. 
  27:./Library/stm32f4xx_hash.c ****                  
  28:./Library/stm32f4xx_hash.c ****    (#) Reset the HASH processor core, so that the HASH will be ready 
  29:./Library/stm32f4xx_hash.c ****        to compute he message digest of a new message by using HASH_Reset() function.
  30:./Library/stm32f4xx_hash.c ****   
ARM GAS  /tmp/ccUstmVg.s 			page 2


  31:./Library/stm32f4xx_hash.c ****    (#) Enable the HASH controller using the HASH_Cmd() function. 
  32:./Library/stm32f4xx_hash.c ****                   
  33:./Library/stm32f4xx_hash.c ****    (#) if using DMA for Data input transfer, Activate the DMA Request 
  34:./Library/stm32f4xx_hash.c ****        using HASH_DMACmd() function 
  35:./Library/stm32f4xx_hash.c ****                       
  36:./Library/stm32f4xx_hash.c ****    (#) if DMA is not used for data transfer, use HASH_DataIn() function 
  37:./Library/stm32f4xx_hash.c ****        to enter data to IN FIFO.
  38:./Library/stm32f4xx_hash.c ****                
  39:./Library/stm32f4xx_hash.c ****             
  40:./Library/stm32f4xx_hash.c ****    (#) Configure the Number of valid bits in last word of the message 
  41:./Library/stm32f4xx_hash.c ****        using HASH_SetLastWordValidBitsNbr() function.
  42:./Library/stm32f4xx_hash.c ****                
  43:./Library/stm32f4xx_hash.c ****    (#) if the message length is not an exact multiple of 512 bits, 
  44:./Library/stm32f4xx_hash.c ****        then the function HASH_StartDigest() must be called to launch the computation
  45:./Library/stm32f4xx_hash.c ****        of the final digest.     
  46:./Library/stm32f4xx_hash.c ****                
  47:./Library/stm32f4xx_hash.c ****    (#) Once computed, the digest can be read using HASH_GetDigest() function.         
  48:./Library/stm32f4xx_hash.c ****                      
  49:./Library/stm32f4xx_hash.c ****    (#) To control HASH events you can use one of the following wo methods:
  50:./Library/stm32f4xx_hash.c ****        (++) Check on HASH flags using the HASH_GetFlagStatus() function.  
  51:./Library/stm32f4xx_hash.c ****        (++) Use HASH interrupts through the function HASH_ITConfig() at 
  52:./Library/stm32f4xx_hash.c ****             initialization phase and HASH_GetITStatus() function into 
  53:./Library/stm32f4xx_hash.c ****             interrupt routines in hashing phase.
  54:./Library/stm32f4xx_hash.c ****             After checking on a flag you should clear it using HASH_ClearFlag()
  55:./Library/stm32f4xx_hash.c ****             function. And after checking on an interrupt event you should 
  56:./Library/stm32f4xx_hash.c ****             clear it using HASH_ClearITPendingBit() function.     
  57:./Library/stm32f4xx_hash.c ****                        
  58:./Library/stm32f4xx_hash.c ****    (#) Save and restore hash processor context using 
  59:./Library/stm32f4xx_hash.c ****        HASH_SaveContext() and HASH_RestoreContext() functions.     
  60:./Library/stm32f4xx_hash.c ****                 
  61:./Library/stm32f4xx_hash.c ****   
  62:./Library/stm32f4xx_hash.c ****               
  63:./Library/stm32f4xx_hash.c ****  *** HMAC operation : *** 
  64:./Library/stm32f4xx_hash.c ****  ========================
  65:./Library/stm32f4xx_hash.c ****  [..] The HMAC algorithm is used for message authentication, by 
  66:./Library/stm32f4xx_hash.c ****       irreversibly binding the message being processed to a key chosen 
  67:./Library/stm32f4xx_hash.c ****       by the user. 
  68:./Library/stm32f4xx_hash.c ****       For HMAC specifications, refer to "HMAC: keyed-hashing for message 
  69:./Library/stm32f4xx_hash.c ****       authentication, H. Krawczyk, M. Bellare, R. Canetti, February 1997"
  70:./Library/stm32f4xx_hash.c ****             
  71:./Library/stm32f4xx_hash.c ****  [..] Basically, the HMAC algorithm consists of two nested hash operations:
  72:./Library/stm32f4xx_hash.c ****       HMAC(message) = Hash[((key | pad) XOR 0x5C) | Hash(((key | pad) XOR 0x36) | message)]
  73:./Library/stm32f4xx_hash.c ****       where:
  74:./Library/stm32f4xx_hash.c ****       (+) "pad" is a sequence of zeroes needed to extend the key to the 
  75:./Library/stm32f4xx_hash.c ****           length of the underlying hash function data block (that is 
  76:./Library/stm32f4xx_hash.c ****           512 bits for both the SHA-1 and MD5 hash algorithms)
  77:./Library/stm32f4xx_hash.c ****       (+) "|"   represents the concatenation operator 
  78:./Library/stm32f4xx_hash.c ****             
  79:./Library/stm32f4xx_hash.c ****            
  80:./Library/stm32f4xx_hash.c ****  [..]To compute the HMAC, four different phases are required:                  
  81:./Library/stm32f4xx_hash.c ****    (#) Initialize the HASH using HASH_Init() function to do HMAC 
  82:./Library/stm32f4xx_hash.c ****        operation. 
  83:./Library/stm32f4xx_hash.c ****                   
  84:./Library/stm32f4xx_hash.c ****    (#) The key (to be used for the inner hash function) is then given to the core. 
  85:./Library/stm32f4xx_hash.c ****        This operation follows the same mechanism as the one used to send the 
  86:./Library/stm32f4xx_hash.c ****        message in the hash operation (that is, by HASH_DataIn() function and, 
  87:./Library/stm32f4xx_hash.c ****        finally, HASH_StartDigest() function.
ARM GAS  /tmp/ccUstmVg.s 			page 3


  88:./Library/stm32f4xx_hash.c ****             
  89:./Library/stm32f4xx_hash.c ****    (#) Once the last word has been entered and computation has started, 
  90:./Library/stm32f4xx_hash.c ****        the hash processor elaborates the key. It is then ready to accept the message
  91:./Library/stm32f4xx_hash.c ****        text using the same mechanism as the one used to send the message in the
  92:./Library/stm32f4xx_hash.c ****        hash operation.
  93:./Library/stm32f4xx_hash.c ****          
  94:./Library/stm32f4xx_hash.c ****    (#) After the first hash round, the hash processor returns "ready" to indicate 
  95:./Library/stm32f4xx_hash.c ****        that it is ready to receive the key to be used for the outer hash function 
  96:./Library/stm32f4xx_hash.c ****        (normally, this key is the same as the one used for the inner hash function). 
  97:./Library/stm32f4xx_hash.c ****        When the last word of the key is entered and computation starts, the HMAC 
  98:./Library/stm32f4xx_hash.c ****        result is made available using HASH_GetDigest() function.
  99:./Library/stm32f4xx_hash.c **** 
 100:./Library/stm32f4xx_hash.c **** @endverbatim
 101:./Library/stm32f4xx_hash.c ****   *         
 102:./Library/stm32f4xx_hash.c ****   ******************************************************************************
 103:./Library/stm32f4xx_hash.c ****   * @attention
 104:./Library/stm32f4xx_hash.c ****   *
 105:./Library/stm32f4xx_hash.c ****   * Copyright (c) 2016 STMicroelectronics.
 106:./Library/stm32f4xx_hash.c ****   * All rights reserved.
 107:./Library/stm32f4xx_hash.c ****   *
 108:./Library/stm32f4xx_hash.c ****   * This software is licensed under terms that can be found in the LICENSE file
 109:./Library/stm32f4xx_hash.c ****   * in the root directory of this software component.
 110:./Library/stm32f4xx_hash.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
 111:./Library/stm32f4xx_hash.c ****   *
 112:./Library/stm32f4xx_hash.c ****   ******************************************************************************
 113:./Library/stm32f4xx_hash.c ****   */
 114:./Library/stm32f4xx_hash.c **** 
 115:./Library/stm32f4xx_hash.c **** /* Includes ------------------------------------------------------------------*/
 116:./Library/stm32f4xx_hash.c **** #include "stm32f4xx_hash.h"
 117:./Library/stm32f4xx_hash.c **** #include "stm32f4xx_rcc.h"
 118:./Library/stm32f4xx_hash.c **** 
 119:./Library/stm32f4xx_hash.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 120:./Library/stm32f4xx_hash.c ****   * @{
 121:./Library/stm32f4xx_hash.c ****   */
 122:./Library/stm32f4xx_hash.c **** 
 123:./Library/stm32f4xx_hash.c **** /** @defgroup HASH 
 124:./Library/stm32f4xx_hash.c ****   * @brief HASH driver modules
 125:./Library/stm32f4xx_hash.c ****   * @{
 126:./Library/stm32f4xx_hash.c ****   */ 
 127:./Library/stm32f4xx_hash.c **** 
 128:./Library/stm32f4xx_hash.c **** /* Private typedef -----------------------------------------------------------*/
 129:./Library/stm32f4xx_hash.c **** /* Private define ------------------------------------------------------------*/
 130:./Library/stm32f4xx_hash.c **** /* Private macro -------------------------------------------------------------*/
 131:./Library/stm32f4xx_hash.c **** /* Private variables ---------------------------------------------------------*/
 132:./Library/stm32f4xx_hash.c **** /* Private function prototypes -----------------------------------------------*/
 133:./Library/stm32f4xx_hash.c **** /* Private functions ---------------------------------------------------------*/ 
 134:./Library/stm32f4xx_hash.c **** 
 135:./Library/stm32f4xx_hash.c **** /** @defgroup HASH_Private_Functions
 136:./Library/stm32f4xx_hash.c ****   * @{
 137:./Library/stm32f4xx_hash.c ****   */ 
 138:./Library/stm32f4xx_hash.c **** 
 139:./Library/stm32f4xx_hash.c **** /** @defgroup HASH_Group1 Initialization and Configuration functions
 140:./Library/stm32f4xx_hash.c ****  *  @brief    Initialization and Configuration functions 
 141:./Library/stm32f4xx_hash.c ****  *
 142:./Library/stm32f4xx_hash.c **** @verbatim    
 143:./Library/stm32f4xx_hash.c ****  ===============================================================================
 144:./Library/stm32f4xx_hash.c ****               ##### Initialization and Configuration functions #####
ARM GAS  /tmp/ccUstmVg.s 			page 4


 145:./Library/stm32f4xx_hash.c ****  ===============================================================================  
 146:./Library/stm32f4xx_hash.c ****  [..] This section provides functions allowing to 
 147:./Library/stm32f4xx_hash.c ****    (+) Initialize the HASH peripheral
 148:./Library/stm32f4xx_hash.c ****    (+) Configure the HASH Processor 
 149:./Library/stm32f4xx_hash.c ****    (+) MD5/SHA1, 
 150:./Library/stm32f4xx_hash.c ****    (+) HASH/HMAC, 
 151:./Library/stm32f4xx_hash.c ****    (+) datatype 
 152:./Library/stm32f4xx_hash.c ****    (+) HMAC Key (if mode = HMAC)
 153:./Library/stm32f4xx_hash.c ****    (+) Reset the HASH Processor 
 154:./Library/stm32f4xx_hash.c ****    
 155:./Library/stm32f4xx_hash.c **** @endverbatim
 156:./Library/stm32f4xx_hash.c ****   * @{
 157:./Library/stm32f4xx_hash.c ****   */
 158:./Library/stm32f4xx_hash.c ****   
 159:./Library/stm32f4xx_hash.c **** /**
 160:./Library/stm32f4xx_hash.c ****   * @brief  De-initializes the HASH peripheral registers to their default reset values
 161:./Library/stm32f4xx_hash.c ****   * @param  None
 162:./Library/stm32f4xx_hash.c ****   * @retval None
 163:./Library/stm32f4xx_hash.c ****   */
 164:./Library/stm32f4xx_hash.c **** void HASH_DeInit(void)
 165:./Library/stm32f4xx_hash.c **** {
  29              		.loc 1 165 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
 166:./Library/stm32f4xx_hash.c ****   /* Enable HASH reset state */
 167:./Library/stm32f4xx_hash.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_HASH, ENABLE);
  38              		.loc 1 167 3 view .LVU1
  39 0002 0121     		movs	r1, #1
  40 0004 2020     		movs	r0, #32
  41 0006 FFF7FEFF 		bl	RCC_AHB2PeriphResetCmd
  42              	.LVL0:
 168:./Library/stm32f4xx_hash.c ****   /* Release HASH from reset state */
 169:./Library/stm32f4xx_hash.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_HASH, DISABLE);
  43              		.loc 1 169 3 view .LVU2
  44 000a 0021     		movs	r1, #0
  45 000c 2020     		movs	r0, #32
  46 000e FFF7FEFF 		bl	RCC_AHB2PeriphResetCmd
  47              	.LVL1:
 170:./Library/stm32f4xx_hash.c **** }
  48              		.loc 1 170 1 is_stmt 0 view .LVU3
  49 0012 08BD     		pop	{r3, pc}
  50              		.cfi_endproc
  51              	.LFE123:
  53              		.section	.text.HASH_Init,"ax",%progbits
  54              		.align	1
  55              		.global	HASH_Init
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  60              	HASH_Init:
  61              	.LVL2:
ARM GAS  /tmp/ccUstmVg.s 			page 5


  62              	.LFB124:
 171:./Library/stm32f4xx_hash.c **** 
 172:./Library/stm32f4xx_hash.c **** /**
 173:./Library/stm32f4xx_hash.c ****   * @brief  Initializes the HASH peripheral according to the specified parameters
 174:./Library/stm32f4xx_hash.c ****   *         in the HASH_InitStruct structure.
 175:./Library/stm32f4xx_hash.c ****   * @note   the hash processor is reset when calling this function so that the
 176:./Library/stm32f4xx_hash.c ****   *         HASH will be ready to compute the message digest of a new message.
 177:./Library/stm32f4xx_hash.c ****   *         There is no need to call HASH_Reset() function.           
 178:./Library/stm32f4xx_hash.c ****   * @param  HASH_InitStruct: pointer to a HASH_InitTypeDef structure that contains
 179:./Library/stm32f4xx_hash.c ****   *         the configuration information for the HASH peripheral.
 180:./Library/stm32f4xx_hash.c ****   * @note   The field HASH_HMACKeyType in HASH_InitTypeDef must be filled only 
 181:./Library/stm32f4xx_hash.c ****   *          if the algorithm mode is HMAC.       
 182:./Library/stm32f4xx_hash.c ****   * @retval None
 183:./Library/stm32f4xx_hash.c ****   */
 184:./Library/stm32f4xx_hash.c **** void HASH_Init(HASH_InitTypeDef* HASH_InitStruct)
 185:./Library/stm32f4xx_hash.c **** {
  63              		.loc 1 185 1 is_stmt 1 view -0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
  67              		@ link register save eliminated.
  68              		.loc 1 185 1 is_stmt 0 view .LVU5
  69 0000 10B4     		push	{r4}
  70              	.LCFI1:
  71              		.cfi_def_cfa_offset 4
  72              		.cfi_offset 4, -4
 186:./Library/stm32f4xx_hash.c ****   /* Check the parameters */
 187:./Library/stm32f4xx_hash.c ****   assert_param(IS_HASH_ALGOSELECTION(HASH_InitStruct->HASH_AlgoSelection));
  73              		.loc 1 187 3 is_stmt 1 view .LVU6
 188:./Library/stm32f4xx_hash.c ****   assert_param(IS_HASH_DATATYPE(HASH_InitStruct->HASH_DataType));
  74              		.loc 1 188 3 view .LVU7
 189:./Library/stm32f4xx_hash.c ****   assert_param(IS_HASH_ALGOMODE(HASH_InitStruct->HASH_AlgoMode));
  75              		.loc 1 189 3 view .LVU8
 190:./Library/stm32f4xx_hash.c ****   
 191:./Library/stm32f4xx_hash.c ****   /* Configure the Algorithm used, algorithm mode and the datatype */
 192:./Library/stm32f4xx_hash.c ****   HASH->CR &= ~ (HASH_CR_ALGO | HASH_CR_DATATYPE | HASH_CR_MODE);
  76              		.loc 1 192 3 view .LVU9
  77              		.loc 1 192 7 is_stmt 0 view .LVU10
  78 0002 124A     		ldr	r2, .L7
  79 0004 1368     		ldr	r3, [r2]
  80              		.loc 1 192 12 view .LVU11
  81 0006 23F48023 		bic	r3, r3, #262144
  82 000a 23F0F003 		bic	r3, r3, #240
  83 000e 1360     		str	r3, [r2]
 193:./Library/stm32f4xx_hash.c ****   HASH->CR |= (HASH_InitStruct->HASH_AlgoSelection | \
  84              		.loc 1 193 3 is_stmt 1 view .LVU12
  85              		.loc 1 193 7 is_stmt 0 view .LVU13
  86 0010 1168     		ldr	r1, [r2]
  87              		.loc 1 193 31 view .LVU14
  88 0012 0368     		ldr	r3, [r0]
  89              		.loc 1 193 52 view .LVU15
  90 0014 8468     		ldr	r4, [r0, #8]
  91 0016 2343     		orrs	r3, r3, r4
 194:./Library/stm32f4xx_hash.c ****                HASH_InitStruct->HASH_DataType | \
  92              		.loc 1 194 47 view .LVU16
  93 0018 4468     		ldr	r4, [r0, #4]
  94 001a 2343     		orrs	r3, r3, r4
ARM GAS  /tmp/ccUstmVg.s 			page 6


 193:./Library/stm32f4xx_hash.c ****   HASH->CR |= (HASH_InitStruct->HASH_AlgoSelection | \
  95              		.loc 1 193 12 view .LVU17
  96 001c 0B43     		orrs	r3, r3, r1
  97 001e 1360     		str	r3, [r2]
 195:./Library/stm32f4xx_hash.c ****                HASH_InitStruct->HASH_AlgoMode);
 196:./Library/stm32f4xx_hash.c ****   
 197:./Library/stm32f4xx_hash.c ****   /* if algorithm mode is HMAC, set the Key */  
 198:./Library/stm32f4xx_hash.c ****   if(HASH_InitStruct->HASH_AlgoMode == HASH_AlgoMode_HMAC) 
  98              		.loc 1 198 3 is_stmt 1 view .LVU18
  99              		.loc 1 198 21 is_stmt 0 view .LVU19
 100 0020 4368     		ldr	r3, [r0, #4]
 101              		.loc 1 198 5 view .LVU20
 102 0022 402B     		cmp	r3, #64
 103 0024 07D0     		beq	.L6
 104              	.L4:
 199:./Library/stm32f4xx_hash.c ****   {
 200:./Library/stm32f4xx_hash.c ****     assert_param(IS_HASH_HMAC_KEYTYPE(HASH_InitStruct->HASH_HMACKeyType));
 201:./Library/stm32f4xx_hash.c ****     HASH->CR &= ~HASH_CR_LKEY;
 202:./Library/stm32f4xx_hash.c ****     HASH->CR |= HASH_InitStruct->HASH_HMACKeyType;
 203:./Library/stm32f4xx_hash.c ****   }
 204:./Library/stm32f4xx_hash.c **** 
 205:./Library/stm32f4xx_hash.c ****   /* Reset the HASH processor core, so that the HASH will be ready to compute 
 206:./Library/stm32f4xx_hash.c ****      the message digest of a new message */
 207:./Library/stm32f4xx_hash.c ****   HASH->CR |= HASH_CR_INIT;  
 105              		.loc 1 207 3 is_stmt 1 view .LVU21
 106              		.loc 1 207 7 is_stmt 0 view .LVU22
 107 0026 094A     		ldr	r2, .L7
 108 0028 1368     		ldr	r3, [r2]
 109              		.loc 1 207 12 view .LVU23
 110 002a 43F00403 		orr	r3, r3, #4
 111 002e 1360     		str	r3, [r2]
 208:./Library/stm32f4xx_hash.c **** }
 112              		.loc 1 208 1 view .LVU24
 113 0030 5DF8044B 		ldr	r4, [sp], #4
 114              	.LCFI2:
 115              		.cfi_remember_state
 116              		.cfi_restore 4
 117              		.cfi_def_cfa_offset 0
 118 0034 7047     		bx	lr
 119              	.L6:
 120              	.LCFI3:
 121              		.cfi_restore_state
 200:./Library/stm32f4xx_hash.c ****     HASH->CR &= ~HASH_CR_LKEY;
 122              		.loc 1 200 5 is_stmt 1 view .LVU25
 201:./Library/stm32f4xx_hash.c ****     HASH->CR |= HASH_InitStruct->HASH_HMACKeyType;
 123              		.loc 1 201 5 view .LVU26
 201:./Library/stm32f4xx_hash.c ****     HASH->CR |= HASH_InitStruct->HASH_HMACKeyType;
 124              		.loc 1 201 9 is_stmt 0 view .LVU27
 125 0036 1346     		mov	r3, r2
 126 0038 1268     		ldr	r2, [r2]
 201:./Library/stm32f4xx_hash.c ****     HASH->CR |= HASH_InitStruct->HASH_HMACKeyType;
 127              		.loc 1 201 14 view .LVU28
 128 003a 22F48032 		bic	r2, r2, #65536
 129 003e 1A60     		str	r2, [r3]
 202:./Library/stm32f4xx_hash.c ****   }
 130              		.loc 1 202 5 is_stmt 1 view .LVU29
 202:./Library/stm32f4xx_hash.c ****   }
ARM GAS  /tmp/ccUstmVg.s 			page 7


 131              		.loc 1 202 9 is_stmt 0 view .LVU30
 132 0040 1A68     		ldr	r2, [r3]
 202:./Library/stm32f4xx_hash.c ****   }
 133              		.loc 1 202 32 view .LVU31
 134 0042 C168     		ldr	r1, [r0, #12]
 202:./Library/stm32f4xx_hash.c ****   }
 135              		.loc 1 202 14 view .LVU32
 136 0044 0A43     		orrs	r2, r2, r1
 137 0046 1A60     		str	r2, [r3]
 138 0048 EDE7     		b	.L4
 139              	.L8:
 140 004a 00BF     		.align	2
 141              	.L7:
 142 004c 00040650 		.word	1342571520
 143              		.cfi_endproc
 144              	.LFE124:
 146              		.section	.text.HASH_StructInit,"ax",%progbits
 147              		.align	1
 148              		.global	HASH_StructInit
 149              		.syntax unified
 150              		.thumb
 151              		.thumb_func
 153              	HASH_StructInit:
 154              	.LVL3:
 155              	.LFB125:
 209:./Library/stm32f4xx_hash.c **** 
 210:./Library/stm32f4xx_hash.c **** /**
 211:./Library/stm32f4xx_hash.c ****   * @brief  Fills each HASH_InitStruct member with its default value.
 212:./Library/stm32f4xx_hash.c ****   * @param  HASH_InitStruct : pointer to a HASH_InitTypeDef structure which will
 213:./Library/stm32f4xx_hash.c ****   *          be initialized.  
 214:./Library/stm32f4xx_hash.c ****   *  @note  The default values set are : Processor mode is HASH, Algorithm selected is SHA1,
 215:./Library/stm32f4xx_hash.c ****   *          Data type selected is 32b and HMAC Key Type is short key.  
 216:./Library/stm32f4xx_hash.c ****   * @retval None
 217:./Library/stm32f4xx_hash.c ****   */
 218:./Library/stm32f4xx_hash.c **** void HASH_StructInit(HASH_InitTypeDef* HASH_InitStruct)
 219:./Library/stm32f4xx_hash.c **** {
 156              		.loc 1 219 1 is_stmt 1 view -0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160              		@ link register save eliminated.
 220:./Library/stm32f4xx_hash.c ****   /* Initialize the HASH_AlgoSelection member */
 221:./Library/stm32f4xx_hash.c ****   HASH_InitStruct->HASH_AlgoSelection = HASH_AlgoSelection_SHA1;
 161              		.loc 1 221 3 view .LVU34
 162              		.loc 1 221 39 is_stmt 0 view .LVU35
 163 0000 0023     		movs	r3, #0
 164 0002 0360     		str	r3, [r0]
 222:./Library/stm32f4xx_hash.c **** 
 223:./Library/stm32f4xx_hash.c ****   /* Initialize the HASH_AlgoMode member */
 224:./Library/stm32f4xx_hash.c ****   HASH_InitStruct->HASH_AlgoMode = HASH_AlgoMode_HASH;
 165              		.loc 1 224 3 is_stmt 1 view .LVU36
 166              		.loc 1 224 34 is_stmt 0 view .LVU37
 167 0004 4360     		str	r3, [r0, #4]
 225:./Library/stm32f4xx_hash.c **** 
 226:./Library/stm32f4xx_hash.c ****   /* Initialize the HASH_DataType member */
 227:./Library/stm32f4xx_hash.c ****   HASH_InitStruct->HASH_DataType = HASH_DataType_32b;
 168              		.loc 1 227 3 is_stmt 1 view .LVU38
ARM GAS  /tmp/ccUstmVg.s 			page 8


 169              		.loc 1 227 34 is_stmt 0 view .LVU39
 170 0006 8360     		str	r3, [r0, #8]
 228:./Library/stm32f4xx_hash.c **** 
 229:./Library/stm32f4xx_hash.c ****   /* Initialize the HASH_HMACKeyType member */
 230:./Library/stm32f4xx_hash.c ****   HASH_InitStruct->HASH_HMACKeyType = HASH_HMACKeyType_ShortKey;
 171              		.loc 1 230 3 is_stmt 1 view .LVU40
 172              		.loc 1 230 37 is_stmt 0 view .LVU41
 173 0008 C360     		str	r3, [r0, #12]
 231:./Library/stm32f4xx_hash.c **** }
 174              		.loc 1 231 1 view .LVU42
 175 000a 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE125:
 179              		.section	.text.HASH_Reset,"ax",%progbits
 180              		.align	1
 181              		.global	HASH_Reset
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 186              	HASH_Reset:
 187              	.LFB126:
 232:./Library/stm32f4xx_hash.c **** 
 233:./Library/stm32f4xx_hash.c **** /**
 234:./Library/stm32f4xx_hash.c ****   * @brief  Resets the HASH processor core, so that the HASH will be ready
 235:./Library/stm32f4xx_hash.c ****   *         to compute the message digest of a new message.
 236:./Library/stm32f4xx_hash.c ****   * @note   Calling this function will clear the HASH_SR_DCIS (Digest calculation 
 237:./Library/stm32f4xx_hash.c ****   *         completion interrupt status) bit corresponding to HASH_IT_DCI 
 238:./Library/stm32f4xx_hash.c ****   *         interrupt and HASH_FLAG_DCIS flag. 
 239:./Library/stm32f4xx_hash.c ****   * @param  None
 240:./Library/stm32f4xx_hash.c ****   * @retval None
 241:./Library/stm32f4xx_hash.c ****   */
 242:./Library/stm32f4xx_hash.c **** void HASH_Reset(void)
 243:./Library/stm32f4xx_hash.c **** {
 188              		.loc 1 243 1 is_stmt 1 view -0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 244:./Library/stm32f4xx_hash.c ****   /* Reset the HASH processor core */
 245:./Library/stm32f4xx_hash.c ****   HASH->CR |= HASH_CR_INIT;
 193              		.loc 1 245 3 view .LVU44
 194              		.loc 1 245 7 is_stmt 0 view .LVU45
 195 0000 024A     		ldr	r2, .L11
 196 0002 1368     		ldr	r3, [r2]
 197              		.loc 1 245 12 view .LVU46
 198 0004 43F00403 		orr	r3, r3, #4
 199 0008 1360     		str	r3, [r2]
 246:./Library/stm32f4xx_hash.c **** }
 200              		.loc 1 246 1 view .LVU47
 201 000a 7047     		bx	lr
 202              	.L12:
 203              		.align	2
 204              	.L11:
 205 000c 00040650 		.word	1342571520
 206              		.cfi_endproc
 207              	.LFE126:
 209              		.section	.text.HASH_SetLastWordValidBitsNbr,"ax",%progbits
ARM GAS  /tmp/ccUstmVg.s 			page 9


 210              		.align	1
 211              		.global	HASH_SetLastWordValidBitsNbr
 212              		.syntax unified
 213              		.thumb
 214              		.thumb_func
 216              	HASH_SetLastWordValidBitsNbr:
 217              	.LVL4:
 218              	.LFB127:
 247:./Library/stm32f4xx_hash.c **** /**
 248:./Library/stm32f4xx_hash.c ****   * @}
 249:./Library/stm32f4xx_hash.c ****   */
 250:./Library/stm32f4xx_hash.c ****  
 251:./Library/stm32f4xx_hash.c **** /** @defgroup HASH_Group2 Message Digest generation functions
 252:./Library/stm32f4xx_hash.c ****  *  @brief    Message Digest generation functions
 253:./Library/stm32f4xx_hash.c ****  *
 254:./Library/stm32f4xx_hash.c **** @verbatim    
 255:./Library/stm32f4xx_hash.c ****  ===============================================================================
 256:./Library/stm32f4xx_hash.c ****                   ##### Message Digest generation functions #####
 257:./Library/stm32f4xx_hash.c ****  ===============================================================================  
 258:./Library/stm32f4xx_hash.c ****  [..] This section provides functions allowing the generation of message digest: 
 259:./Library/stm32f4xx_hash.c ****    (+) Push data in the IN FIFO : using HASH_DataIn()
 260:./Library/stm32f4xx_hash.c ****    (+) Get the number of words set in IN FIFO, use HASH_GetInFIFOWordsNbr()  
 261:./Library/stm32f4xx_hash.c ****    (+) set the last word valid bits number using HASH_SetLastWordValidBitsNbr() 
 262:./Library/stm32f4xx_hash.c ****    (+) start digest calculation : using HASH_StartDigest()
 263:./Library/stm32f4xx_hash.c ****    (+) Get the Digest message : using HASH_GetDigest()
 264:./Library/stm32f4xx_hash.c ****  
 265:./Library/stm32f4xx_hash.c **** @endverbatim
 266:./Library/stm32f4xx_hash.c ****   * @{
 267:./Library/stm32f4xx_hash.c ****   */
 268:./Library/stm32f4xx_hash.c **** 
 269:./Library/stm32f4xx_hash.c **** 
 270:./Library/stm32f4xx_hash.c **** /**
 271:./Library/stm32f4xx_hash.c ****   * @brief  Configure the Number of valid bits in last word of the message
 272:./Library/stm32f4xx_hash.c ****   * @param  ValidNumber: Number of valid bits in last word of the message.
 273:./Library/stm32f4xx_hash.c ****   *           This parameter must be a number between 0 and 0x1F.
 274:./Library/stm32f4xx_hash.c ****   *             - 0x00: All 32 bits of the last data written are valid
 275:./Library/stm32f4xx_hash.c ****   *             - 0x01: Only bit [0] of the last data written is valid
 276:./Library/stm32f4xx_hash.c ****   *             - 0x02: Only bits[1:0] of the last data written are valid
 277:./Library/stm32f4xx_hash.c ****   *             - 0x03: Only bits[2:0] of the last data written are valid
 278:./Library/stm32f4xx_hash.c ****   *             - ...
 279:./Library/stm32f4xx_hash.c ****   *             - 0x1F: Only bits[30:0] of the last data written are valid    
 280:./Library/stm32f4xx_hash.c ****   * @note   The Number of valid bits must be set before to start the message 
 281:./Library/stm32f4xx_hash.c ****   *         digest competition (in Hash and HMAC) and key treatment(in HMAC).    
 282:./Library/stm32f4xx_hash.c ****   * @retval None
 283:./Library/stm32f4xx_hash.c ****   */
 284:./Library/stm32f4xx_hash.c **** void HASH_SetLastWordValidBitsNbr(uint16_t ValidNumber)
 285:./Library/stm32f4xx_hash.c **** {
 219              		.loc 1 285 1 is_stmt 1 view -0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              		@ link register save eliminated.
 286:./Library/stm32f4xx_hash.c ****   /* Check the parameters */
 287:./Library/stm32f4xx_hash.c ****   assert_param(IS_HASH_VALIDBITSNUMBER(ValidNumber));
 224              		.loc 1 287 3 view .LVU49
 288:./Library/stm32f4xx_hash.c ****   
 289:./Library/stm32f4xx_hash.c ****   /* Configure the Number of valid bits in last word of the message */
ARM GAS  /tmp/ccUstmVg.s 			page 10


 290:./Library/stm32f4xx_hash.c ****   HASH->STR &= ~(HASH_STR_NBW);
 225              		.loc 1 290 3 view .LVU50
 226              		.loc 1 290 7 is_stmt 0 view .LVU51
 227 0000 044B     		ldr	r3, .L14
 228 0002 9A68     		ldr	r2, [r3, #8]
 229              		.loc 1 290 13 view .LVU52
 230 0004 22F01F02 		bic	r2, r2, #31
 231 0008 9A60     		str	r2, [r3, #8]
 291:./Library/stm32f4xx_hash.c ****   HASH->STR |= ValidNumber;
 232              		.loc 1 291 3 is_stmt 1 view .LVU53
 233              		.loc 1 291 7 is_stmt 0 view .LVU54
 234 000a 9A68     		ldr	r2, [r3, #8]
 235              		.loc 1 291 13 view .LVU55
 236 000c 1043     		orrs	r0, r0, r2
 237              	.LVL5:
 238              		.loc 1 291 13 view .LVU56
 239 000e 9860     		str	r0, [r3, #8]
 292:./Library/stm32f4xx_hash.c **** }
 240              		.loc 1 292 1 view .LVU57
 241 0010 7047     		bx	lr
 242              	.L15:
 243 0012 00BF     		.align	2
 244              	.L14:
 245 0014 00040650 		.word	1342571520
 246              		.cfi_endproc
 247              	.LFE127:
 249              		.section	.text.HASH_DataIn,"ax",%progbits
 250              		.align	1
 251              		.global	HASH_DataIn
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 256              	HASH_DataIn:
 257              	.LVL6:
 258              	.LFB128:
 293:./Library/stm32f4xx_hash.c **** 
 294:./Library/stm32f4xx_hash.c **** /**
 295:./Library/stm32f4xx_hash.c ****   * @brief  Writes data in the Data Input FIFO
 296:./Library/stm32f4xx_hash.c ****   * @param  Data: new data of the message to be processed.
 297:./Library/stm32f4xx_hash.c ****   * @retval None
 298:./Library/stm32f4xx_hash.c ****   */
 299:./Library/stm32f4xx_hash.c **** void HASH_DataIn(uint32_t Data)
 300:./Library/stm32f4xx_hash.c **** {
 259              		.loc 1 300 1 is_stmt 1 view -0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		@ link register save eliminated.
 301:./Library/stm32f4xx_hash.c ****   /* Write in the DIN register a new data */
 302:./Library/stm32f4xx_hash.c ****   HASH->DIN = Data;
 264              		.loc 1 302 3 view .LVU59
 265              		.loc 1 302 13 is_stmt 0 view .LVU60
 266 0000 014B     		ldr	r3, .L17
 267 0002 5860     		str	r0, [r3, #4]
 303:./Library/stm32f4xx_hash.c **** }
 268              		.loc 1 303 1 view .LVU61
 269 0004 7047     		bx	lr
ARM GAS  /tmp/ccUstmVg.s 			page 11


 270              	.L18:
 271 0006 00BF     		.align	2
 272              	.L17:
 273 0008 00040650 		.word	1342571520
 274              		.cfi_endproc
 275              	.LFE128:
 277              		.section	.text.HASH_GetInFIFOWordsNbr,"ax",%progbits
 278              		.align	1
 279              		.global	HASH_GetInFIFOWordsNbr
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 284              	HASH_GetInFIFOWordsNbr:
 285              	.LFB129:
 304:./Library/stm32f4xx_hash.c **** 
 305:./Library/stm32f4xx_hash.c **** /**
 306:./Library/stm32f4xx_hash.c ****   * @brief  Returns the number of words already pushed into the IN FIFO.
 307:./Library/stm32f4xx_hash.c ****   * @param  None
 308:./Library/stm32f4xx_hash.c ****   * @retval The value of words already pushed into the IN FIFO.
 309:./Library/stm32f4xx_hash.c ****   */
 310:./Library/stm32f4xx_hash.c **** uint8_t HASH_GetInFIFOWordsNbr(void)
 311:./Library/stm32f4xx_hash.c **** {
 286              		.loc 1 311 1 is_stmt 1 view -0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290              		@ link register save eliminated.
 312:./Library/stm32f4xx_hash.c ****   /* Return the value of NBW bits */
 313:./Library/stm32f4xx_hash.c ****   return ((HASH->CR & HASH_CR_NBW) >> 8);
 291              		.loc 1 313 3 view .LVU63
 292              		.loc 1 313 16 is_stmt 0 view .LVU64
 293 0000 024B     		ldr	r3, .L20
 294 0002 1868     		ldr	r0, [r3]
 314:./Library/stm32f4xx_hash.c **** }
 295              		.loc 1 314 1 view .LVU65
 296 0004 C0F30320 		ubfx	r0, r0, #8, #4
 297 0008 7047     		bx	lr
 298              	.L21:
 299 000a 00BF     		.align	2
 300              	.L20:
 301 000c 00040650 		.word	1342571520
 302              		.cfi_endproc
 303              	.LFE129:
 305              		.section	.text.HASH_GetDigest,"ax",%progbits
 306              		.align	1
 307              		.global	HASH_GetDigest
 308              		.syntax unified
 309              		.thumb
 310              		.thumb_func
 312              	HASH_GetDigest:
 313              	.LVL7:
 314              	.LFB130:
 315:./Library/stm32f4xx_hash.c **** 
 316:./Library/stm32f4xx_hash.c **** /**
 317:./Library/stm32f4xx_hash.c ****   * @brief  Provides the message digest result.
 318:./Library/stm32f4xx_hash.c ****   * @note   In MD5 mode, Data[7] to Data[4] filed of HASH_MsgDigest structure is not used
 319:./Library/stm32f4xx_hash.c ****   *         and is read as zero.
ARM GAS  /tmp/ccUstmVg.s 			page 12


 320:./Library/stm32f4xx_hash.c ****   *         In SHA-1 mode, Data[7] to Data[5] filed of HASH_MsgDigest structure is not used
 321:./Library/stm32f4xx_hash.c ****   *         and is read as zero.    
 322:./Library/stm32f4xx_hash.c ****   *         In SHA-224 mode, Data[7] filed of HASH_MsgDigest structure is not used
 323:./Library/stm32f4xx_hash.c ****   *         and is read as zero.  
 324:./Library/stm32f4xx_hash.c ****   * @param  HASH_MessageDigest: pointer to a HASH_MsgDigest structure which will 
 325:./Library/stm32f4xx_hash.c ****   *         hold the message digest result 
 326:./Library/stm32f4xx_hash.c ****   * @retval None
 327:./Library/stm32f4xx_hash.c ****   */
 328:./Library/stm32f4xx_hash.c **** void HASH_GetDigest(HASH_MsgDigest* HASH_MessageDigest)
 329:./Library/stm32f4xx_hash.c **** {
 315              		.loc 1 329 1 is_stmt 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              		@ link register save eliminated.
 330:./Library/stm32f4xx_hash.c ****   /* Get the data field */
 331:./Library/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[0] = HASH->HR[0];
 320              		.loc 1 331 3 view .LVU67
 321              		.loc 1 331 41 is_stmt 0 view .LVU68
 322 0000 094B     		ldr	r3, .L23
 323 0002 DA68     		ldr	r2, [r3, #12]
 324              		.loc 1 331 31 view .LVU69
 325 0004 0260     		str	r2, [r0]
 332:./Library/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[1] = HASH->HR[1];
 326              		.loc 1 332 3 is_stmt 1 view .LVU70
 327              		.loc 1 332 41 is_stmt 0 view .LVU71
 328 0006 1A69     		ldr	r2, [r3, #16]
 329              		.loc 1 332 31 view .LVU72
 330 0008 4260     		str	r2, [r0, #4]
 333:./Library/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[2] = HASH->HR[2];
 331              		.loc 1 333 3 is_stmt 1 view .LVU73
 332              		.loc 1 333 41 is_stmt 0 view .LVU74
 333 000a 5A69     		ldr	r2, [r3, #20]
 334              		.loc 1 333 31 view .LVU75
 335 000c 8260     		str	r2, [r0, #8]
 334:./Library/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[3] = HASH->HR[3];
 336              		.loc 1 334 3 is_stmt 1 view .LVU76
 337              		.loc 1 334 41 is_stmt 0 view .LVU77
 338 000e 9A69     		ldr	r2, [r3, #24]
 339              		.loc 1 334 31 view .LVU78
 340 0010 C260     		str	r2, [r0, #12]
 335:./Library/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[4] = HASH->HR[4];
 341              		.loc 1 335 3 is_stmt 1 view .LVU79
 342              		.loc 1 335 41 is_stmt 0 view .LVU80
 343 0012 DB69     		ldr	r3, [r3, #28]
 344              		.loc 1 335 31 view .LVU81
 345 0014 0361     		str	r3, [r0, #16]
 336:./Library/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[5] = HASH_DIGEST->HR[5];
 346              		.loc 1 336 3 is_stmt 1 view .LVU82
 347              		.loc 1 336 48 is_stmt 0 view .LVU83
 348 0016 054B     		ldr	r3, .L23+4
 349 0018 5A6A     		ldr	r2, [r3, #36]
 350              		.loc 1 336 31 view .LVU84
 351 001a 4261     		str	r2, [r0, #20]
 337:./Library/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[6] = HASH_DIGEST->HR[6];
 352              		.loc 1 337 3 is_stmt 1 view .LVU85
 353              		.loc 1 337 48 is_stmt 0 view .LVU86
ARM GAS  /tmp/ccUstmVg.s 			page 13


 354 001c 9A6A     		ldr	r2, [r3, #40]
 355              		.loc 1 337 31 view .LVU87
 356 001e 8261     		str	r2, [r0, #24]
 338:./Library/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[7] = HASH_DIGEST->HR[7];
 357              		.loc 1 338 3 is_stmt 1 view .LVU88
 358              		.loc 1 338 48 is_stmt 0 view .LVU89
 359 0020 DB6A     		ldr	r3, [r3, #44]
 360              		.loc 1 338 31 view .LVU90
 361 0022 C361     		str	r3, [r0, #28]
 339:./Library/stm32f4xx_hash.c **** }
 362              		.loc 1 339 1 view .LVU91
 363 0024 7047     		bx	lr
 364              	.L24:
 365 0026 00BF     		.align	2
 366              	.L23:
 367 0028 00040650 		.word	1342571520
 368 002c 00070650 		.word	1342572288
 369              		.cfi_endproc
 370              	.LFE130:
 372              		.section	.text.HASH_StartDigest,"ax",%progbits
 373              		.align	1
 374              		.global	HASH_StartDigest
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 379              	HASH_StartDigest:
 380              	.LFB131:
 340:./Library/stm32f4xx_hash.c **** 
 341:./Library/stm32f4xx_hash.c **** /**
 342:./Library/stm32f4xx_hash.c ****   * @brief  Starts the message padding and calculation of the final message     
 343:./Library/stm32f4xx_hash.c ****   * @param  None
 344:./Library/stm32f4xx_hash.c ****   * @retval None
 345:./Library/stm32f4xx_hash.c ****   */
 346:./Library/stm32f4xx_hash.c **** void HASH_StartDigest(void)
 347:./Library/stm32f4xx_hash.c **** {
 381              		.loc 1 347 1 is_stmt 1 view -0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 0
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385              		@ link register save eliminated.
 348:./Library/stm32f4xx_hash.c ****   /* Start the Digest calculation */
 349:./Library/stm32f4xx_hash.c ****   HASH->STR |= HASH_STR_DCAL;
 386              		.loc 1 349 3 view .LVU93
 387              		.loc 1 349 7 is_stmt 0 view .LVU94
 388 0000 024A     		ldr	r2, .L26
 389 0002 9368     		ldr	r3, [r2, #8]
 390              		.loc 1 349 13 view .LVU95
 391 0004 43F48073 		orr	r3, r3, #256
 392 0008 9360     		str	r3, [r2, #8]
 350:./Library/stm32f4xx_hash.c **** }
 393              		.loc 1 350 1 view .LVU96
 394 000a 7047     		bx	lr
 395              	.L27:
 396              		.align	2
 397              	.L26:
 398 000c 00040650 		.word	1342571520
 399              		.cfi_endproc
ARM GAS  /tmp/ccUstmVg.s 			page 14


 400              	.LFE131:
 402              		.section	.text.HASH_SaveContext,"ax",%progbits
 403              		.align	1
 404              		.global	HASH_SaveContext
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 409              	HASH_SaveContext:
 410              	.LVL8:
 411              	.LFB132:
 351:./Library/stm32f4xx_hash.c **** /**
 352:./Library/stm32f4xx_hash.c ****   * @}
 353:./Library/stm32f4xx_hash.c ****   */
 354:./Library/stm32f4xx_hash.c **** 
 355:./Library/stm32f4xx_hash.c **** /** @defgroup HASH_Group3 Context swapping functions
 356:./Library/stm32f4xx_hash.c ****  *  @brief   Context swapping functions
 357:./Library/stm32f4xx_hash.c ****  *
 358:./Library/stm32f4xx_hash.c **** @verbatim   
 359:./Library/stm32f4xx_hash.c ****  ===============================================================================
 360:./Library/stm32f4xx_hash.c ****                       ##### Context swapping functions #####
 361:./Library/stm32f4xx_hash.c ****  ===============================================================================  
 362:./Library/stm32f4xx_hash.c ****  
 363:./Library/stm32f4xx_hash.c ****  [..] This section provides functions allowing to save and store HASH Context
 364:./Library/stm32f4xx_hash.c ****   
 365:./Library/stm32f4xx_hash.c ****  [..] It is possible to interrupt a HASH/HMAC process to perform another processing 
 366:./Library/stm32f4xx_hash.c ****       with a higher priority, and to complete the interrupted process later on, when 
 367:./Library/stm32f4xx_hash.c ****       the higher priority task is complete. To do so, the context of the interrupted 
 368:./Library/stm32f4xx_hash.c ****       task must be saved from the HASH registers to memory, and then be restored 
 369:./Library/stm32f4xx_hash.c ****       from memory to the HASH registers.
 370:./Library/stm32f4xx_hash.c ****   
 371:./Library/stm32f4xx_hash.c ****    (#) To save the current context, use HASH_SaveContext() function
 372:./Library/stm32f4xx_hash.c ****    (#) To restore the saved context, use HASH_RestoreContext() function 
 373:./Library/stm32f4xx_hash.c ****   
 374:./Library/stm32f4xx_hash.c **** 
 375:./Library/stm32f4xx_hash.c **** @endverbatim
 376:./Library/stm32f4xx_hash.c ****   * @{
 377:./Library/stm32f4xx_hash.c ****   */
 378:./Library/stm32f4xx_hash.c ****   
 379:./Library/stm32f4xx_hash.c **** /**
 380:./Library/stm32f4xx_hash.c ****   * @brief  Save the Hash peripheral Context. 
 381:./Library/stm32f4xx_hash.c ****   * @note   The context can be saved only when no block is currently being 
 382:./Library/stm32f4xx_hash.c ****   *         processed. So user must wait for DINIS = 1 (the last block has been 
 383:./Library/stm32f4xx_hash.c ****   *         processed and the input FIFO is empty) or NBW != 0 (the FIFO is not 
 384:./Library/stm32f4xx_hash.c ****   *         full and no processing is ongoing).   
 385:./Library/stm32f4xx_hash.c ****   * @param  HASH_ContextSave: pointer to a HASH_Context structure that contains
 386:./Library/stm32f4xx_hash.c ****   *         the repository for current context.
 387:./Library/stm32f4xx_hash.c ****   * @retval None
 388:./Library/stm32f4xx_hash.c ****   */
 389:./Library/stm32f4xx_hash.c **** void HASH_SaveContext(HASH_Context* HASH_ContextSave)
 390:./Library/stm32f4xx_hash.c **** {
 412              		.loc 1 390 1 is_stmt 1 view -0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              		@ link register save eliminated.
 391:./Library/stm32f4xx_hash.c ****   uint8_t i = 0;
 417              		.loc 1 391 3 view .LVU98
ARM GAS  /tmp/ccUstmVg.s 			page 15


 392:./Library/stm32f4xx_hash.c ****   
 393:./Library/stm32f4xx_hash.c ****   /* save context registers */
 394:./Library/stm32f4xx_hash.c ****   HASH_ContextSave->HASH_IMR = HASH->IMR;  
 418              		.loc 1 394 3 view .LVU99
 419              		.loc 1 394 36 is_stmt 0 view .LVU100
 420 0000 0B4B     		ldr	r3, .L31
 421 0002 1A6A     		ldr	r2, [r3, #32]
 422              		.loc 1 394 30 view .LVU101
 423 0004 0260     		str	r2, [r0]
 395:./Library/stm32f4xx_hash.c ****   HASH_ContextSave->HASH_STR = HASH->STR;      
 424              		.loc 1 395 3 is_stmt 1 view .LVU102
 425              		.loc 1 395 36 is_stmt 0 view .LVU103
 426 0006 9A68     		ldr	r2, [r3, #8]
 427              		.loc 1 395 30 view .LVU104
 428 0008 4260     		str	r2, [r0, #4]
 396:./Library/stm32f4xx_hash.c ****   HASH_ContextSave->HASH_CR  = HASH->CR;     
 429              		.loc 1 396 3 is_stmt 1 view .LVU105
 430              		.loc 1 396 36 is_stmt 0 view .LVU106
 431 000a 1B68     		ldr	r3, [r3]
 432              		.loc 1 396 30 view .LVU107
 433 000c 8360     		str	r3, [r0, #8]
 397:./Library/stm32f4xx_hash.c ****   for(i=0; i<=53;i++)
 434              		.loc 1 397 3 is_stmt 1 view .LVU108
 435              		.loc 1 397 8 is_stmt 0 view .LVU109
 436 000e 0023     		movs	r3, #0
 437              		.loc 1 397 3 view .LVU110
 438 0010 0AE0     		b	.L29
 439              	.LVL9:
 440              	.L30:
 398:./Library/stm32f4xx_hash.c ****   {
 399:./Library/stm32f4xx_hash.c ****      HASH_ContextSave->HASH_CSR[i] = HASH->CSR[i];
 441              		.loc 1 399 6 is_stmt 1 discriminator 3 view .LVU111
 442              		.loc 1 399 47 is_stmt 0 discriminator 3 view .LVU112
 443 0012 03F13E01 		add	r1, r3, #62
 444 0016 064A     		ldr	r2, .L31
 445 0018 52F82110 		ldr	r1, [r2, r1, lsl #2]
 446              		.loc 1 399 36 discriminator 3 view .LVU113
 447 001c 9A1C     		adds	r2, r3, #2
 448 001e 00EB8202 		add	r2, r0, r2, lsl #2
 449 0022 5160     		str	r1, [r2, #4]
 397:./Library/stm32f4xx_hash.c ****   for(i=0; i<=53;i++)
 450              		.loc 1 397 19 is_stmt 1 discriminator 3 view .LVU114
 451 0024 0133     		adds	r3, r3, #1
 452              	.LVL10:
 397:./Library/stm32f4xx_hash.c ****   for(i=0; i<=53;i++)
 453              		.loc 1 397 19 is_stmt 0 discriminator 3 view .LVU115
 454 0026 DBB2     		uxtb	r3, r3
 455              	.LVL11:
 456              	.L29:
 397:./Library/stm32f4xx_hash.c ****   for(i=0; i<=53;i++)
 457              		.loc 1 397 13 is_stmt 1 discriminator 1 view .LVU116
 458 0028 352B     		cmp	r3, #53
 459 002a F2D9     		bls	.L30
 400:./Library/stm32f4xx_hash.c ****   }   
 401:./Library/stm32f4xx_hash.c **** }
 460              		.loc 1 401 1 is_stmt 0 view .LVU117
 461 002c 7047     		bx	lr
ARM GAS  /tmp/ccUstmVg.s 			page 16


 462              	.L32:
 463 002e 00BF     		.align	2
 464              	.L31:
 465 0030 00040650 		.word	1342571520
 466              		.cfi_endproc
 467              	.LFE132:
 469              		.section	.text.HASH_RestoreContext,"ax",%progbits
 470              		.align	1
 471              		.global	HASH_RestoreContext
 472              		.syntax unified
 473              		.thumb
 474              		.thumb_func
 476              	HASH_RestoreContext:
 477              	.LVL12:
 478              	.LFB133:
 402:./Library/stm32f4xx_hash.c **** 
 403:./Library/stm32f4xx_hash.c **** /**
 404:./Library/stm32f4xx_hash.c ****   * @brief  Restore the Hash peripheral Context.  
 405:./Library/stm32f4xx_hash.c ****   * @note   After calling this function, user can restart the processing from the
 406:./Library/stm32f4xx_hash.c ****   *         point where it has been interrupted.  
 407:./Library/stm32f4xx_hash.c ****   * @param  HASH_ContextRestore: pointer to a HASH_Context structure that contains
 408:./Library/stm32f4xx_hash.c ****   *         the repository for saved context.
 409:./Library/stm32f4xx_hash.c ****   * @retval None
 410:./Library/stm32f4xx_hash.c ****   */
 411:./Library/stm32f4xx_hash.c **** void HASH_RestoreContext(HASH_Context* HASH_ContextRestore)  
 412:./Library/stm32f4xx_hash.c **** {
 479              		.loc 1 412 1 is_stmt 1 view -0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483              		@ link register save eliminated.
 484              		.loc 1 412 1 is_stmt 0 view .LVU119
 485 0000 8446     		mov	ip, r0
 413:./Library/stm32f4xx_hash.c ****   uint8_t i = 0;
 486              		.loc 1 413 3 is_stmt 1 view .LVU120
 487              	.LVL13:
 414:./Library/stm32f4xx_hash.c ****   
 415:./Library/stm32f4xx_hash.c ****   /* restore context registers */
 416:./Library/stm32f4xx_hash.c ****   HASH->IMR = HASH_ContextRestore->HASH_IMR;   
 488              		.loc 1 416 3 view .LVU121
 489              		.loc 1 416 34 is_stmt 0 view .LVU122
 490 0002 0268     		ldr	r2, [r0]
 491              		.loc 1 416 13 view .LVU123
 492 0004 0C4B     		ldr	r3, .L36
 493 0006 1A62     		str	r2, [r3, #32]
 417:./Library/stm32f4xx_hash.c ****   HASH->STR = HASH_ContextRestore->HASH_STR;     
 494              		.loc 1 417 3 is_stmt 1 view .LVU124
 495              		.loc 1 417 34 is_stmt 0 view .LVU125
 496 0008 4268     		ldr	r2, [r0, #4]
 497              		.loc 1 417 13 view .LVU126
 498 000a 9A60     		str	r2, [r3, #8]
 418:./Library/stm32f4xx_hash.c ****   HASH->CR = HASH_ContextRestore->HASH_CR;
 499              		.loc 1 418 3 is_stmt 1 view .LVU127
 500              		.loc 1 418 33 is_stmt 0 view .LVU128
 501 000c 8268     		ldr	r2, [r0, #8]
 502              		.loc 1 418 12 view .LVU129
 503 000e 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccUstmVg.s 			page 17


 419:./Library/stm32f4xx_hash.c ****   
 420:./Library/stm32f4xx_hash.c ****   /* Initialize the hash processor */
 421:./Library/stm32f4xx_hash.c ****   HASH->CR |= HASH_CR_INIT; 
 504              		.loc 1 421 3 is_stmt 1 view .LVU130
 505              		.loc 1 421 7 is_stmt 0 view .LVU131
 506 0010 1A68     		ldr	r2, [r3]
 507              		.loc 1 421 12 view .LVU132
 508 0012 42F00402 		orr	r2, r2, #4
 509 0016 1A60     		str	r2, [r3]
 422:./Library/stm32f4xx_hash.c ****   
 423:./Library/stm32f4xx_hash.c ****    /* continue restoring context registers */     
 424:./Library/stm32f4xx_hash.c ****   for(i=0; i<=53;i++)
 510              		.loc 1 424 3 is_stmt 1 view .LVU133
 511              		.loc 1 424 8 is_stmt 0 view .LVU134
 512 0018 0023     		movs	r3, #0
 513              		.loc 1 424 3 view .LVU135
 514 001a 0AE0     		b	.L34
 515              	.LVL14:
 516              	.L35:
 425:./Library/stm32f4xx_hash.c ****   {
 426:./Library/stm32f4xx_hash.c ****      HASH->CSR[i] = HASH_ContextRestore->HASH_CSR[i];
 517              		.loc 1 426 6 is_stmt 1 discriminator 3 view .LVU136
 518              		.loc 1 426 50 is_stmt 0 discriminator 3 view .LVU137
 519 001c 9A1C     		adds	r2, r3, #2
 520 001e 0CEB8202 		add	r2, ip, r2, lsl #2
 521 0022 5068     		ldr	r0, [r2, #4]
 522              		.loc 1 426 19 discriminator 3 view .LVU138
 523 0024 03F13E01 		add	r1, r3, #62
 524 0028 034A     		ldr	r2, .L36
 525 002a 42F82100 		str	r0, [r2, r1, lsl #2]
 424:./Library/stm32f4xx_hash.c ****   {
 526              		.loc 1 424 19 is_stmt 1 discriminator 3 view .LVU139
 527 002e 0133     		adds	r3, r3, #1
 528              	.LVL15:
 424:./Library/stm32f4xx_hash.c ****   {
 529              		.loc 1 424 19 is_stmt 0 discriminator 3 view .LVU140
 530 0030 DBB2     		uxtb	r3, r3
 531              	.LVL16:
 532              	.L34:
 424:./Library/stm32f4xx_hash.c ****   {
 533              		.loc 1 424 13 is_stmt 1 discriminator 1 view .LVU141
 534 0032 352B     		cmp	r3, #53
 535 0034 F2D9     		bls	.L35
 427:./Library/stm32f4xx_hash.c ****   }   
 428:./Library/stm32f4xx_hash.c **** }
 536              		.loc 1 428 1 is_stmt 0 view .LVU142
 537 0036 7047     		bx	lr
 538              	.L37:
 539              		.align	2
 540              	.L36:
 541 0038 00040650 		.word	1342571520
 542              		.cfi_endproc
 543              	.LFE133:
 545              		.section	.text.HASH_AutoStartDigest,"ax",%progbits
 546              		.align	1
 547              		.global	HASH_AutoStartDigest
 548              		.syntax unified
ARM GAS  /tmp/ccUstmVg.s 			page 18


 549              		.thumb
 550              		.thumb_func
 552              	HASH_AutoStartDigest:
 553              	.LVL17:
 554              	.LFB134:
 429:./Library/stm32f4xx_hash.c **** /**
 430:./Library/stm32f4xx_hash.c ****   * @}
 431:./Library/stm32f4xx_hash.c ****   */
 432:./Library/stm32f4xx_hash.c **** 
 433:./Library/stm32f4xx_hash.c **** /** @defgroup HASH_Group4 HASH's DMA interface Configuration function
 434:./Library/stm32f4xx_hash.c ****  *  @brief   HASH's DMA interface Configuration function 
 435:./Library/stm32f4xx_hash.c ****  *
 436:./Library/stm32f4xx_hash.c **** @verbatim   
 437:./Library/stm32f4xx_hash.c ****  ===============================================================================
 438:./Library/stm32f4xx_hash.c ****                ##### HASH's DMA interface Configuration function #####
 439:./Library/stm32f4xx_hash.c ****  ===============================================================================  
 440:./Library/stm32f4xx_hash.c **** 
 441:./Library/stm32f4xx_hash.c ****  [..] This section provides functions allowing to configure the DMA interface for 
 442:./Library/stm32f4xx_hash.c ****       HASH/ HMAC data input transfer.
 443:./Library/stm32f4xx_hash.c ****    
 444:./Library/stm32f4xx_hash.c ****  [..] When the DMA mode is enabled (using the HASH_DMACmd() function), data can be 
 445:./Library/stm32f4xx_hash.c ****       sent to the IN FIFO using the DMA peripheral.
 446:./Library/stm32f4xx_hash.c **** 
 447:./Library/stm32f4xx_hash.c **** @endverbatim
 448:./Library/stm32f4xx_hash.c ****   * @{
 449:./Library/stm32f4xx_hash.c ****   */
 450:./Library/stm32f4xx_hash.c **** 
 451:./Library/stm32f4xx_hash.c **** /**
 452:./Library/stm32f4xx_hash.c ****   * @brief  Enables or disables auto-start message padding and
 453:./Library/stm32f4xx_hash.c ****   *         calculation of the final message digest at the end of DMA transfer.
 454:./Library/stm32f4xx_hash.c ****   * @param  NewState: new state of the selected HASH DMA transfer request.
 455:./Library/stm32f4xx_hash.c ****   *          This parameter can be: ENABLE or DISABLE.
 456:./Library/stm32f4xx_hash.c ****   * @retval None
 457:./Library/stm32f4xx_hash.c ****   */
 458:./Library/stm32f4xx_hash.c **** void HASH_AutoStartDigest(FunctionalState NewState)
 459:./Library/stm32f4xx_hash.c **** {
 555              		.loc 1 459 1 is_stmt 1 view -0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 0
 558              		@ frame_needed = 0, uses_anonymous_args = 0
 559              		@ link register save eliminated.
 460:./Library/stm32f4xx_hash.c ****   /* Check the parameters */
 461:./Library/stm32f4xx_hash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 560              		.loc 1 461 3 view .LVU144
 462:./Library/stm32f4xx_hash.c **** 
 463:./Library/stm32f4xx_hash.c ****   if (NewState != DISABLE)
 561              		.loc 1 463 3 view .LVU145
 562              		.loc 1 463 6 is_stmt 0 view .LVU146
 563 0000 28B1     		cbz	r0, .L39
 464:./Library/stm32f4xx_hash.c ****   {
 465:./Library/stm32f4xx_hash.c ****     /* Enable the auto start of the final message digest at the end of DMA transfer */
 466:./Library/stm32f4xx_hash.c ****     HASH->CR &= ~HASH_CR_MDMAT;
 564              		.loc 1 466 5 is_stmt 1 view .LVU147
 565              		.loc 1 466 9 is_stmt 0 view .LVU148
 566 0002 064A     		ldr	r2, .L41
 567 0004 1368     		ldr	r3, [r2]
 568              		.loc 1 466 14 view .LVU149
ARM GAS  /tmp/ccUstmVg.s 			page 19


 569 0006 23F40053 		bic	r3, r3, #8192
 570 000a 1360     		str	r3, [r2]
 571 000c 7047     		bx	lr
 572              	.L39:
 467:./Library/stm32f4xx_hash.c ****   }
 468:./Library/stm32f4xx_hash.c ****   else
 469:./Library/stm32f4xx_hash.c ****   {
 470:./Library/stm32f4xx_hash.c ****     /* Disable the auto start of the final message digest at the end of DMA transfer */
 471:./Library/stm32f4xx_hash.c ****     HASH->CR |= HASH_CR_MDMAT;
 573              		.loc 1 471 5 is_stmt 1 view .LVU150
 574              		.loc 1 471 9 is_stmt 0 view .LVU151
 575 000e 034A     		ldr	r2, .L41
 576 0010 1368     		ldr	r3, [r2]
 577              		.loc 1 471 14 view .LVU152
 578 0012 43F40053 		orr	r3, r3, #8192
 579 0016 1360     		str	r3, [r2]
 472:./Library/stm32f4xx_hash.c ****   }
 473:./Library/stm32f4xx_hash.c **** }
 580              		.loc 1 473 1 view .LVU153
 581 0018 7047     		bx	lr
 582              	.L42:
 583 001a 00BF     		.align	2
 584              	.L41:
 585 001c 00040650 		.word	1342571520
 586              		.cfi_endproc
 587              	.LFE134:
 589              		.section	.text.HASH_DMACmd,"ax",%progbits
 590              		.align	1
 591              		.global	HASH_DMACmd
 592              		.syntax unified
 593              		.thumb
 594              		.thumb_func
 596              	HASH_DMACmd:
 597              	.LVL18:
 598              	.LFB135:
 474:./Library/stm32f4xx_hash.c ****   
 475:./Library/stm32f4xx_hash.c **** /**
 476:./Library/stm32f4xx_hash.c ****   * @brief  Enables or disables the HASH DMA interface.
 477:./Library/stm32f4xx_hash.c ****   * @note   The DMA is disabled by hardware after the end of transfer.
 478:./Library/stm32f4xx_hash.c ****   * @param  NewState: new state of the selected HASH DMA transfer request.
 479:./Library/stm32f4xx_hash.c ****   *          This parameter can be: ENABLE or DISABLE.
 480:./Library/stm32f4xx_hash.c ****   * @retval None
 481:./Library/stm32f4xx_hash.c ****   */
 482:./Library/stm32f4xx_hash.c **** void HASH_DMACmd(FunctionalState NewState)
 483:./Library/stm32f4xx_hash.c **** {
 599              		.loc 1 483 1 is_stmt 1 view -0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 0
 602              		@ frame_needed = 0, uses_anonymous_args = 0
 603              		@ link register save eliminated.
 484:./Library/stm32f4xx_hash.c ****   /* Check the parameters */
 485:./Library/stm32f4xx_hash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 604              		.loc 1 485 3 view .LVU155
 486:./Library/stm32f4xx_hash.c **** 
 487:./Library/stm32f4xx_hash.c ****   if (NewState != DISABLE)
 605              		.loc 1 487 3 view .LVU156
 606              		.loc 1 487 6 is_stmt 0 view .LVU157
ARM GAS  /tmp/ccUstmVg.s 			page 20


 607 0000 28B1     		cbz	r0, .L44
 488:./Library/stm32f4xx_hash.c ****   {
 489:./Library/stm32f4xx_hash.c ****     /* Enable the HASH DMA request */
 490:./Library/stm32f4xx_hash.c ****     HASH->CR |= HASH_CR_DMAE;
 608              		.loc 1 490 5 is_stmt 1 view .LVU158
 609              		.loc 1 490 9 is_stmt 0 view .LVU159
 610 0002 064A     		ldr	r2, .L46
 611 0004 1368     		ldr	r3, [r2]
 612              		.loc 1 490 14 view .LVU160
 613 0006 43F00803 		orr	r3, r3, #8
 614 000a 1360     		str	r3, [r2]
 615 000c 7047     		bx	lr
 616              	.L44:
 491:./Library/stm32f4xx_hash.c ****   }
 492:./Library/stm32f4xx_hash.c ****   else
 493:./Library/stm32f4xx_hash.c ****   {
 494:./Library/stm32f4xx_hash.c ****     /* Disable the HASH DMA request */
 495:./Library/stm32f4xx_hash.c ****     HASH->CR &= ~HASH_CR_DMAE;
 617              		.loc 1 495 5 is_stmt 1 view .LVU161
 618              		.loc 1 495 9 is_stmt 0 view .LVU162
 619 000e 034A     		ldr	r2, .L46
 620 0010 1368     		ldr	r3, [r2]
 621              		.loc 1 495 14 view .LVU163
 622 0012 23F00803 		bic	r3, r3, #8
 623 0016 1360     		str	r3, [r2]
 496:./Library/stm32f4xx_hash.c ****   }
 497:./Library/stm32f4xx_hash.c **** }
 624              		.loc 1 497 1 view .LVU164
 625 0018 7047     		bx	lr
 626              	.L47:
 627 001a 00BF     		.align	2
 628              	.L46:
 629 001c 00040650 		.word	1342571520
 630              		.cfi_endproc
 631              	.LFE135:
 633              		.section	.text.HASH_ITConfig,"ax",%progbits
 634              		.align	1
 635              		.global	HASH_ITConfig
 636              		.syntax unified
 637              		.thumb
 638              		.thumb_func
 640              	HASH_ITConfig:
 641              	.LVL19:
 642              	.LFB136:
 498:./Library/stm32f4xx_hash.c **** /**
 499:./Library/stm32f4xx_hash.c ****   * @}
 500:./Library/stm32f4xx_hash.c ****   */
 501:./Library/stm32f4xx_hash.c **** 
 502:./Library/stm32f4xx_hash.c **** /** @defgroup HASH_Group5 Interrupts and flags management functions
 503:./Library/stm32f4xx_hash.c ****  *  @brief   Interrupts and flags management functions
 504:./Library/stm32f4xx_hash.c ****  *
 505:./Library/stm32f4xx_hash.c **** @verbatim   
 506:./Library/stm32f4xx_hash.c ****  ===============================================================================
 507:./Library/stm32f4xx_hash.c ****                ##### Interrupts and flags management functions #####
 508:./Library/stm32f4xx_hash.c ****  ===============================================================================  
 509:./Library/stm32f4xx_hash.c **** 
 510:./Library/stm32f4xx_hash.c ****  [..] This section provides functions allowing to configure the HASH Interrupts and 
ARM GAS  /tmp/ccUstmVg.s 			page 21


 511:./Library/stm32f4xx_hash.c ****       to get the status and clear flags and Interrupts pending bits.
 512:./Library/stm32f4xx_hash.c ****   
 513:./Library/stm32f4xx_hash.c ****  [..] The HASH provides 2 Interrupts sources and 5 Flags:
 514:./Library/stm32f4xx_hash.c ****   
 515:./Library/stm32f4xx_hash.c ****  *** Flags : ***
 516:./Library/stm32f4xx_hash.c ****  =============== 
 517:./Library/stm32f4xx_hash.c ****  [..]
 518:./Library/stm32f4xx_hash.c ****    (#) HASH_FLAG_DINIS : set when 16 locations are free in the Data IN FIFO 
 519:./Library/stm32f4xx_hash.c ****       which means that a  new block (512 bit) can be entered into the input buffer.
 520:./Library/stm32f4xx_hash.c ****                           
 521:./Library/stm32f4xx_hash.c ****    (#) HASH_FLAG_DCIS :  set when Digest calculation is complete
 522:./Library/stm32f4xx_hash.c ****       
 523:./Library/stm32f4xx_hash.c ****    (#) HASH_FLAG_DMAS :  set when HASH's DMA interface is enabled (DMAE=1) or 
 524:./Library/stm32f4xx_hash.c ****        a transfer is ongoing. This Flag is cleared only by hardware.
 525:./Library/stm32f4xx_hash.c ****                            
 526:./Library/stm32f4xx_hash.c ****    (#) HASH_FLAG_BUSY :  set when The hash core is processing a block of data
 527:./Library/stm32f4xx_hash.c ****        This Flag is cleared only by hardware. 
 528:./Library/stm32f4xx_hash.c ****                            
 529:./Library/stm32f4xx_hash.c ****    (#) HASH_FLAG_DINNE : set when Data IN FIFO is not empty which means that 
 530:./Library/stm32f4xx_hash.c ****        the Data IN FIFO contains at least one word of data. This Flag is cleared 
 531:./Library/stm32f4xx_hash.c ****        only by hardware.
 532:./Library/stm32f4xx_hash.c ****      
 533:./Library/stm32f4xx_hash.c ****  *** Interrupts : ***
 534:./Library/stm32f4xx_hash.c ****  ====================
 535:./Library/stm32f4xx_hash.c ****  [..]   
 536:./Library/stm32f4xx_hash.c ****    (#) HASH_IT_DINI  : if enabled, this interrupt source is pending when 16 
 537:./Library/stm32f4xx_hash.c ****        locations are free in the Data IN FIFO  which means that a new block (512 bit)
 538:./Library/stm32f4xx_hash.c ****        can be entered into the input buffer. This interrupt source is cleared using 
 539:./Library/stm32f4xx_hash.c ****        HASH_ClearITPendingBit(HASH_IT_DINI) function.
 540:./Library/stm32f4xx_hash.c ****    
 541:./Library/stm32f4xx_hash.c ****    (#) HASH_IT_DCI   : if enabled, this interrupt source is pending when Digest 
 542:./Library/stm32f4xx_hash.c ****        calculation is complete. This interrupt source is cleared using 
 543:./Library/stm32f4xx_hash.c ****        HASH_ClearITPendingBit(HASH_IT_DCI) function.
 544:./Library/stm32f4xx_hash.c **** 
 545:./Library/stm32f4xx_hash.c ****  *** Managing the HASH controller events : ***
 546:./Library/stm32f4xx_hash.c ****  =============================================
 547:./Library/stm32f4xx_hash.c ****  [..] The user should identify which mode will be used in his application to manage 
 548:./Library/stm32f4xx_hash.c ****       the HASH controller events: Polling mode or Interrupt mode.
 549:./Library/stm32f4xx_hash.c ****   
 550:./Library/stm32f4xx_hash.c ****    (#) In the Polling Mode it is advised to use the following functions:
 551:./Library/stm32f4xx_hash.c ****        (++) HASH_GetFlagStatus() : to check if flags events occur. 
 552:./Library/stm32f4xx_hash.c ****        (++) HASH_ClearFlag()     : to clear the flags events.
 553:./Library/stm32f4xx_hash.c ****     
 554:./Library/stm32f4xx_hash.c ****    (#)  In the Interrupt Mode it is advised to use the following functions:
 555:./Library/stm32f4xx_hash.c ****        (++) HASH_ITConfig()       : to enable or disable the interrupt source.
 556:./Library/stm32f4xx_hash.c ****        (++) HASH_GetITStatus()    : to check if Interrupt occurs.
 557:./Library/stm32f4xx_hash.c ****        (++) HASH_ClearITPendingBit() : to clear the Interrupt pending Bit 
 558:./Library/stm32f4xx_hash.c ****             (corresponding Flag). 
 559:./Library/stm32f4xx_hash.c **** 
 560:./Library/stm32f4xx_hash.c **** @endverbatim
 561:./Library/stm32f4xx_hash.c ****   * @{
 562:./Library/stm32f4xx_hash.c ****   */ 
 563:./Library/stm32f4xx_hash.c ****   
 564:./Library/stm32f4xx_hash.c **** /**
 565:./Library/stm32f4xx_hash.c ****   * @brief  Enables or disables the specified HASH interrupts.
 566:./Library/stm32f4xx_hash.c ****   * @param  HASH_IT: specifies the HASH interrupt source to be enabled or disabled.
 567:./Library/stm32f4xx_hash.c ****   *          This parameter can be any combination of the following values:
ARM GAS  /tmp/ccUstmVg.s 			page 22


 568:./Library/stm32f4xx_hash.c ****   *            @arg HASH_IT_DINI: Data Input interrupt
 569:./Library/stm32f4xx_hash.c ****   *            @arg HASH_IT_DCI: Digest Calculation Completion Interrupt
 570:./Library/stm32f4xx_hash.c ****   * @param  NewState: new state of the specified HASH interrupt.
 571:./Library/stm32f4xx_hash.c ****   *           This parameter can be: ENABLE or DISABLE.
 572:./Library/stm32f4xx_hash.c ****   * @retval None
 573:./Library/stm32f4xx_hash.c ****   */
 574:./Library/stm32f4xx_hash.c **** void HASH_ITConfig(uint32_t HASH_IT, FunctionalState NewState)
 575:./Library/stm32f4xx_hash.c **** {
 643              		.loc 1 575 1 is_stmt 1 view -0
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 0
 646              		@ frame_needed = 0, uses_anonymous_args = 0
 647              		@ link register save eliminated.
 576:./Library/stm32f4xx_hash.c ****   /* Check the parameters */
 577:./Library/stm32f4xx_hash.c ****   assert_param(IS_HASH_IT(HASH_IT));
 648              		.loc 1 577 3 view .LVU166
 578:./Library/stm32f4xx_hash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 649              		.loc 1 578 3 view .LVU167
 579:./Library/stm32f4xx_hash.c **** 
 580:./Library/stm32f4xx_hash.c ****   if (NewState != DISABLE)
 650              		.loc 1 580 3 view .LVU168
 651              		.loc 1 580 6 is_stmt 0 view .LVU169
 652 0000 21B1     		cbz	r1, .L49
 581:./Library/stm32f4xx_hash.c ****   {
 582:./Library/stm32f4xx_hash.c ****     /* Enable the selected HASH interrupt */
 583:./Library/stm32f4xx_hash.c ****     HASH->IMR |= HASH_IT;
 653              		.loc 1 583 5 is_stmt 1 view .LVU170
 654              		.loc 1 583 9 is_stmt 0 view .LVU171
 655 0002 054A     		ldr	r2, .L51
 656 0004 136A     		ldr	r3, [r2, #32]
 657              		.loc 1 583 15 view .LVU172
 658 0006 0343     		orrs	r3, r3, r0
 659 0008 1362     		str	r3, [r2, #32]
 660 000a 7047     		bx	lr
 661              	.L49:
 584:./Library/stm32f4xx_hash.c ****   }
 585:./Library/stm32f4xx_hash.c ****   else
 586:./Library/stm32f4xx_hash.c ****   {
 587:./Library/stm32f4xx_hash.c ****     /* Disable the selected HASH interrupt */
 588:./Library/stm32f4xx_hash.c ****     HASH->IMR &= (uint32_t)(~HASH_IT);
 662              		.loc 1 588 5 is_stmt 1 view .LVU173
 663              		.loc 1 588 9 is_stmt 0 view .LVU174
 664 000c 024A     		ldr	r2, .L51
 665 000e 136A     		ldr	r3, [r2, #32]
 666              		.loc 1 588 15 view .LVU175
 667 0010 23EA0003 		bic	r3, r3, r0
 668 0014 1362     		str	r3, [r2, #32]
 589:./Library/stm32f4xx_hash.c ****   }
 590:./Library/stm32f4xx_hash.c **** }
 669              		.loc 1 590 1 view .LVU176
 670 0016 7047     		bx	lr
 671              	.L52:
 672              		.align	2
 673              	.L51:
 674 0018 00040650 		.word	1342571520
 675              		.cfi_endproc
 676              	.LFE136:
ARM GAS  /tmp/ccUstmVg.s 			page 23


 678              		.section	.text.HASH_GetFlagStatus,"ax",%progbits
 679              		.align	1
 680              		.global	HASH_GetFlagStatus
 681              		.syntax unified
 682              		.thumb
 683              		.thumb_func
 685              	HASH_GetFlagStatus:
 686              	.LVL20:
 687              	.LFB137:
 591:./Library/stm32f4xx_hash.c **** 
 592:./Library/stm32f4xx_hash.c **** /**
 593:./Library/stm32f4xx_hash.c ****   * @brief  Checks whether the specified HASH flag is set or not.
 594:./Library/stm32f4xx_hash.c ****   * @param  HASH_FLAG: specifies the HASH flag to check.
 595:./Library/stm32f4xx_hash.c ****   *          This parameter can be one of the following values:
 596:./Library/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DINIS: Data input interrupt status flag
 597:./Library/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DCIS: Digest calculation completion interrupt status flag
 598:./Library/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_BUSY: Busy flag
 599:./Library/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DMAS: DMAS Status flag
 600:./Library/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DINNE: Data Input register (DIN) not empty status flag
 601:./Library/stm32f4xx_hash.c ****   * @retval The new state of HASH_FLAG (SET or RESET)
 602:./Library/stm32f4xx_hash.c ****   */
 603:./Library/stm32f4xx_hash.c **** FlagStatus HASH_GetFlagStatus(uint32_t HASH_FLAG)
 604:./Library/stm32f4xx_hash.c **** {
 688              		.loc 1 604 1 is_stmt 1 view -0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 0
 691              		@ frame_needed = 0, uses_anonymous_args = 0
 692              		@ link register save eliminated.
 605:./Library/stm32f4xx_hash.c ****   FlagStatus bitstatus = RESET;
 693              		.loc 1 605 3 view .LVU178
 606:./Library/stm32f4xx_hash.c ****   uint32_t tempreg = 0;
 694              		.loc 1 606 3 view .LVU179
 607:./Library/stm32f4xx_hash.c **** 
 608:./Library/stm32f4xx_hash.c ****   /* Check the parameters */
 609:./Library/stm32f4xx_hash.c ****   assert_param(IS_HASH_GET_FLAG(HASH_FLAG));
 695              		.loc 1 609 3 view .LVU180
 610:./Library/stm32f4xx_hash.c **** 
 611:./Library/stm32f4xx_hash.c ****   /* check if the FLAG is in CR register */
 612:./Library/stm32f4xx_hash.c ****   if ((HASH_FLAG & HASH_FLAG_DINNE) != (uint32_t)RESET ) 
 696              		.loc 1 612 3 view .LVU181
 697              		.loc 1 612 6 is_stmt 0 view .LVU182
 698 0000 10F4805F 		tst	r0, #4096
 699 0004 05D0     		beq	.L54
 613:./Library/stm32f4xx_hash.c ****   {
 614:./Library/stm32f4xx_hash.c ****     tempreg = HASH->CR;
 700              		.loc 1 614 5 is_stmt 1 view .LVU183
 701              		.loc 1 614 13 is_stmt 0 view .LVU184
 702 0006 054B     		ldr	r3, .L58
 703 0008 1B68     		ldr	r3, [r3]
 704              	.LVL21:
 705              	.L55:
 615:./Library/stm32f4xx_hash.c ****   }
 616:./Library/stm32f4xx_hash.c ****   else /* The FLAG is in SR register */
 617:./Library/stm32f4xx_hash.c ****   {
 618:./Library/stm32f4xx_hash.c ****     tempreg = HASH->SR;
 619:./Library/stm32f4xx_hash.c ****   }
 620:./Library/stm32f4xx_hash.c **** 
ARM GAS  /tmp/ccUstmVg.s 			page 24


 621:./Library/stm32f4xx_hash.c ****   /* Check the status of the specified HASH flag */
 622:./Library/stm32f4xx_hash.c ****   if ((tempreg & HASH_FLAG) != (uint32_t)RESET)
 706              		.loc 1 622 3 is_stmt 1 view .LVU185
 707              		.loc 1 622 6 is_stmt 0 view .LVU186
 708 000a 0342     		tst	r3, r0
 709 000c 04D0     		beq	.L57
 623:./Library/stm32f4xx_hash.c ****   {
 624:./Library/stm32f4xx_hash.c ****     /* HASH is set */
 625:./Library/stm32f4xx_hash.c ****     bitstatus = SET;
 710              		.loc 1 625 15 view .LVU187
 711 000e 0120     		movs	r0, #1
 712              	.LVL22:
 713              		.loc 1 625 15 view .LVU188
 714 0010 7047     		bx	lr
 715              	.LVL23:
 716              	.L54:
 618:./Library/stm32f4xx_hash.c ****   }
 717              		.loc 1 618 5 is_stmt 1 view .LVU189
 618:./Library/stm32f4xx_hash.c ****   }
 718              		.loc 1 618 13 is_stmt 0 view .LVU190
 719 0012 024B     		ldr	r3, .L58
 720 0014 5B6A     		ldr	r3, [r3, #36]
 721              	.LVL24:
 618:./Library/stm32f4xx_hash.c ****   }
 722              		.loc 1 618 13 view .LVU191
 723 0016 F8E7     		b	.L55
 724              	.L57:
 626:./Library/stm32f4xx_hash.c ****   }
 627:./Library/stm32f4xx_hash.c ****   else
 628:./Library/stm32f4xx_hash.c ****   {
 629:./Library/stm32f4xx_hash.c ****     /* HASH_FLAG is reset */
 630:./Library/stm32f4xx_hash.c ****     bitstatus = RESET;
 725              		.loc 1 630 15 view .LVU192
 726 0018 0020     		movs	r0, #0
 727              	.LVL25:
 631:./Library/stm32f4xx_hash.c ****   }
 632:./Library/stm32f4xx_hash.c **** 
 633:./Library/stm32f4xx_hash.c ****   /* Return the HASH_FLAG status */
 634:./Library/stm32f4xx_hash.c ****   return  bitstatus;
 728              		.loc 1 634 3 is_stmt 1 view .LVU193
 635:./Library/stm32f4xx_hash.c **** }
 729              		.loc 1 635 1 is_stmt 0 view .LVU194
 730 001a 7047     		bx	lr
 731              	.L59:
 732              		.align	2
 733              	.L58:
 734 001c 00040650 		.word	1342571520
 735              		.cfi_endproc
 736              	.LFE137:
 738              		.section	.text.HASH_ClearFlag,"ax",%progbits
 739              		.align	1
 740              		.global	HASH_ClearFlag
 741              		.syntax unified
 742              		.thumb
 743              		.thumb_func
 745              	HASH_ClearFlag:
 746              	.LVL26:
ARM GAS  /tmp/ccUstmVg.s 			page 25


 747              	.LFB138:
 636:./Library/stm32f4xx_hash.c **** /**
 637:./Library/stm32f4xx_hash.c ****   * @brief  Clears the HASH flags.
 638:./Library/stm32f4xx_hash.c ****   * @param  HASH_FLAG: specifies the flag to clear. 
 639:./Library/stm32f4xx_hash.c ****   *          This parameter can be any combination of the following values:
 640:./Library/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DINIS: Data Input Flag
 641:./Library/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DCIS: Digest Calculation Completion Flag                       
 642:./Library/stm32f4xx_hash.c ****   * @retval None
 643:./Library/stm32f4xx_hash.c ****   */
 644:./Library/stm32f4xx_hash.c **** void HASH_ClearFlag(uint32_t HASH_FLAG)
 645:./Library/stm32f4xx_hash.c **** {
 748              		.loc 1 645 1 is_stmt 1 view -0
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 0
 751              		@ frame_needed = 0, uses_anonymous_args = 0
 752              		@ link register save eliminated.
 646:./Library/stm32f4xx_hash.c ****   /* Check the parameters */
 647:./Library/stm32f4xx_hash.c ****   assert_param(IS_HASH_CLEAR_FLAG(HASH_FLAG));
 753              		.loc 1 647 3 view .LVU196
 648:./Library/stm32f4xx_hash.c ****   
 649:./Library/stm32f4xx_hash.c ****   /* Clear the selected HASH flags */
 650:./Library/stm32f4xx_hash.c ****   HASH->SR = ~(uint32_t)HASH_FLAG;
 754              		.loc 1 650 3 view .LVU197
 755              		.loc 1 650 14 is_stmt 0 view .LVU198
 756 0000 C043     		mvns	r0, r0
 757              	.LVL27:
 758              		.loc 1 650 12 view .LVU199
 759 0002 014B     		ldr	r3, .L61
 760 0004 5862     		str	r0, [r3, #36]
 651:./Library/stm32f4xx_hash.c **** }
 761              		.loc 1 651 1 view .LVU200
 762 0006 7047     		bx	lr
 763              	.L62:
 764              		.align	2
 765              	.L61:
 766 0008 00040650 		.word	1342571520
 767              		.cfi_endproc
 768              	.LFE138:
 770              		.section	.text.HASH_GetITStatus,"ax",%progbits
 771              		.align	1
 772              		.global	HASH_GetITStatus
 773              		.syntax unified
 774              		.thumb
 775              		.thumb_func
 777              	HASH_GetITStatus:
 778              	.LVL28:
 779              	.LFB139:
 652:./Library/stm32f4xx_hash.c **** /**
 653:./Library/stm32f4xx_hash.c ****   * @brief  Checks whether the specified HASH interrupt has occurred or not.
 654:./Library/stm32f4xx_hash.c ****   * @param  HASH_IT: specifies the HASH interrupt source to check.
 655:./Library/stm32f4xx_hash.c ****   *          This parameter can be one of the following values:
 656:./Library/stm32f4xx_hash.c ****   *            @arg HASH_IT_DINI: Data Input interrupt
 657:./Library/stm32f4xx_hash.c ****   *            @arg HASH_IT_DCI: Digest Calculation Completion Interrupt
 658:./Library/stm32f4xx_hash.c ****   * @retval The new state of HASH_IT (SET or RESET).
 659:./Library/stm32f4xx_hash.c ****   */
 660:./Library/stm32f4xx_hash.c **** ITStatus HASH_GetITStatus(uint32_t HASH_IT)
 661:./Library/stm32f4xx_hash.c **** {
ARM GAS  /tmp/ccUstmVg.s 			page 26


 780              		.loc 1 661 1 is_stmt 1 view -0
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 0
 783              		@ frame_needed = 0, uses_anonymous_args = 0
 784              		@ link register save eliminated.
 662:./Library/stm32f4xx_hash.c ****   ITStatus bitstatus = RESET;
 785              		.loc 1 662 3 view .LVU202
 663:./Library/stm32f4xx_hash.c ****   uint32_t tmpreg = 0;
 786              		.loc 1 663 3 view .LVU203
 664:./Library/stm32f4xx_hash.c **** 
 665:./Library/stm32f4xx_hash.c ****   /* Check the parameters */
 666:./Library/stm32f4xx_hash.c ****   assert_param(IS_HASH_GET_IT(HASH_IT));  
 787              		.loc 1 666 3 view .LVU204
 667:./Library/stm32f4xx_hash.c **** 
 668:./Library/stm32f4xx_hash.c **** 
 669:./Library/stm32f4xx_hash.c ****   /* Check the status of the specified HASH interrupt */
 670:./Library/stm32f4xx_hash.c ****   tmpreg =  HASH->SR;
 788              		.loc 1 670 3 view .LVU205
 789              		.loc 1 670 10 is_stmt 0 view .LVU206
 790 0000 044B     		ldr	r3, .L66
 791 0002 5A6A     		ldr	r2, [r3, #36]
 792              	.LVL29:
 671:./Library/stm32f4xx_hash.c **** 
 672:./Library/stm32f4xx_hash.c ****   if (((HASH->IMR & tmpreg) & HASH_IT) != RESET)
 793              		.loc 1 672 3 is_stmt 1 view .LVU207
 794              		.loc 1 672 13 is_stmt 0 view .LVU208
 795 0004 1B6A     		ldr	r3, [r3, #32]
 796              		.loc 1 672 19 view .LVU209
 797 0006 1340     		ands	r3, r3, r2
 798              		.loc 1 672 6 view .LVU210
 799 0008 0342     		tst	r3, r0
 800 000a 01D0     		beq	.L65
 673:./Library/stm32f4xx_hash.c ****   {
 674:./Library/stm32f4xx_hash.c ****     /* HASH_IT is set */
 675:./Library/stm32f4xx_hash.c ****     bitstatus = SET;
 801              		.loc 1 675 15 view .LVU211
 802 000c 0120     		movs	r0, #1
 803              	.LVL30:
 804              		.loc 1 675 15 view .LVU212
 805 000e 7047     		bx	lr
 806              	.LVL31:
 807              	.L65:
 676:./Library/stm32f4xx_hash.c ****   }
 677:./Library/stm32f4xx_hash.c ****   else
 678:./Library/stm32f4xx_hash.c ****   {
 679:./Library/stm32f4xx_hash.c ****     /* HASH_IT is reset */
 680:./Library/stm32f4xx_hash.c ****     bitstatus = RESET;
 808              		.loc 1 680 15 view .LVU213
 809 0010 0020     		movs	r0, #0
 810              	.LVL32:
 681:./Library/stm32f4xx_hash.c ****   }
 682:./Library/stm32f4xx_hash.c ****   /* Return the HASH_IT status */
 683:./Library/stm32f4xx_hash.c ****   return bitstatus;
 811              		.loc 1 683 3 is_stmt 1 view .LVU214
 684:./Library/stm32f4xx_hash.c **** }
 812              		.loc 1 684 1 is_stmt 0 view .LVU215
 813 0012 7047     		bx	lr
ARM GAS  /tmp/ccUstmVg.s 			page 27


 814              	.L67:
 815              		.align	2
 816              	.L66:
 817 0014 00040650 		.word	1342571520
 818              		.cfi_endproc
 819              	.LFE139:
 821              		.section	.text.HASH_ClearITPendingBit,"ax",%progbits
 822              		.align	1
 823              		.global	HASH_ClearITPendingBit
 824              		.syntax unified
 825              		.thumb
 826              		.thumb_func
 828              	HASH_ClearITPendingBit:
 829              	.LVL33:
 830              	.LFB140:
 685:./Library/stm32f4xx_hash.c **** 
 686:./Library/stm32f4xx_hash.c **** /**
 687:./Library/stm32f4xx_hash.c ****   * @brief  Clears the HASH interrupt pending bit(s).
 688:./Library/stm32f4xx_hash.c ****   * @param  HASH_IT: specifies the HASH interrupt pending bit(s) to clear.
 689:./Library/stm32f4xx_hash.c ****   *          This parameter can be any combination of the following values:
 690:./Library/stm32f4xx_hash.c ****   *            @arg HASH_IT_DINI: Data Input interrupt
 691:./Library/stm32f4xx_hash.c ****   *            @arg HASH_IT_DCI: Digest Calculation Completion Interrupt
 692:./Library/stm32f4xx_hash.c ****   * @retval None
 693:./Library/stm32f4xx_hash.c ****   */
 694:./Library/stm32f4xx_hash.c **** void HASH_ClearITPendingBit(uint32_t HASH_IT)
 695:./Library/stm32f4xx_hash.c **** {
 831              		.loc 1 695 1 is_stmt 1 view -0
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 0
 834              		@ frame_needed = 0, uses_anonymous_args = 0
 835              		@ link register save eliminated.
 696:./Library/stm32f4xx_hash.c ****   /* Check the parameters */
 697:./Library/stm32f4xx_hash.c ****   assert_param(IS_HASH_IT(HASH_IT));
 836              		.loc 1 697 3 view .LVU217
 698:./Library/stm32f4xx_hash.c **** 
 699:./Library/stm32f4xx_hash.c ****   /* Clear the selected HASH interrupt pending bit */
 700:./Library/stm32f4xx_hash.c ****   HASH->SR = (uint32_t)(~HASH_IT);
 837              		.loc 1 700 3 view .LVU218
 838              		.loc 1 700 25 is_stmt 0 view .LVU219
 839 0000 C043     		mvns	r0, r0
 840              	.LVL34:
 841              		.loc 1 700 12 view .LVU220
 842 0002 014B     		ldr	r3, .L69
 843 0004 5862     		str	r0, [r3, #36]
 701:./Library/stm32f4xx_hash.c **** }
 844              		.loc 1 701 1 view .LVU221
 845 0006 7047     		bx	lr
 846              	.L70:
 847              		.align	2
 848              	.L69:
 849 0008 00040650 		.word	1342571520
 850              		.cfi_endproc
 851              	.LFE140:
 853              		.text
 854              	.Letext0:
 855              		.file 2 "/usr/lib/gcc/arm-none-eabi/12.2.1/include/stdint.h"
 856              		.file 3 "./CORE/stm32f4xx.h"
ARM GAS  /tmp/ccUstmVg.s 			page 28


 857              		.file 4 "./Library/stm32f4xx_hash.h"
 858              		.file 5 "./Library/stm32f4xx_rcc.h"
ARM GAS  /tmp/ccUstmVg.s 			page 29


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hash.c
     /tmp/ccUstmVg.s:21     .text.HASH_DeInit:0000000000000000 $t
     /tmp/ccUstmVg.s:27     .text.HASH_DeInit:0000000000000000 HASH_DeInit
     /tmp/ccUstmVg.s:54     .text.HASH_Init:0000000000000000 $t
     /tmp/ccUstmVg.s:60     .text.HASH_Init:0000000000000000 HASH_Init
     /tmp/ccUstmVg.s:142    .text.HASH_Init:000000000000004c $d
     /tmp/ccUstmVg.s:147    .text.HASH_StructInit:0000000000000000 $t
     /tmp/ccUstmVg.s:153    .text.HASH_StructInit:0000000000000000 HASH_StructInit
     /tmp/ccUstmVg.s:180    .text.HASH_Reset:0000000000000000 $t
     /tmp/ccUstmVg.s:186    .text.HASH_Reset:0000000000000000 HASH_Reset
     /tmp/ccUstmVg.s:205    .text.HASH_Reset:000000000000000c $d
     /tmp/ccUstmVg.s:210    .text.HASH_SetLastWordValidBitsNbr:0000000000000000 $t
     /tmp/ccUstmVg.s:216    .text.HASH_SetLastWordValidBitsNbr:0000000000000000 HASH_SetLastWordValidBitsNbr
     /tmp/ccUstmVg.s:245    .text.HASH_SetLastWordValidBitsNbr:0000000000000014 $d
     /tmp/ccUstmVg.s:250    .text.HASH_DataIn:0000000000000000 $t
     /tmp/ccUstmVg.s:256    .text.HASH_DataIn:0000000000000000 HASH_DataIn
     /tmp/ccUstmVg.s:273    .text.HASH_DataIn:0000000000000008 $d
     /tmp/ccUstmVg.s:278    .text.HASH_GetInFIFOWordsNbr:0000000000000000 $t
     /tmp/ccUstmVg.s:284    .text.HASH_GetInFIFOWordsNbr:0000000000000000 HASH_GetInFIFOWordsNbr
     /tmp/ccUstmVg.s:301    .text.HASH_GetInFIFOWordsNbr:000000000000000c $d
     /tmp/ccUstmVg.s:306    .text.HASH_GetDigest:0000000000000000 $t
     /tmp/ccUstmVg.s:312    .text.HASH_GetDigest:0000000000000000 HASH_GetDigest
     /tmp/ccUstmVg.s:367    .text.HASH_GetDigest:0000000000000028 $d
     /tmp/ccUstmVg.s:373    .text.HASH_StartDigest:0000000000000000 $t
     /tmp/ccUstmVg.s:379    .text.HASH_StartDigest:0000000000000000 HASH_StartDigest
     /tmp/ccUstmVg.s:398    .text.HASH_StartDigest:000000000000000c $d
     /tmp/ccUstmVg.s:403    .text.HASH_SaveContext:0000000000000000 $t
     /tmp/ccUstmVg.s:409    .text.HASH_SaveContext:0000000000000000 HASH_SaveContext
     /tmp/ccUstmVg.s:465    .text.HASH_SaveContext:0000000000000030 $d
     /tmp/ccUstmVg.s:470    .text.HASH_RestoreContext:0000000000000000 $t
     /tmp/ccUstmVg.s:476    .text.HASH_RestoreContext:0000000000000000 HASH_RestoreContext
     /tmp/ccUstmVg.s:541    .text.HASH_RestoreContext:0000000000000038 $d
     /tmp/ccUstmVg.s:546    .text.HASH_AutoStartDigest:0000000000000000 $t
     /tmp/ccUstmVg.s:552    .text.HASH_AutoStartDigest:0000000000000000 HASH_AutoStartDigest
     /tmp/ccUstmVg.s:585    .text.HASH_AutoStartDigest:000000000000001c $d
     /tmp/ccUstmVg.s:590    .text.HASH_DMACmd:0000000000000000 $t
     /tmp/ccUstmVg.s:596    .text.HASH_DMACmd:0000000000000000 HASH_DMACmd
     /tmp/ccUstmVg.s:629    .text.HASH_DMACmd:000000000000001c $d
     /tmp/ccUstmVg.s:634    .text.HASH_ITConfig:0000000000000000 $t
     /tmp/ccUstmVg.s:640    .text.HASH_ITConfig:0000000000000000 HASH_ITConfig
     /tmp/ccUstmVg.s:674    .text.HASH_ITConfig:0000000000000018 $d
     /tmp/ccUstmVg.s:679    .text.HASH_GetFlagStatus:0000000000000000 $t
     /tmp/ccUstmVg.s:685    .text.HASH_GetFlagStatus:0000000000000000 HASH_GetFlagStatus
     /tmp/ccUstmVg.s:734    .text.HASH_GetFlagStatus:000000000000001c $d
     /tmp/ccUstmVg.s:739    .text.HASH_ClearFlag:0000000000000000 $t
     /tmp/ccUstmVg.s:745    .text.HASH_ClearFlag:0000000000000000 HASH_ClearFlag
     /tmp/ccUstmVg.s:766    .text.HASH_ClearFlag:0000000000000008 $d
     /tmp/ccUstmVg.s:771    .text.HASH_GetITStatus:0000000000000000 $t
     /tmp/ccUstmVg.s:777    .text.HASH_GetITStatus:0000000000000000 HASH_GetITStatus
     /tmp/ccUstmVg.s:817    .text.HASH_GetITStatus:0000000000000014 $d
     /tmp/ccUstmVg.s:822    .text.HASH_ClearITPendingBit:0000000000000000 $t
     /tmp/ccUstmVg.s:828    .text.HASH_ClearITPendingBit:0000000000000000 HASH_ClearITPendingBit
     /tmp/ccUstmVg.s:849    .text.HASH_ClearITPendingBit:0000000000000008 $d

UNDEFINED SYMBOLS
RCC_AHB2PeriphResetCmd
ARM GAS  /tmp/ccUstmVg.s 			page 30


